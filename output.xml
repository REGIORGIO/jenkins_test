<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generator="Robot 3.1.2 (Python 3.5.3 on linux)" generated="20200323 20:54:05.684">
<suite id="s1" name="Array Test &amp; Number Test &amp; Statistics Test">
<suite id="s1-s1" name="Array Test" source="/var/lib/jenkins/workspace/robot/array_test.robot">
<test id="s1-s1-t1" name="Generatiing valid array.">
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${size}</arg>
<arg>${minimum}</arg>
<arg>${maximum}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 20:54:05.715" level="INFO">${array} = [3, 6, 5, 2, 2, 3, 8, 1, 1, 1, 5, 9, 8, 3, 10, 1, 6, 3, 3, 10, 6, 3, 8, 6, 8, 3, 8, 6, 6, 3, 8, 3, 9, 7, 2, 10, 7, 10, 5, 4, 10, 8, 10, 8, 10, 9, 9, 8, 6, 7, 5, 7, 7, 2, 7, 3, 10, 1, 10, 8, 3, 4, 5, 6...</msg>
<status starttime="20200323 20:54:05.714" status="PASS" endtime="20200323 20:54:05.715"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:54:05.718" level="INFO">${length} = 100</msg>
<status starttime="20200323 20:54:05.715" status="PASS" endtime="20200323 20:54:05.718"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:05.719" level="INFO">${min} = 1</msg>
<status starttime="20200323 20:54:05.718" status="PASS" endtime="20200323 20:54:05.719"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 20:54:05.720" level="INFO">${max} = 10</msg>
<status starttime="20200323 20:54:05.719" status="PASS" endtime="20200323 20:54:05.720"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 20:54:05.720" status="PASS" endtime="20200323 20:54:05.720"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${minimum}</arg>
</arguments>
<status starttime="20200323 20:54:05.720" status="PASS" endtime="20200323 20:54:05.721"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${maximum}</arg>
</arguments>
<status starttime="20200323 20:54:05.721" status="PASS" endtime="20200323 20:54:05.721"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:54:05.713" status="PASS" endtime="20200323 20:54:05.721" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Generatiing valid array using decorator.">
<kw name="Generate 10 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 20:54:05.723" level="INFO">${result} = [7, 5, 3, 4, 2, 2, 9, 4, 7, 8]</msg>
<status starttime="20200323 20:54:05.723" status="PASS" endtime="20200323 20:54:05.723"></status>
</kw>
<msg timestamp="20200323 20:54:05.723" level="INFO">${array} = [7, 5, 3, 4, 2, 2, 9, 4, 7, 8]</msg>
<status starttime="20200323 20:54:05.722" status="PASS" endtime="20200323 20:54:05.723"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:54:05.724" level="INFO">${length} = 10</msg>
<status starttime="20200323 20:54:05.723" status="PASS" endtime="20200323 20:54:05.724"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:05.725" level="INFO">${min} = 2</msg>
<status starttime="20200323 20:54:05.724" status="PASS" endtime="20200323 20:54:05.725"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 20:54:05.726" level="INFO">${max} = 9</msg>
<status starttime="20200323 20:54:05.725" status="PASS" endtime="20200323 20:54:05.726"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${10}</arg>
</arguments>
<status starttime="20200323 20:54:05.726" status="PASS" endtime="20200323 20:54:05.726"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 20:54:05.727" status="PASS" endtime="20200323 20:54:05.727"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${10}</arg>
</arguments>
<status starttime="20200323 20:54:05.727" status="PASS" endtime="20200323 20:54:05.727"></status>
</kw>
<tags>
<tag>MiddleTest</tag>
</tags>
<status starttime="20200323 20:54:05.722" status="PASS" endtime="20200323 20:54:05.728" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Generating valid array and search even and odd numbers.">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>even</arg>
<arg>odd</arg>
</arguments>
<assign>
<var>${types}</var>
</assign>
<msg timestamp="20200323 20:54:05.729" level="INFO">${types} = ['even', 'odd']</msg>
<status starttime="20200323 20:54:05.728" status="PASS" endtime="20200323 20:54:05.729"></status>
</kw>
<kw name="Generate 100 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 20:54:05.729" level="INFO">${result} = [6, 10, 7, 2, 10, 3, 8, 4, 2, 9, 4, 2, 1, 10, 3, 7, 9, 6, 6, 7, 1, 10, 4, 4, 8, 2, 6, 1, 1, 10, 4, 9, 1, 3, 2, 6, 1, 5, 4, 4, 2, 7, 10, 5, 6, 5, 2, 10, 2, 1, 6, 3, 4, 9, 6, 9, 4, 9, 8, 7, 8, 4, 5, 1, ...</msg>
<status starttime="20200323 20:54:05.729" status="PASS" endtime="20200323 20:54:05.730"></status>
</kw>
<msg timestamp="20200323 20:54:05.730" level="INFO">${array} = [6, 10, 7, 2, 10, 3, 8, 4, 2, 9, 4, 2, 1, 10, 3, 7, 9, 6, 6, 7, 1, 10, 4, 4, 8, 2, 6, 1, 1, 10, 4, 9, 1, 3, 2, 6, 1, 5, 4, 4, 2, 7, 10, 5, 6, 5, 2, 10, 2, 1, 6, 3, 4, 9, 6, 9, 4, 9, 8, 7, 8, 4, 5, 1, ...</msg>
<status starttime="20200323 20:54:05.729" status="PASS" endtime="20200323 20:54:05.730"></status>
</kw>
<kw name="${type} IN [ @{types} ]" type="for">
<kw name="${type} = even" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find even number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 == 0]</arg>
</arguments>
<assign>
<var>${evens}</var>
</assign>
<msg timestamp="20200323 20:54:05.733" level="INFO">${evens} = [6, 10, 2, 10, 8, 4, 2, 4, 2, 10, 6, 6, 10, 4, 4, 8, 2, 6, 10, 4, 2, 6, 4, 4, 2, 10, 6, 2, 10, 2, 6, 4, 6, 4, 8, 8, 4, 10, 10, 2, 8, 6, 2, 2, 8, 8, 6, 6, 10, 6, 8, 10, 10, 2, 10]</msg>
<status starttime="20200323 20:54:05.732" status="PASS" endtime="20200323 20:54:05.733"></status>
</kw>
<status starttime="20200323 20:54:05.731" status="PASS" endtime="20200323 20:54:05.733"></status>
</kw>
<msg timestamp="20200323 20:54:05.733" level="INFO">${numbers} = [6, 10, 2, 10, 8, 4, 2, 4, 2, 10, 6, 6, 10, 4, 4, 8, 2, 6, 10, 4, 2, 6, 4, 4, 2, 10, 6, 2, 10, 2, 6, 4, 6, 4, 8, 8, 4, 10, 10, 2, 8, 6, 2, 2, 8, 8, 6, 6, 10, 6, 8, 10, 10, 2, 10]</msg>
<status starttime="20200323 20:54:05.730" status="PASS" endtime="20200323 20:54:05.733"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:54:05.734" level="INFO">${length} = 55</msg>
<status starttime="20200323 20:54:05.733" status="PASS" endtime="20200323 20:54:05.734"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 20:54:05.734" status="PASS" endtime="20200323 20:54:05.735"></status>
</kw>
<status starttime="20200323 20:54:05.730" status="PASS" endtime="20200323 20:54:05.735"></status>
</kw>
<kw name="${type} = odd" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find odd number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 != 0]</arg>
</arguments>
<assign>
<var>${odds}</var>
</assign>
<msg timestamp="20200323 20:54:05.736" level="INFO">${odds} = [7, 3, 9, 1, 3, 7, 9, 7, 1, 1, 1, 9, 1, 3, 1, 5, 7, 5, 5, 1, 3, 9, 9, 9, 7, 5, 1, 7, 7, 9, 1, 7, 1, 1, 5, 9, 9, 7, 9, 9, 9, 9, 5, 5, 3]</msg>
<status starttime="20200323 20:54:05.735" status="PASS" endtime="20200323 20:54:05.736"></status>
</kw>
<status starttime="20200323 20:54:05.735" status="PASS" endtime="20200323 20:54:05.736"></status>
</kw>
<msg timestamp="20200323 20:54:05.736" level="INFO">${numbers} = [7, 3, 9, 1, 3, 7, 9, 7, 1, 1, 1, 9, 1, 3, 1, 5, 7, 5, 5, 1, 3, 9, 9, 9, 7, 5, 1, 7, 7, 9, 1, 7, 1, 1, 5, 9, 9, 7, 9, 9, 9, 9, 5, 5, 3]</msg>
<status starttime="20200323 20:54:05.735" status="PASS" endtime="20200323 20:54:05.736"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:54:05.737" level="INFO">${length} = 45</msg>
<status starttime="20200323 20:54:05.737" status="PASS" endtime="20200323 20:54:05.737"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 20:54:05.737" status="PASS" endtime="20200323 20:54:05.738"></status>
</kw>
<status starttime="20200323 20:54:05.735" status="PASS" endtime="20200323 20:54:05.738"></status>
</kw>
<status starttime="20200323 20:54:05.730" status="PASS" endtime="20200323 20:54:05.738"></status>
</kw>
<tags>
<tag>HardTest</tag>
</tags>
<status starttime="20200323 20:54:05.728" status="PASS" endtime="20200323 20:54:05.738" critical="yes"></status>
</test>
<doc>Python and Robot Framework.</doc>
<status starttime="20200323 20:54:05.708" status="PASS" endtime="20200323 20:54:05.738"></status>
</suite>
<suite id="s1-s2" name="Number Test" source="/var/lib/jenkins/workspace/robot/number_test.robot">
<test id="s1-s2-t1" name="Search for the minimum.">
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:05.742" level="INFO">${min} = 5</msg>
<status starttime="20200323 20:54:05.742" status="PASS" endtime="20200323 20:54:05.742"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 20:54:05.742" status="PASS" endtime="20200323 20:54:05.742"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:05.743" level="INFO">${min} = -5</msg>
<status starttime="20200323 20:54:05.743" status="PASS" endtime="20200323 20:54:05.743"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${-5}</arg>
</arguments>
<status starttime="20200323 20:54:05.743" status="PASS" endtime="20200323 20:54:05.743"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:05.744" level="INFO">${min} = 5</msg>
<status starttime="20200323 20:54:05.743" status="PASS" endtime="20200323 20:54:05.744"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 20:54:05.744" status="PASS" endtime="20200323 20:54:05.744"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:54:05.741" status="PASS" endtime="20200323 20:54:05.744" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Search for the maximum.">
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:05.745" level="INFO">${min} = 10</msg>
<status starttime="20200323 20:54:05.745" status="PASS" endtime="20200323 20:54:05.745"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${10}</arg>
</arguments>
<status starttime="20200323 20:54:05.745" status="PASS" endtime="20200323 20:54:05.745"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:05.746" level="INFO">${min} = 0</msg>
<status starttime="20200323 20:54:05.745" status="PASS" endtime="20200323 20:54:05.746"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${0}</arg>
</arguments>
<status starttime="20200323 20:54:05.746" status="PASS" endtime="20200323 20:54:05.746"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:05.747" level="INFO">${min} = 5</msg>
<status starttime="20200323 20:54:05.746" status="PASS" endtime="20200323 20:54:05.747"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 20:54:05.747" status="PASS" endtime="20200323 20:54:05.747"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:54:05.744" status="PASS" endtime="20200323 20:54:05.747" critical="yes"></status>
</test>
<doc>Robot Framework tests.</doc>
<status starttime="20200323 20:54:05.739" status="PASS" endtime="20200323 20:54:05.749"></status>
</suite>
<suite id="s1-s3" name="Statistics Test" source="/var/lib/jenkins/workspace/robot/statistics_test.robot">
<test id="s1-s3-t1" name="Generate valid uniform array">
<kw name="Generate uniform array" library="libraries.Distributions">
<arguments>
<arg>${low}</arg>
<arg>${up}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 20:54:06.145" level="INFO">${array} = [65 22 73 ... 97 88 39]</msg>
<status starttime="20200323 20:54:06.144" status="PASS" endtime="20200323 20:54:06.145"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:54:06.146" level="INFO">${length} = 10000</msg>
<status starttime="20200323 20:54:06.146" status="PASS" endtime="20200323 20:54:06.146"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:06.148" level="INFO">${min} = 1</msg>
<status starttime="20200323 20:54:06.146" status="PASS" endtime="20200323 20:54:06.148"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 20:54:06.150" level="INFO">${max} = 99</msg>
<status starttime="20200323 20:54:06.148" status="PASS" endtime="20200323 20:54:06.150"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($up + $low) / 2</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 20:54:06.151" level="INFO">${m_theory} = 50.5</msg>
<status starttime="20200323 20:54:06.150" status="PASS" endtime="20200323 20:54:06.151"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 20:54:06.152" level="INFO">${m_practice} = 49.6945</msg>
<status starttime="20200323 20:54:06.151" status="PASS" endtime="20200323 20:54:06.152"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(($up - $low + 1)**2 - 1) / 12</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 20:54:06.153" level="INFO">${d_theory} = 833.25</msg>
<status starttime="20200323 20:54:06.152" status="PASS" endtime="20200323 20:54:06.153"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 20:54:06.185" level="INFO">${deviation} = 818.4556</msg>
<status starttime="20200323 20:54:06.154" status="PASS" endtime="20200323 20:54:06.185"></status>
</kw>
<msg timestamp="20200323 20:54:06.185" level="INFO">${d_practice} = 818.4556</msg>
<status starttime="20200323 20:54:06.153" status="PASS" endtime="20200323 20:54:06.185"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 20:54:06.185" status="PASS" endtime="20200323 20:54:06.185"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${low}</arg>
</arguments>
<status starttime="20200323 20:54:06.186" status="PASS" endtime="20200323 20:54:06.186"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${up}</arg>
</arguments>
<status starttime="20200323 20:54:06.186" status="PASS" endtime="20200323 20:54:06.186"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:54:06.187" status="PASS" endtime="20200323 20:54:06.187"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:54:06.187" status="PASS" endtime="20200323 20:54:06.188"></status>
</kw>
<doc>Uniform distribution test.Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:54:06.144" status="PASS" endtime="20200323 20:54:06.188" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Generate valid binomial array">
<kw name="Generate binomial array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${n}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 20:54:06.191" level="INFO">${array} = [ 7 10  6 ...  9 13  8]</msg>
<status starttime="20200323 20:54:06.189" status="PASS" endtime="20200323 20:54:06.191"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:54:06.192" level="INFO">${length} = 10000</msg>
<status starttime="20200323 20:54:06.191" status="PASS" endtime="20200323 20:54:06.192"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:06.194" level="INFO">${min} = 2</msg>
<status starttime="20200323 20:54:06.192" status="PASS" endtime="20200323 20:54:06.194"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 20:54:06.196" level="INFO">${max} = 18</msg>
<status starttime="20200323 20:54:06.194" status="PASS" endtime="20200323 20:54:06.196"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$n * $p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 20:54:06.196" level="INFO">${m_theory} = 10.0</msg>
<status starttime="20200323 20:54:06.196" status="PASS" endtime="20200323 20:54:06.196"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 20:54:06.197" level="INFO">${m_practice} = 10.041</msg>
<status starttime="20200323 20:54:06.197" status="PASS" endtime="20200323 20:54:06.198"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($p * $n * (1-$p))</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 20:54:06.198" level="INFO">${d_theory} = 5.0</msg>
<status starttime="20200323 20:54:06.198" status="PASS" endtime="20200323 20:54:06.199"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 20:54:06.229" level="INFO">${deviation} = 4.9266</msg>
<status starttime="20200323 20:54:06.199" status="PASS" endtime="20200323 20:54:06.229"></status>
</kw>
<msg timestamp="20200323 20:54:06.229" level="INFO">${d_practice} = 4.9266</msg>
<status starttime="20200323 20:54:06.199" status="PASS" endtime="20200323 20:54:06.229"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 20:54:06.229" status="PASS" endtime="20200323 20:54:06.230"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 20:54:06.230" status="PASS" endtime="20200323 20:54:06.230"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${n}</arg>
</arguments>
<status starttime="20200323 20:54:06.230" status="PASS" endtime="20200323 20:54:06.231"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:54:06.231" status="PASS" endtime="20200323 20:54:06.231"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:54:06.231" status="PASS" endtime="20200323 20:54:06.232"></status>
</kw>
<doc>Binomial distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:54:06.188" status="PASS" endtime="20200323 20:54:06.232" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="Generate valid geometric array">
<kw name="Generate geometric array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 20:54:06.234" level="INFO">${array} = [1 1 2 ... 1 1 1]</msg>
<status starttime="20200323 20:54:06.233" status="PASS" endtime="20200323 20:54:06.234"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:54:06.235" level="INFO">${length} = 10000</msg>
<status starttime="20200323 20:54:06.234" status="PASS" endtime="20200323 20:54:06.235"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:06.237" level="INFO">${min} = 1</msg>
<status starttime="20200323 20:54:06.235" status="PASS" endtime="20200323 20:54:06.237"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1/$p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 20:54:06.238" level="INFO">${m_theory} = 2.0</msg>
<status starttime="20200323 20:54:06.237" status="PASS" endtime="20200323 20:54:06.238"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 20:54:06.239" level="INFO">${m_practice} = 2.009</msg>
<status starttime="20200323 20:54:06.238" status="PASS" endtime="20200323 20:54:06.239"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(1-$p)/($p**2)</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 20:54:06.240" level="INFO">${d_theory} = 2.0</msg>
<status starttime="20200323 20:54:06.239" status="PASS" endtime="20200323 20:54:06.240"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 20:54:06.270" level="INFO">${deviation} = 2.0458</msg>
<status starttime="20200323 20:54:06.240" status="PASS" endtime="20200323 20:54:06.270"></status>
</kw>
<msg timestamp="20200323 20:54:06.270" level="INFO">${d_practice} = 2.0458</msg>
<status starttime="20200323 20:54:06.240" status="PASS" endtime="20200323 20:54:06.270"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 20:54:06.270" status="PASS" endtime="20200323 20:54:06.271"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 20:54:06.271" status="PASS" endtime="20200323 20:54:06.271"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:54:06.271" status="PASS" endtime="20200323 20:54:06.272"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:54:06.272" status="PASS" endtime="20200323 20:54:06.273"></status>
</kw>
<doc>geometric distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:54:06.232" status="PASS" endtime="20200323 20:54:06.273" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="Generate valid poisson array">
<kw name="Generate poisson array with mu ${mu} and size ${size}">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate poisson array" library="libraries.Distributions">
<arguments>
<arg>${mu}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 20:54:06.277" level="INFO">${result} = [ 6 10  4 ...  4  8 11]</msg>
<status starttime="20200323 20:54:06.274" status="PASS" endtime="20200323 20:54:06.277"></status>
</kw>
<msg timestamp="20200323 20:54:06.277" level="INFO">${array} = [ 6 10  4 ...  4  8 11]</msg>
<status starttime="20200323 20:54:06.274" status="PASS" endtime="20200323 20:54:06.277"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:54:06.278" level="INFO">${length} = 10000</msg>
<status starttime="20200323 20:54:06.278" status="PASS" endtime="20200323 20:54:06.278"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:54:06.281" level="INFO">${min} = 0</msg>
<status starttime="20200323 20:54:06.278" status="PASS" endtime="20200323 20:54:06.281"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 20:54:06.282" level="INFO">${m_theory} = 10</msg>
<status starttime="20200323 20:54:06.281" status="PASS" endtime="20200323 20:54:06.282"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 20:54:06.283" level="INFO">${m_practice} = 10.0128</msg>
<status starttime="20200323 20:54:06.282" status="PASS" endtime="20200323 20:54:06.283"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 20:54:06.284" level="INFO">${d_theory} = 10</msg>
<status starttime="20200323 20:54:06.283" status="PASS" endtime="20200323 20:54:06.284"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 20:54:06.293" level="INFO">${deviation} = 9.9768</msg>
<status starttime="20200323 20:54:06.284" status="PASS" endtime="20200323 20:54:06.293"></status>
</kw>
<msg timestamp="20200323 20:54:06.293" level="INFO">${d_practice} = 9.9768</msg>
<status starttime="20200323 20:54:06.284" status="PASS" endtime="20200323 20:54:06.293"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 20:54:06.293" status="PASS" endtime="20200323 20:54:06.294"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 20:54:06.294" status="PASS" endtime="20200323 20:54:06.294"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:54:06.295" status="PASS" endtime="20200323 20:54:06.295"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:54:06.295" status="PASS" endtime="20200323 20:54:06.296"></status>
</kw>
<doc>Poisson distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>MiddleTest</tag>
</tags>
<status starttime="20200323 20:54:06.273" status="PASS" endtime="20200323 20:54:06.296" critical="yes"></status>
</test>
<doc>Discrete distribution and Robot Framework.</doc>
<status starttime="20200323 20:54:05.750" status="PASS" endtime="20200323 20:54:06.296"></status>
</suite>
<status starttime="20200323 20:54:05.685" status="PASS" endtime="20200323 20:54:06.298"></status>
</suite>
<statistics>
<total>
<stat pass="9" fail="0">Critical Tests</stat>
<stat pass="9" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">HardTest</stat>
<stat pass="2" fail="0">MiddleTest</stat>
<stat pass="6" fail="0">SimpleTest</stat>
</tag>
<suite>
<stat pass="9" fail="0" id="s1" name="Array Test &amp; Number Test &amp; Statistics Test">Array Test &amp; Number Test &amp; Statistics Test</stat>
<stat pass="3" fail="0" id="s1-s1" name="Array Test">Array Test &amp; Number Test &amp; Statistics Test.Array Test</stat>
<stat pass="2" fail="0" id="s1-s2" name="Number Test">Array Test &amp; Number Test &amp; Statistics Test.Number Test</stat>
<stat pass="4" fail="0" id="s1-s3" name="Statistics Test">Array Test &amp; Number Test &amp; Statistics Test.Statistics Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
