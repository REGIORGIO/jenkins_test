<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.5.3 on linux)" generated="20200323 21:10:10.949" rpa="false">
<suite name="Array Test &amp; Number Test &amp; Statistics Test" id="s1">
<suite name="Array Test" source="/var/lib/jenkins/workspace/robot/array_test.robot" id="s1-s1">
<test name="Generatiing valid array." id="s1-s1-t1">
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${size}</arg>
<arg>${minimum}</arg>
<arg>${maximum}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 21:10:10.980" level="INFO">${array} = [6, 6, 6, 2, 5, 9, 8, 9, 3, 4, 3, 6, 9, 3, 3, 8, 9, 2, 9, 10, 10, 6, 1, 7, 3, 1, 9, 1, 4, 5, 6, 6, 2, 9, 3, 5, 9, 4, 5, 4, 4, 7, 10, 10, 8, 10, 10, 5, 6, 2, 2, 8, 1, 2, 5, 5, 9, 3, 9, 10, 5, 6, 10, 6,...</msg>
<status starttime="20200323 21:10:10.979" status="PASS" endtime="20200323 21:10:10.980"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 21:10:10.983" level="INFO">${length} = 100</msg>
<status starttime="20200323 21:10:10.980" status="PASS" endtime="20200323 21:10:10.983"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:10.984" level="INFO">${min} = 1</msg>
<status starttime="20200323 21:10:10.983" status="PASS" endtime="20200323 21:10:10.984"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 21:10:10.984" level="INFO">${max} = 10</msg>
<status starttime="20200323 21:10:10.984" status="PASS" endtime="20200323 21:10:10.984"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 21:10:10.985" status="PASS" endtime="20200323 21:10:10.985"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${minimum}</arg>
</arguments>
<status starttime="20200323 21:10:10.985" status="PASS" endtime="20200323 21:10:10.985"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${maximum}</arg>
</arguments>
<status starttime="20200323 21:10:10.986" status="PASS" endtime="20200323 21:10:10.986"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:10:10.978" status="PASS" endtime="20200323 21:10:10.986" critical="yes"></status>
</test>
<test name="Generatiing valid array using decorator." id="s1-s1-t2">
<kw name="Generate 10 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 21:10:10.987" level="INFO">${result} = [4, 6, 6, 2, 8, 8, 10, 9, 10, 6]</msg>
<status starttime="20200323 21:10:10.987" status="PASS" endtime="20200323 21:10:10.987"></status>
</kw>
<msg timestamp="20200323 21:10:10.988" level="INFO">${array} = [4, 6, 6, 2, 8, 8, 10, 9, 10, 6]</msg>
<status starttime="20200323 21:10:10.987" status="PASS" endtime="20200323 21:10:10.988"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 21:10:10.988" level="INFO">${length} = 10</msg>
<status starttime="20200323 21:10:10.988" status="PASS" endtime="20200323 21:10:10.988"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:10.989" level="INFO">${min} = 2</msg>
<status starttime="20200323 21:10:10.989" status="PASS" endtime="20200323 21:10:10.989"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 21:10:10.990" level="INFO">${max} = 10</msg>
<status starttime="20200323 21:10:10.989" status="PASS" endtime="20200323 21:10:10.990"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${10}</arg>
</arguments>
<status starttime="20200323 21:10:10.990" status="PASS" endtime="20200323 21:10:10.991"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 21:10:10.991" status="PASS" endtime="20200323 21:10:10.991"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${10}</arg>
</arguments>
<status starttime="20200323 21:10:10.991" status="PASS" endtime="20200323 21:10:10.991"></status>
</kw>
<tags>
<tag>MiddleTest</tag>
</tags>
<status starttime="20200323 21:10:10.986" status="PASS" endtime="20200323 21:10:10.991" critical="yes"></status>
</test>
<test name="Generating valid array and search even and odd numbers." id="s1-s1-t3">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>even</arg>
<arg>odd</arg>
</arguments>
<assign>
<var>${types}</var>
</assign>
<msg timestamp="20200323 21:10:10.992" level="INFO">${types} = ['even', 'odd']</msg>
<status starttime="20200323 21:10:10.992" status="PASS" endtime="20200323 21:10:10.992"></status>
</kw>
<kw name="Generate 100 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 21:10:10.993" level="INFO">${result} = [9, 4, 5, 5, 2, 4, 8, 5, 5, 6, 7, 4, 10, 2, 3, 2, 4, 2, 6, 10, 8, 3, 6, 9, 8, 5, 6, 9, 5, 8, 10, 3, 4, 2, 4, 2, 7, 4, 1, 5, 8, 1, 7, 1, 8, 2, 8, 7, 10, 5, 9, 8, 10, 1, 10, 7, 3, 2, 4, 2, 2, 4, 3, 4, 7...</msg>
<status starttime="20200323 21:10:10.993" status="PASS" endtime="20200323 21:10:10.993"></status>
</kw>
<msg timestamp="20200323 21:10:10.994" level="INFO">${array} = [9, 4, 5, 5, 2, 4, 8, 5, 5, 6, 7, 4, 10, 2, 3, 2, 4, 2, 6, 10, 8, 3, 6, 9, 8, 5, 6, 9, 5, 8, 10, 3, 4, 2, 4, 2, 7, 4, 1, 5, 8, 1, 7, 1, 8, 2, 8, 7, 10, 5, 9, 8, 10, 1, 10, 7, 3, 2, 4, 2, 2, 4, 3, 4, 7...</msg>
<status starttime="20200323 21:10:10.993" status="PASS" endtime="20200323 21:10:10.994"></status>
</kw>
<kw type="for" name="${type} IN [ @{types} ]">
<kw type="foritem" name="${type} = even">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find even number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 == 0]</arg>
</arguments>
<assign>
<var>${evens}</var>
</assign>
<msg timestamp="20200323 21:10:10.996" level="INFO">${evens} = [4, 2, 4, 8, 6, 4, 10, 2, 2, 4, 2, 6, 10, 8, 6, 8, 6, 8, 10, 4, 2, 4, 2, 4, 8, 8, 2, 8, 10, 8, 10, 10, 2, 4, 2, 2, 4, 4, 8, 10, 2, 8, 8, 8, 2, 4, 10, 2, 10, 8]</msg>
<status starttime="20200323 21:10:10.995" status="PASS" endtime="20200323 21:10:10.996"></status>
</kw>
<status starttime="20200323 21:10:10.995" status="PASS" endtime="20200323 21:10:10.997"></status>
</kw>
<msg timestamp="20200323 21:10:10.997" level="INFO">${numbers} = [4, 2, 4, 8, 6, 4, 10, 2, 2, 4, 2, 6, 10, 8, 6, 8, 6, 8, 10, 4, 2, 4, 2, 4, 8, 8, 2, 8, 10, 8, 10, 10, 2, 4, 2, 2, 4, 4, 8, 10, 2, 8, 8, 8, 2, 4, 10, 2, 10, 8]</msg>
<status starttime="20200323 21:10:10.994" status="PASS" endtime="20200323 21:10:10.997"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 21:10:10.998" level="INFO">${length} = 50</msg>
<status starttime="20200323 21:10:10.997" status="PASS" endtime="20200323 21:10:10.998"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 21:10:10.998" status="PASS" endtime="20200323 21:10:10.998"></status>
</kw>
<status starttime="20200323 21:10:10.994" status="PASS" endtime="20200323 21:10:10.998"></status>
</kw>
<kw type="foritem" name="${type} = odd">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find odd number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 != 0]</arg>
</arguments>
<assign>
<var>${odds}</var>
</assign>
<msg timestamp="20200323 21:10:11.000" level="INFO">${odds} = [9, 5, 5, 5, 5, 7, 3, 3, 9, 5, 9, 5, 3, 7, 1, 5, 1, 7, 1, 7, 5, 9, 1, 7, 3, 3, 7, 5, 1, 3, 7, 7, 5, 3, 1, 5, 3, 7, 1, 1, 7, 1, 7, 5, 7, 1, 1, 3, 9, 9]</msg>
<status starttime="20200323 21:10:10.999" status="PASS" endtime="20200323 21:10:11.000"></status>
</kw>
<status starttime="20200323 21:10:10.998" status="PASS" endtime="20200323 21:10:11.000"></status>
</kw>
<msg timestamp="20200323 21:10:11.000" level="INFO">${numbers} = [9, 5, 5, 5, 5, 7, 3, 3, 9, 5, 9, 5, 3, 7, 1, 5, 1, 7, 1, 7, 5, 9, 1, 7, 3, 3, 7, 5, 1, 3, 7, 7, 5, 3, 1, 5, 3, 7, 1, 1, 7, 1, 7, 5, 7, 1, 1, 3, 9, 9]</msg>
<status starttime="20200323 21:10:10.998" status="PASS" endtime="20200323 21:10:11.000"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 21:10:11.001" level="INFO">${length} = 50</msg>
<status starttime="20200323 21:10:11.000" status="PASS" endtime="20200323 21:10:11.001"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 21:10:11.001" status="PASS" endtime="20200323 21:10:11.001"></status>
</kw>
<status starttime="20200323 21:10:10.998" status="PASS" endtime="20200323 21:10:11.001"></status>
</kw>
<status starttime="20200323 21:10:10.994" status="PASS" endtime="20200323 21:10:11.001"></status>
</kw>
<tags>
<tag>HardTest</tag>
</tags>
<status starttime="20200323 21:10:10.992" status="PASS" endtime="20200323 21:10:11.001" critical="yes"></status>
</test>
<doc>Python and Robot Framework.</doc>
<status starttime="20200323 21:10:10.973" status="PASS" endtime="20200323 21:10:11.002"></status>
</suite>
<suite name="Number Test" source="/var/lib/jenkins/workspace/robot/number_test.robot" id="s1-s2">
<test name="Search for the minimum." id="s1-s2-t1">
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:11.006" level="INFO">${min} = 5</msg>
<status starttime="20200323 21:10:11.005" status="PASS" endtime="20200323 21:10:11.006"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 21:10:11.006" status="PASS" endtime="20200323 21:10:11.006"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:11.007" level="INFO">${min} = -5</msg>
<status starttime="20200323 21:10:11.006" status="PASS" endtime="20200323 21:10:11.007"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${-5}</arg>
</arguments>
<status starttime="20200323 21:10:11.007" status="PASS" endtime="20200323 21:10:11.007"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:11.007" level="INFO">${min} = 5</msg>
<status starttime="20200323 21:10:11.007" status="PASS" endtime="20200323 21:10:11.007"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 21:10:11.007" status="PASS" endtime="20200323 21:10:11.008"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:10:11.005" status="PASS" endtime="20200323 21:10:11.008" critical="yes"></status>
</test>
<test name="Search for the maximum." id="s1-s2-t2">
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:11.009" level="INFO">${min} = 10</msg>
<status starttime="20200323 21:10:11.008" status="PASS" endtime="20200323 21:10:11.009"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${10}</arg>
</arguments>
<status starttime="20200323 21:10:11.009" status="PASS" endtime="20200323 21:10:11.009"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:11.010" level="INFO">${min} = 0</msg>
<status starttime="20200323 21:10:11.009" status="PASS" endtime="20200323 21:10:11.010"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${0}</arg>
</arguments>
<status starttime="20200323 21:10:11.010" status="PASS" endtime="20200323 21:10:11.010"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:11.010" level="INFO">${min} = 5</msg>
<status starttime="20200323 21:10:11.010" status="PASS" endtime="20200323 21:10:11.011"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 21:10:11.011" status="PASS" endtime="20200323 21:10:11.011"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:10:11.008" status="PASS" endtime="20200323 21:10:11.011" critical="yes"></status>
</test>
<doc>Robot Framework tests.</doc>
<status starttime="20200323 21:10:11.003" status="PASS" endtime="20200323 21:10:11.011"></status>
</suite>
<suite name="Statistics Test" source="/var/lib/jenkins/workspace/robot/statistics_test.robot" id="s1-s3">
<test name="Generate valid uniform array" id="s1-s3-t1">
<kw name="Generate uniform array" library="libraries.Distributions">
<arguments>
<arg>${low}</arg>
<arg>${up}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 21:10:11.418" level="INFO">${array} = [24 70 10 ... 55 47  7]</msg>
<status starttime="20200323 21:10:11.417" status="PASS" endtime="20200323 21:10:11.418"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 21:10:11.419" level="INFO">${length} = 10000</msg>
<status starttime="20200323 21:10:11.418" status="PASS" endtime="20200323 21:10:11.419"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:11.421" level="INFO">${min} = 1</msg>
<status starttime="20200323 21:10:11.419" status="PASS" endtime="20200323 21:10:11.421"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 21:10:11.423" level="INFO">${max} = 99</msg>
<status starttime="20200323 21:10:11.421" status="PASS" endtime="20200323 21:10:11.423"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($up + $low) / 2</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 21:10:11.424" level="INFO">${m_theory} = 50.5</msg>
<status starttime="20200323 21:10:11.423" status="PASS" endtime="20200323 21:10:11.424"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 21:10:11.425" level="INFO">${m_practice} = 50.4704</msg>
<status starttime="20200323 21:10:11.424" status="PASS" endtime="20200323 21:10:11.425"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(($up - $low + 1)**2 - 1) / 12</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 21:10:11.426" level="INFO">${d_theory} = 833.25</msg>
<status starttime="20200323 21:10:11.425" status="PASS" endtime="20200323 21:10:11.426"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 21:10:11.457" level="INFO">${deviation} = 827.0568</msg>
<status starttime="20200323 21:10:11.426" status="PASS" endtime="20200323 21:10:11.457"></status>
</kw>
<msg timestamp="20200323 21:10:11.458" level="INFO">${d_practice} = 827.0568</msg>
<status starttime="20200323 21:10:11.426" status="PASS" endtime="20200323 21:10:11.458"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 21:10:11.458" status="PASS" endtime="20200323 21:10:11.458"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${low}</arg>
</arguments>
<status starttime="20200323 21:10:11.458" status="PASS" endtime="20200323 21:10:11.459"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${up}</arg>
</arguments>
<status starttime="20200323 21:10:11.459" status="PASS" endtime="20200323 21:10:11.459"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:10:11.460" status="PASS" endtime="20200323 21:10:11.460"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:10:11.460" status="PASS" endtime="20200323 21:10:11.461"></status>
</kw>
<doc>Uniform distribution test.Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:10:11.416" status="PASS" endtime="20200323 21:10:11.461" critical="yes"></status>
</test>
<test name="Generate valid binomial array" id="s1-s3-t2">
<kw name="Generate binomial array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${n}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 21:10:11.464" level="INFO">${array} = [11 10  9 ... 11 13 10]</msg>
<status starttime="20200323 21:10:11.462" status="PASS" endtime="20200323 21:10:11.464"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 21:10:11.465" level="INFO">${length} = 10000</msg>
<status starttime="20200323 21:10:11.464" status="PASS" endtime="20200323 21:10:11.465"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:11.467" level="INFO">${min} = 2</msg>
<status starttime="20200323 21:10:11.465" status="PASS" endtime="20200323 21:10:11.467"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 21:10:11.469" level="INFO">${max} = 18</msg>
<status starttime="20200323 21:10:11.467" status="PASS" endtime="20200323 21:10:11.469"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$n * $p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 21:10:11.470" level="INFO">${m_theory} = 10.0</msg>
<status starttime="20200323 21:10:11.469" status="PASS" endtime="20200323 21:10:11.470"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 21:10:11.471" level="INFO">${m_practice} = 10.0206</msg>
<status starttime="20200323 21:10:11.470" status="PASS" endtime="20200323 21:10:11.471"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($p * $n * (1-$p))</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 21:10:11.472" level="INFO">${d_theory} = 5.0</msg>
<status starttime="20200323 21:10:11.471" status="PASS" endtime="20200323 21:10:11.472"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 21:10:11.503" level="INFO">${deviation} = 4.8736</msg>
<status starttime="20200323 21:10:11.473" status="PASS" endtime="20200323 21:10:11.503"></status>
</kw>
<msg timestamp="20200323 21:10:11.503" level="INFO">${d_practice} = 4.8736</msg>
<status starttime="20200323 21:10:11.472" status="PASS" endtime="20200323 21:10:11.503"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 21:10:11.503" status="PASS" endtime="20200323 21:10:11.504"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 21:10:11.504" status="PASS" endtime="20200323 21:10:11.504"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${n}</arg>
</arguments>
<status starttime="20200323 21:10:11.504" status="PASS" endtime="20200323 21:10:11.505"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:10:11.505" status="PASS" endtime="20200323 21:10:11.505"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:10:11.505" status="PASS" endtime="20200323 21:10:11.506"></status>
</kw>
<doc>Binomial distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:10:11.461" status="PASS" endtime="20200323 21:10:11.506" critical="yes"></status>
</test>
<test name="Generate valid geometric array" id="s1-s3-t3">
<kw name="Generate geometric array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 21:10:11.508" level="INFO">${array} = [2 2 5 ... 1 1 3]</msg>
<status starttime="20200323 21:10:11.507" status="PASS" endtime="20200323 21:10:11.508"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 21:10:11.509" level="INFO">${length} = 10000</msg>
<status starttime="20200323 21:10:11.508" status="PASS" endtime="20200323 21:10:11.509"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:11.511" level="INFO">${min} = 1</msg>
<status starttime="20200323 21:10:11.509" status="PASS" endtime="20200323 21:10:11.511"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1/$p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 21:10:11.512" level="INFO">${m_theory} = 2.0</msg>
<status starttime="20200323 21:10:11.511" status="PASS" endtime="20200323 21:10:11.512"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 21:10:11.513" level="INFO">${m_practice} = 1.9937</msg>
<status starttime="20200323 21:10:11.512" status="PASS" endtime="20200323 21:10:11.513"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(1-$p)/($p**2)</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 21:10:11.514" level="INFO">${d_theory} = 2.0</msg>
<status starttime="20200323 21:10:11.513" status="PASS" endtime="20200323 21:10:11.514"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 21:10:11.557" level="INFO">${deviation} = 1.9737</msg>
<status starttime="20200323 21:10:11.514" status="PASS" endtime="20200323 21:10:11.557"></status>
</kw>
<msg timestamp="20200323 21:10:11.558" level="INFO">${d_practice} = 1.9737</msg>
<status starttime="20200323 21:10:11.514" status="PASS" endtime="20200323 21:10:11.558"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 21:10:11.558" status="PASS" endtime="20200323 21:10:11.558"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 21:10:11.558" status="PASS" endtime="20200323 21:10:11.559"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:10:11.559" status="PASS" endtime="20200323 21:10:11.559"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:10:11.559" status="PASS" endtime="20200323 21:10:11.560"></status>
</kw>
<doc>geometric distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:10:11.506" status="PASS" endtime="20200323 21:10:11.560" critical="yes"></status>
</test>
<test name="Generate valid poisson array" id="s1-s3-t4">
<kw name="Generate poisson array with mu ${mu} and size ${size}">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate poisson array" library="libraries.Distributions">
<arguments>
<arg>${mu}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 21:10:11.565" level="INFO">${result} = [13  6 13 ... 11 15 18]</msg>
<status starttime="20200323 21:10:11.562" status="PASS" endtime="20200323 21:10:11.565"></status>
</kw>
<msg timestamp="20200323 21:10:11.565" level="INFO">${array} = [13  6 13 ... 11 15 18]</msg>
<status starttime="20200323 21:10:11.561" status="PASS" endtime="20200323 21:10:11.565"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 21:10:11.566" level="INFO">${length} = 10000</msg>
<status starttime="20200323 21:10:11.565" status="PASS" endtime="20200323 21:10:11.566"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 21:10:11.568" level="INFO">${min} = 0</msg>
<status starttime="20200323 21:10:11.566" status="PASS" endtime="20200323 21:10:11.568"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 21:10:11.569" level="INFO">${m_theory} = 10</msg>
<status starttime="20200323 21:10:11.568" status="PASS" endtime="20200323 21:10:11.569"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 21:10:11.570" level="INFO">${m_practice} = 10.0749</msg>
<status starttime="20200323 21:10:11.569" status="PASS" endtime="20200323 21:10:11.570"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 21:10:11.571" level="INFO">${d_theory} = 10</msg>
<status starttime="20200323 21:10:11.570" status="PASS" endtime="20200323 21:10:11.571"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 21:10:11.581" level="INFO">${deviation} = 10.1501</msg>
<status starttime="20200323 21:10:11.572" status="PASS" endtime="20200323 21:10:11.581"></status>
</kw>
<msg timestamp="20200323 21:10:11.581" level="INFO">${d_practice} = 10.1501</msg>
<status starttime="20200323 21:10:11.571" status="PASS" endtime="20200323 21:10:11.581"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 21:10:11.581" status="PASS" endtime="20200323 21:10:11.582"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 21:10:11.582" status="PASS" endtime="20200323 21:10:11.582"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:10:11.582" status="PASS" endtime="20200323 21:10:11.583"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:10:11.583" status="PASS" endtime="20200323 21:10:11.583"></status>
</kw>
<doc>Poisson distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>MiddleTest</tag>
</tags>
<status starttime="20200323 21:10:11.561" status="PASS" endtime="20200323 21:10:11.584" critical="yes"></status>
</test>
<doc>Discrete distribution and Robot Framework.</doc>
<status starttime="20200323 21:10:11.012" status="PASS" endtime="20200323 21:10:11.584"></status>
</suite>
<status starttime="20200323 21:10:10.950" status="PASS" endtime="20200323 21:10:11.585"></status>
</suite>
<statistics>
<total>
<stat pass="9" fail="0">Critical Tests</stat>
<stat pass="9" fail="0">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">HardTest</stat>
<stat fail="0" pass="2">MiddleTest</stat>
<stat fail="0" pass="6">SimpleTest</stat>
</tag>
<suite>
<stat name="Array Test &amp; Number Test &amp; Statistics Test" pass="9" fail="0" id="s1">Array Test &amp; Number Test &amp; Statistics Test</stat>
<stat name="Array Test" pass="3" fail="0" id="s1-s1">Array Test &amp; Number Test &amp; Statistics Test.Array Test</stat>
<stat name="Number Test" pass="2" fail="0" id="s1-s2">Array Test &amp; Number Test &amp; Statistics Test.Number Test</stat>
<stat name="Statistics Test" pass="4" fail="0" id="s1-s3">Array Test &amp; Number Test &amp; Statistics Test.Statistics Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
