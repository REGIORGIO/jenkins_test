<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on darwin)" generated="20200322 14:33:28.392" rpa="false">
<suite id="s1" name="Array Test &amp; Number Test &amp; Statistics Test">
<suite id="s1-s1" name="Array Test" source="/Users/georgy/Dell/jenkins/jenkins/array_test.robot">
<test id="s1-s1-t1" name="Generatiing valid array.">
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${size}</arg>
<arg>${minimum}</arg>
<arg>${maximum}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200322 14:33:28.416" level="INFO">${array} = [10, 1, 6, 4, 9, 2, 9, 10, 7, 2, 10, 8, 7, 6, 6, 2, 10, 6, 2, 4, 10, 10, 5, 8, 4, 5, 8, 5, 4, 6, 1, 10, 3, 4, 2, 3, 1, 8, 10, 4, 10, 1, 9, 10, 4, 4, 7, 9, 3, 1, 10, 5, 10, 7, 2, 2, 2, 3, 1, 6, 4, 6, 3...</msg>
<status status="PASS" starttime="20200322 14:33:28.415" endtime="20200322 14:33:28.416"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200322 14:33:28.419" level="INFO">${length} = 100</msg>
<status status="PASS" starttime="20200322 14:33:28.416" endtime="20200322 14:33:28.419"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.420" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200322 14:33:28.419" endtime="20200322 14:33:28.420"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200322 14:33:28.420" level="INFO">${max} = 10</msg>
<status status="PASS" starttime="20200322 14:33:28.420" endtime="20200322 14:33:28.421"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.421" endtime="20200322 14:33:28.421"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${minimum}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.421" endtime="20200322 14:33:28.421"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${maximum}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.422" endtime="20200322 14:33:28.422"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200322 14:33:28.415" endtime="20200322 14:33:28.422" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Generatiing valid array using decorator.">
<kw name="Generate 10 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200322 14:33:28.423" level="INFO">${result} = [4, 10, 7, 9, 3, 4, 8, 5, 2, 1]</msg>
<status status="PASS" starttime="20200322 14:33:28.423" endtime="20200322 14:33:28.424"></status>
</kw>
<msg timestamp="20200322 14:33:28.424" level="INFO">${array} = [4, 10, 7, 9, 3, 4, 8, 5, 2, 1]</msg>
<status status="PASS" starttime="20200322 14:33:28.423" endtime="20200322 14:33:28.424"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200322 14:33:28.424" level="INFO">${length} = 10</msg>
<status status="PASS" starttime="20200322 14:33:28.424" endtime="20200322 14:33:28.424"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.425" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200322 14:33:28.424" endtime="20200322 14:33:28.425"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200322 14:33:28.426" level="INFO">${max} = 10</msg>
<status status="PASS" starttime="20200322 14:33:28.425" endtime="20200322 14:33:28.426"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.426" endtime="20200322 14:33:28.426"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.426" endtime="20200322 14:33:28.427"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${10}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.427" endtime="20200322 14:33:28.427"></status>
</kw>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" starttime="20200322 14:33:28.423" endtime="20200322 14:33:28.427" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Generating valid array and search even and odd numbers.">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>even</arg>
<arg>odd</arg>
</arguments>
<assign>
<var>${types}</var>
</assign>
<msg timestamp="20200322 14:33:28.428" level="INFO">${types} = ['even', 'odd']</msg>
<status status="PASS" starttime="20200322 14:33:28.428" endtime="20200322 14:33:28.428"></status>
</kw>
<kw name="Generate 100 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200322 14:33:28.428" level="INFO">${result} = [6, 6, 6, 8, 10, 1, 6, 5, 8, 3, 9, 5, 1, 6, 2, 7, 7, 4, 2, 8, 8, 3, 6, 2, 8, 3, 3, 9, 1, 8, 1, 9, 8, 2, 4, 8, 7, 5, 9, 8, 5, 8, 5, 7, 10, 5, 1, 10, 4, 3, 4, 8, 1, 3, 9, 5, 7, 2, 7, 3, 4, 7, 1, 5, 7, 3...</msg>
<status status="PASS" starttime="20200322 14:33:28.428" endtime="20200322 14:33:28.428"></status>
</kw>
<msg timestamp="20200322 14:33:28.429" level="INFO">${array} = [6, 6, 6, 8, 10, 1, 6, 5, 8, 3, 9, 5, 1, 6, 2, 7, 7, 4, 2, 8, 8, 3, 6, 2, 8, 3, 3, 9, 1, 8, 1, 9, 8, 2, 4, 8, 7, 5, 9, 8, 5, 8, 5, 7, 10, 5, 1, 10, 4, 3, 4, 8, 1, 3, 9, 5, 7, 2, 7, 3, 4, 7, 1, 5, 7, 3...</msg>
<status status="PASS" starttime="20200322 14:33:28.428" endtime="20200322 14:33:28.429"></status>
</kw>
<kw name="${type} IN [ @{types} ]" type="for">
<kw name="${type} = even" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find even number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 == 0]</arg>
</arguments>
<assign>
<var>${evens}</var>
</assign>
<msg timestamp="20200322 14:33:28.431" level="INFO">${evens} = [6, 6, 6, 8, 10, 6, 8, 6, 2, 4, 2, 8, 8, 6, 2, 8, 8, 8, 2, 4, 8, 8, 8, 10, 10, 4, 4, 8, 2, 4, 10, 4, 10, 6, 8, 2, 2, 4, 6, 10, 2, 2, 4, 4, 4, 8, 6, 2, 2, 2, 6, 2]</msg>
<status status="PASS" starttime="20200322 14:33:28.429" endtime="20200322 14:33:28.431"></status>
</kw>
<status status="PASS" starttime="20200322 14:33:28.429" endtime="20200322 14:33:28.431"></status>
</kw>
<msg timestamp="20200322 14:33:28.431" level="INFO">${numbers} = [6, 6, 6, 8, 10, 6, 8, 6, 2, 4, 2, 8, 8, 6, 2, 8, 8, 8, 2, 4, 8, 8, 8, 10, 10, 4, 4, 8, 2, 4, 10, 4, 10, 6, 8, 2, 2, 4, 6, 10, 2, 2, 4, 4, 4, 8, 6, 2, 2, 2, 6, 2]</msg>
<status status="PASS" starttime="20200322 14:33:28.429" endtime="20200322 14:33:28.431"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200322 14:33:28.432" level="INFO">${length} = 52</msg>
<status status="PASS" starttime="20200322 14:33:28.431" endtime="20200322 14:33:28.432"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.432" endtime="20200322 14:33:28.432"></status>
</kw>
<status status="PASS" starttime="20200322 14:33:28.429" endtime="20200322 14:33:28.432"></status>
</kw>
<kw name="${type} = odd" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find odd number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 != 0]</arg>
</arguments>
<assign>
<var>${odds}</var>
</assign>
<msg timestamp="20200322 14:33:28.433" level="INFO">${odds} = [1, 5, 3, 9, 5, 1, 7, 7, 3, 3, 3, 9, 1, 1, 9, 7, 5, 9, 5, 5, 7, 5, 1, 3, 1, 3, 9, 5, 7, 7, 3, 7, 1, 5, 7, 3, 1, 7, 1, 5, 3, 3, 5, 3, 5, 5, 5, 9]</msg>
<status status="PASS" starttime="20200322 14:33:28.432" endtime="20200322 14:33:28.433"></status>
</kw>
<status status="PASS" starttime="20200322 14:33:28.432" endtime="20200322 14:33:28.433"></status>
</kw>
<msg timestamp="20200322 14:33:28.433" level="INFO">${numbers} = [1, 5, 3, 9, 5, 1, 7, 7, 3, 3, 3, 9, 1, 1, 9, 7, 5, 9, 5, 5, 7, 5, 1, 3, 1, 3, 9, 5, 7, 7, 3, 7, 1, 5, 7, 3, 1, 7, 1, 5, 3, 3, 5, 3, 5, 5, 5, 9]</msg>
<status status="PASS" starttime="20200322 14:33:28.432" endtime="20200322 14:33:28.433"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200322 14:33:28.434" level="INFO">${length} = 48</msg>
<status status="PASS" starttime="20200322 14:33:28.434" endtime="20200322 14:33:28.434"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.434" endtime="20200322 14:33:28.435"></status>
</kw>
<status status="PASS" starttime="20200322 14:33:28.432" endtime="20200322 14:33:28.435"></status>
</kw>
<status status="PASS" starttime="20200322 14:33:28.429" endtime="20200322 14:33:28.435"></status>
</kw>
<tags>
<tag>HardTest</tag>
</tags>
<status status="PASS" starttime="20200322 14:33:28.427" endtime="20200322 14:33:28.435" critical="yes"></status>
</test>
<doc>Python and Robot Framework.</doc>
<status status="PASS" starttime="20200322 14:33:28.411" endtime="20200322 14:33:28.435"></status>
</suite>
<suite id="s1-s2" name="Number Test" source="/Users/georgy/Dell/jenkins/jenkins/number_test.robot">
<test id="s1-s2-t1" name="Search for the minimum.">
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.438" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200322 14:33:28.437" endtime="20200322 14:33:28.438"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.438" endtime="20200322 14:33:28.438"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.438" level="INFO">${min} = -5</msg>
<status status="PASS" starttime="20200322 14:33:28.438" endtime="20200322 14:33:28.438"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${-5}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.439" endtime="20200322 14:33:28.439"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.439" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200322 14:33:28.439" endtime="20200322 14:33:28.439"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.439" endtime="20200322 14:33:28.440"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200322 14:33:28.437" endtime="20200322 14:33:28.440" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Search for the maximum.">
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.440" level="INFO">${min} = 10</msg>
<status status="PASS" starttime="20200322 14:33:28.440" endtime="20200322 14:33:28.440"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.440" endtime="20200322 14:33:28.441"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.441" level="INFO">${min} = 0</msg>
<status status="PASS" starttime="20200322 14:33:28.441" endtime="20200322 14:33:28.441"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.441" endtime="20200322 14:33:28.441"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.442" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200322 14:33:28.441" endtime="20200322 14:33:28.442"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.442" endtime="20200322 14:33:28.442"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200322 14:33:28.440" endtime="20200322 14:33:28.442" critical="yes"></status>
</test>
<doc>Robot Framework tests.</doc>
<status status="PASS" starttime="20200322 14:33:28.436" endtime="20200322 14:33:28.443"></status>
</suite>
<suite id="s1-s3" name="Statistics Test" source="/Users/georgy/Dell/jenkins/jenkins/statistics_test.robot">
<test id="s1-s3-t1" name="Generate valid uniform array">
<kw name="Generate uniform array" library="libraries.Distributions">
<arguments>
<arg>${low}</arg>
<arg>${up}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200322 14:33:28.748" level="INFO">${array} = [47 61 38 ... 84 80 46]</msg>
<status status="PASS" starttime="20200322 14:33:28.747" endtime="20200322 14:33:28.748"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200322 14:33:28.748" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200322 14:33:28.748" endtime="20200322 14:33:28.748"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.750" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200322 14:33:28.748" endtime="20200322 14:33:28.750"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200322 14:33:28.752" level="INFO">${max} = 99</msg>
<status status="PASS" starttime="20200322 14:33:28.750" endtime="20200322 14:33:28.752"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($up + $low) / 2</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200322 14:33:28.753" level="INFO">${m_theory} = 50.5</msg>
<status status="PASS" starttime="20200322 14:33:28.752" endtime="20200322 14:33:28.753"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200322 14:33:28.754" level="INFO">${m_practice} = 49.8668</msg>
<status status="PASS" starttime="20200322 14:33:28.753" endtime="20200322 14:33:28.754"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(($up - $low + 1)**2 - 1) / 12</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200322 14:33:28.755" level="INFO">${d_theory} = 833.25</msg>
<status status="PASS" starttime="20200322 14:33:28.754" endtime="20200322 14:33:28.755"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200322 14:33:28.786" level="INFO">${deviation} = 821.1028</msg>
<status status="PASS" starttime="20200322 14:33:28.755" endtime="20200322 14:33:28.786"></status>
</kw>
<msg timestamp="20200322 14:33:28.786" level="INFO">${d_practice} = 821.1028</msg>
<status status="PASS" starttime="20200322 14:33:28.755" endtime="20200322 14:33:28.786"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.786" endtime="20200322 14:33:28.786"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.787" endtime="20200322 14:33:28.787"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${up}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.787" endtime="20200322 14:33:28.787"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.787" endtime="20200322 14:33:28.788"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.788" endtime="20200322 14:33:28.788"></status>
</kw>
<doc>Uniform distribution test.Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200322 14:33:28.746" endtime="20200322 14:33:28.789" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Generate valid binomial array">
<kw name="Generate binomial array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${n}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200322 14:33:28.790" level="INFO">${array} = [10  8  8 ... 12  7  9]</msg>
<status status="PASS" starttime="20200322 14:33:28.789" endtime="20200322 14:33:28.790"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200322 14:33:28.791" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200322 14:33:28.790" endtime="20200322 14:33:28.791"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.793" level="INFO">${min} = 3</msg>
<status status="PASS" starttime="20200322 14:33:28.791" endtime="20200322 14:33:28.793"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200322 14:33:28.795" level="INFO">${max} = 18</msg>
<status status="PASS" starttime="20200322 14:33:28.793" endtime="20200322 14:33:28.795"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$n * $p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200322 14:33:28.795" level="INFO">${m_theory} = 10.0</msg>
<status status="PASS" starttime="20200322 14:33:28.795" endtime="20200322 14:33:28.795"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200322 14:33:28.796" level="INFO">${m_practice} = 10.0279</msg>
<status status="PASS" starttime="20200322 14:33:28.795" endtime="20200322 14:33:28.796"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($p * $n * (1-$p))</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200322 14:33:28.797" level="INFO">${d_theory} = 5.0</msg>
<status status="PASS" starttime="20200322 14:33:28.796" endtime="20200322 14:33:28.797"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200322 14:33:28.825" level="INFO">${deviation} = 5.0367</msg>
<status status="PASS" starttime="20200322 14:33:28.797" endtime="20200322 14:33:28.825"></status>
</kw>
<msg timestamp="20200322 14:33:28.825" level="INFO">${d_practice} = 5.0367</msg>
<status status="PASS" starttime="20200322 14:33:28.797" endtime="20200322 14:33:28.825"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.825" endtime="20200322 14:33:28.825"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.825" endtime="20200322 14:33:28.826"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${n}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.826" endtime="20200322 14:33:28.826"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.826" endtime="20200322 14:33:28.826"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.826" endtime="20200322 14:33:28.827"></status>
</kw>
<doc>Binomial distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200322 14:33:28.789" endtime="20200322 14:33:28.827" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="Generate valid geometric array">
<kw name="Generate geometric array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200322 14:33:28.828" level="INFO">${array} = [1 2 1 ... 2 1 1]</msg>
<status status="PASS" starttime="20200322 14:33:28.827" endtime="20200322 14:33:28.828"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200322 14:33:28.829" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200322 14:33:28.828" endtime="20200322 14:33:28.829"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.830" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200322 14:33:28.829" endtime="20200322 14:33:28.830"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1/$p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200322 14:33:28.831" level="INFO">${m_theory} = 2.0</msg>
<status status="PASS" starttime="20200322 14:33:28.831" endtime="20200322 14:33:28.831"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200322 14:33:28.832" level="INFO">${m_practice} = 2.0345</msg>
<status status="PASS" starttime="20200322 14:33:28.831" endtime="20200322 14:33:28.832"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(1-$p)/($p**2)</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200322 14:33:28.833" level="INFO">${d_theory} = 2.0</msg>
<status status="PASS" starttime="20200322 14:33:28.832" endtime="20200322 14:33:28.833"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200322 14:33:28.859" level="INFO">${deviation} = 2.0997</msg>
<status status="PASS" starttime="20200322 14:33:28.833" endtime="20200322 14:33:28.859"></status>
</kw>
<msg timestamp="20200322 14:33:28.859" level="INFO">${d_practice} = 2.0997</msg>
<status status="PASS" starttime="20200322 14:33:28.833" endtime="20200322 14:33:28.859"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.859" endtime="20200322 14:33:28.859"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.859" endtime="20200322 14:33:28.860"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.860" endtime="20200322 14:33:28.860"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.860" endtime="20200322 14:33:28.861"></status>
</kw>
<doc>geometric distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200322 14:33:28.827" endtime="20200322 14:33:28.861" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="Generate valid poisson array">
<kw name="Generate poisson array with mu ${mu} and size ${size}">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate poisson array" library="libraries.Distributions">
<arguments>
<arg>${mu}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200322 14:33:28.863" level="INFO">${result} = [12 12  7 ... 13 13 16]</msg>
<status status="PASS" starttime="20200322 14:33:28.861" endtime="20200322 14:33:28.863"></status>
</kw>
<msg timestamp="20200322 14:33:28.863" level="INFO">${array} = [12 12  7 ... 13 13 16]</msg>
<status status="PASS" starttime="20200322 14:33:28.861" endtime="20200322 14:33:28.863"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200322 14:33:28.864" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200322 14:33:28.863" endtime="20200322 14:33:28.864"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200322 14:33:28.865" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200322 14:33:28.864" endtime="20200322 14:33:28.865"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200322 14:33:28.866" level="INFO">${m_theory} = 10</msg>
<status status="PASS" starttime="20200322 14:33:28.865" endtime="20200322 14:33:28.866"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200322 14:33:28.867" level="INFO">${m_practice} = 9.9992</msg>
<status status="PASS" starttime="20200322 14:33:28.866" endtime="20200322 14:33:28.867"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200322 14:33:28.867" level="INFO">${d_theory} = 10</msg>
<status status="PASS" starttime="20200322 14:33:28.867" endtime="20200322 14:33:28.867"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200322 14:33:28.874" level="INFO">${deviation} = 10.0762</msg>
<status status="PASS" starttime="20200322 14:33:28.868" endtime="20200322 14:33:28.874"></status>
</kw>
<msg timestamp="20200322 14:33:28.874" level="INFO">${d_practice} = 10.0762</msg>
<status status="PASS" starttime="20200322 14:33:28.867" endtime="20200322 14:33:28.874"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.874" endtime="20200322 14:33:28.875"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.875" endtime="20200322 14:33:28.875"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.875" endtime="20200322 14:33:28.876"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200322 14:33:28.876" endtime="20200322 14:33:28.877"></status>
</kw>
<doc>Poisson distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" starttime="20200322 14:33:28.861" endtime="20200322 14:33:28.877" critical="yes"></status>
</test>
<doc>Discrete distribution and Robot Framework.</doc>
<status status="PASS" starttime="20200322 14:33:28.443" endtime="20200322 14:33:28.877"></status>
</suite>
<status status="PASS" starttime="20200322 14:33:28.393" endtime="20200322 14:33:28.878"></status>
</suite>
<statistics>
<total>
<stat pass="9" fail="0">Critical Tests</stat>
<stat pass="9" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">HardTest</stat>
<stat pass="2" fail="0">MiddleTest</stat>
<stat pass="6" fail="0">SimpleTest</stat>
</tag>
<suite>
<stat pass="9" fail="0" id="s1" name="Array Test &amp; Number Test &amp; Statistics Test">Array Test &amp; Number Test &amp; Statistics Test</stat>
<stat pass="3" fail="0" id="s1-s1" name="Array Test">Array Test &amp; Number Test &amp; Statistics Test.Array Test</stat>
<stat pass="2" fail="0" id="s1-s2" name="Number Test">Array Test &amp; Number Test &amp; Statistics Test.Number Test</stat>
<stat pass="4" fail="0" id="s1-s3" name="Statistics Test">Array Test &amp; Number Test &amp; Statistics Test.Statistics Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
