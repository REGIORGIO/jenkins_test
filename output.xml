<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.5.3 on linux)" rpa="false" generated="20200323 20:51:16.554">
<suite id="s1" name="Array Test &amp; Number Test &amp; Statistics Test">
<suite id="s1-s1" source="/var/lib/jenkins/workspace/robot/array_test.robot" name="Array Test">
<test id="s1-s1-t1" name="Generatiing valid array.">
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${size}</arg>
<arg>${minimum}</arg>
<arg>${maximum}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 20:51:16.586" level="INFO">${array} = [4, 4, 7, 9, 8, 3, 6, 5, 3, 8, 7, 3, 3, 5, 7, 10, 8, 10, 10, 10, 6, 2, 7, 10, 7, 6, 6, 6, 9, 10, 8, 9, 7, 5, 8, 5, 3, 5, 4, 8, 3, 4, 7, 9, 7, 3, 4, 6, 8, 7, 1, 10, 8, 2, 7, 6, 6, 4, 3, 10, 8, 10, 2, 3...</msg>
<status status="PASS" endtime="20200323 20:51:16.586" starttime="20200323 20:51:16.586"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:51:16.590" level="INFO">${length} = 100</msg>
<status status="PASS" endtime="20200323 20:51:16.590" starttime="20200323 20:51:16.587"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:16.591" level="INFO">${min} = 1</msg>
<status status="PASS" endtime="20200323 20:51:16.591" starttime="20200323 20:51:16.590"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 20:51:16.591" level="INFO">${max} = 10</msg>
<status status="PASS" endtime="20200323 20:51:16.591" starttime="20200323 20:51:16.591"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.592" starttime="20200323 20:51:16.592"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${minimum}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.592" starttime="20200323 20:51:16.592"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${maximum}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.593" starttime="20200323 20:51:16.592"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" critical="yes" endtime="20200323 20:51:16.593" starttime="20200323 20:51:16.585"></status>
</test>
<test id="s1-s1-t2" name="Generatiing valid array using decorator.">
<kw name="Generate 10 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 20:51:16.595" level="INFO">${result} = [8, 8, 6, 3, 1, 3, 9, 9, 6, 9]</msg>
<status status="PASS" endtime="20200323 20:51:16.595" starttime="20200323 20:51:16.594"></status>
</kw>
<msg timestamp="20200323 20:51:16.595" level="INFO">${array} = [8, 8, 6, 3, 1, 3, 9, 9, 6, 9]</msg>
<status status="PASS" endtime="20200323 20:51:16.595" starttime="20200323 20:51:16.594"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:51:16.596" level="INFO">${length} = 10</msg>
<status status="PASS" endtime="20200323 20:51:16.596" starttime="20200323 20:51:16.595"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:16.597" level="INFO">${min} = 1</msg>
<status status="PASS" endtime="20200323 20:51:16.597" starttime="20200323 20:51:16.596"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 20:51:16.598" level="INFO">${max} = 9</msg>
<status status="PASS" endtime="20200323 20:51:16.598" starttime="20200323 20:51:16.597"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.598" starttime="20200323 20:51:16.598"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${1}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.599" starttime="20200323 20:51:16.598"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${10}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.599" starttime="20200323 20:51:16.599"></status>
</kw>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" critical="yes" endtime="20200323 20:51:16.599" starttime="20200323 20:51:16.593"></status>
</test>
<test id="s1-s1-t3" name="Generating valid array and search even and odd numbers.">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>even</arg>
<arg>odd</arg>
</arguments>
<assign>
<var>${types}</var>
</assign>
<msg timestamp="20200323 20:51:16.600" level="INFO">${types} = ['even', 'odd']</msg>
<status status="PASS" endtime="20200323 20:51:16.600" starttime="20200323 20:51:16.600"></status>
</kw>
<kw name="Generate 100 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 20:51:16.601" level="INFO">${result} = [10, 3, 4, 5, 7, 3, 10, 3, 1, 8, 8, 2, 10, 1, 4, 6, 9, 1, 1, 9, 4, 2, 2, 2, 2, 3, 4, 6, 4, 1, 2, 1, 5, 7, 2, 8, 2, 10, 8, 4, 9, 2, 5, 4, 1, 1, 4, 6, 3, 4, 3, 2, 3, 4, 1, 4, 2, 3, 4, 3, 4, 6, 8, 6, 6, ...</msg>
<status status="PASS" endtime="20200323 20:51:16.601" starttime="20200323 20:51:16.601"></status>
</kw>
<msg timestamp="20200323 20:51:16.601" level="INFO">${array} = [10, 3, 4, 5, 7, 3, 10, 3, 1, 8, 8, 2, 10, 1, 4, 6, 9, 1, 1, 9, 4, 2, 2, 2, 2, 3, 4, 6, 4, 1, 2, 1, 5, 7, 2, 8, 2, 10, 8, 4, 9, 2, 5, 4, 1, 1, 4, 6, 3, 4, 3, 2, 3, 4, 1, 4, 2, 3, 4, 3, 4, 6, 8, 6, 6, ...</msg>
<status status="PASS" endtime="20200323 20:51:16.601" starttime="20200323 20:51:16.600"></status>
</kw>
<kw name="${type} IN [ @{types} ]" type="for">
<kw name="${type} = even" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find even number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 == 0]</arg>
</arguments>
<assign>
<var>${evens}</var>
</assign>
<msg timestamp="20200323 20:51:16.604" level="INFO">${evens} = [10, 4, 10, 8, 8, 2, 10, 4, 6, 4, 2, 2, 2, 2, 4, 6, 4, 2, 2, 8, 2, 10, 8, 4, 2, 4, 4, 6, 4, 2, 4, 4, 2, 4, 4, 6, 8, 6, 6, 8, 8, 10, 2, 2, 10, 8, 6, 10, 10, 4, 6, 10, 4, 2, 10]</msg>
<status status="PASS" endtime="20200323 20:51:16.604" starttime="20200323 20:51:16.603"></status>
</kw>
<status status="PASS" endtime="20200323 20:51:16.605" starttime="20200323 20:51:16.603"></status>
</kw>
<msg timestamp="20200323 20:51:16.605" level="INFO">${numbers} = [10, 4, 10, 8, 8, 2, 10, 4, 6, 4, 2, 2, 2, 2, 4, 6, 4, 2, 2, 8, 2, 10, 8, 4, 2, 4, 4, 6, 4, 2, 4, 4, 2, 4, 4, 6, 8, 6, 6, 8, 8, 10, 2, 2, 10, 8, 6, 10, 10, 4, 6, 10, 4, 2, 10]</msg>
<status status="PASS" endtime="20200323 20:51:16.605" starttime="20200323 20:51:16.602"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:51:16.606" level="INFO">${length} = 55</msg>
<status status="PASS" endtime="20200323 20:51:16.606" starttime="20200323 20:51:16.605"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.606" starttime="20200323 20:51:16.606"></status>
</kw>
<status status="PASS" endtime="20200323 20:51:16.606" starttime="20200323 20:51:16.602"></status>
</kw>
<kw name="${type} = odd" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find odd number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 != 0]</arg>
</arguments>
<assign>
<var>${odds}</var>
</assign>
<msg timestamp="20200323 20:51:16.608" level="INFO">${odds} = [3, 5, 7, 3, 3, 1, 1, 9, 1, 1, 9, 3, 1, 1, 5, 7, 9, 5, 1, 1, 3, 3, 3, 1, 3, 3, 1, 1, 9, 9, 5, 3, 5, 5, 1, 3, 3, 5, 3, 9, 9, 3, 1, 1, 5]</msg>
<status status="PASS" endtime="20200323 20:51:16.608" starttime="20200323 20:51:16.607"></status>
</kw>
<status status="PASS" endtime="20200323 20:51:16.608" starttime="20200323 20:51:16.607"></status>
</kw>
<msg timestamp="20200323 20:51:16.608" level="INFO">${numbers} = [3, 5, 7, 3, 3, 1, 1, 9, 1, 1, 9, 3, 1, 1, 5, 7, 9, 5, 1, 1, 3, 3, 3, 1, 3, 3, 1, 1, 9, 9, 5, 3, 5, 5, 1, 3, 3, 5, 3, 9, 9, 3, 1, 1, 5]</msg>
<status status="PASS" endtime="20200323 20:51:16.608" starttime="20200323 20:51:16.606"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:51:16.609" level="INFO">${length} = 45</msg>
<status status="PASS" endtime="20200323 20:51:16.609" starttime="20200323 20:51:16.608"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.609" starttime="20200323 20:51:16.609"></status>
</kw>
<status status="PASS" endtime="20200323 20:51:16.609" starttime="20200323 20:51:16.606"></status>
</kw>
<status status="PASS" endtime="20200323 20:51:16.609" starttime="20200323 20:51:16.602"></status>
</kw>
<tags>
<tag>HardTest</tag>
</tags>
<status status="PASS" critical="yes" endtime="20200323 20:51:16.609" starttime="20200323 20:51:16.599"></status>
</test>
<doc>Python and Robot Framework.</doc>
<status status="PASS" endtime="20200323 20:51:16.610" starttime="20200323 20:51:16.579"></status>
</suite>
<suite id="s1-s2" source="/var/lib/jenkins/workspace/robot/number_test.robot" name="Number Test">
<test id="s1-s2-t1" name="Search for the minimum.">
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:16.614" level="INFO">${min} = 5</msg>
<status status="PASS" endtime="20200323 20:51:16.614" starttime="20200323 20:51:16.613"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.614" starttime="20200323 20:51:16.614"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:16.614" level="INFO">${min} = -5</msg>
<status status="PASS" endtime="20200323 20:51:16.614" starttime="20200323 20:51:16.614"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${-5}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.615" starttime="20200323 20:51:16.614"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:16.615" level="INFO">${min} = 5</msg>
<status status="PASS" endtime="20200323 20:51:16.615" starttime="20200323 20:51:16.615"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.615" starttime="20200323 20:51:16.615"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" critical="yes" endtime="20200323 20:51:16.616" starttime="20200323 20:51:16.613"></status>
</test>
<test id="s1-s2-t2" name="Search for the maximum.">
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:16.617" level="INFO">${min} = 10</msg>
<status status="PASS" endtime="20200323 20:51:16.617" starttime="20200323 20:51:16.616"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.617" starttime="20200323 20:51:16.617"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:16.618" level="INFO">${min} = 0</msg>
<status status="PASS" endtime="20200323 20:51:16.618" starttime="20200323 20:51:16.617"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.618" starttime="20200323 20:51:16.618"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:16.618" level="INFO">${min} = 5</msg>
<status status="PASS" endtime="20200323 20:51:16.618" starttime="20200323 20:51:16.618"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:16.619" starttime="20200323 20:51:16.618"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" critical="yes" endtime="20200323 20:51:16.619" starttime="20200323 20:51:16.616"></status>
</test>
<doc>Robot Framework tests.</doc>
<status status="PASS" endtime="20200323 20:51:16.619" starttime="20200323 20:51:16.611"></status>
</suite>
<suite id="s1-s3" source="/var/lib/jenkins/workspace/robot/statistics_test.robot" name="Statistics Test">
<test id="s1-s3-t1" name="Generate valid uniform array">
<kw name="Generate uniform array" library="libraries.Distributions">
<arguments>
<arg>${low}</arg>
<arg>${up}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 20:51:17.014" level="INFO">${array} = [ 8 49 22 ...  9 75 22]</msg>
<status status="PASS" endtime="20200323 20:51:17.014" starttime="20200323 20:51:17.013"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:51:17.015" level="INFO">${length} = 10000</msg>
<status status="PASS" endtime="20200323 20:51:17.015" starttime="20200323 20:51:17.015"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:17.017" level="INFO">${min} = 1</msg>
<status status="PASS" endtime="20200323 20:51:17.017" starttime="20200323 20:51:17.016"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 20:51:17.019" level="INFO">${max} = 99</msg>
<status status="PASS" endtime="20200323 20:51:17.019" starttime="20200323 20:51:17.018"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($up + $low) / 2</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 20:51:17.020" level="INFO">${m_theory} = 50.5</msg>
<status status="PASS" endtime="20200323 20:51:17.020" starttime="20200323 20:51:17.020"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 20:51:17.021" level="INFO">${m_practice} = 49.8871</msg>
<status status="PASS" endtime="20200323 20:51:17.021" starttime="20200323 20:51:17.020"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(($up - $low + 1)**2 - 1) / 12</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 20:51:17.022" level="INFO">${d_theory} = 833.25</msg>
<status status="PASS" endtime="20200323 20:51:17.022" starttime="20200323 20:51:17.022"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 20:51:17.053" level="INFO">${deviation} = 817.1512</msg>
<status status="PASS" endtime="20200323 20:51:17.053" starttime="20200323 20:51:17.023"></status>
</kw>
<msg timestamp="20200323 20:51:17.053" level="INFO">${d_practice} = 817.1512</msg>
<status status="PASS" endtime="20200323 20:51:17.053" starttime="20200323 20:51:17.023"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.054" starttime="20200323 20:51:17.054"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${low}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.054" starttime="20200323 20:51:17.054"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${up}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.055" starttime="20200323 20:51:17.055"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.056" starttime="20200323 20:51:17.055"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.056" starttime="20200323 20:51:17.056"></status>
</kw>
<doc>Uniform distribution test.Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" critical="yes" endtime="20200323 20:51:17.056" starttime="20200323 20:51:17.013"></status>
</test>
<test id="s1-s3-t2" name="Generate valid binomial array">
<kw name="Generate binomial array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${n}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 20:51:17.059" level="INFO">${array} = [ 7  9 11 ...  9 12 10]</msg>
<status status="PASS" endtime="20200323 20:51:17.059" starttime="20200323 20:51:17.057"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:51:17.060" level="INFO">${length} = 10000</msg>
<status status="PASS" endtime="20200323 20:51:17.060" starttime="20200323 20:51:17.059"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:17.062" level="INFO">${min} = 2</msg>
<status status="PASS" endtime="20200323 20:51:17.062" starttime="20200323 20:51:17.060"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 20:51:17.064" level="INFO">${max} = 18</msg>
<status status="PASS" endtime="20200323 20:51:17.064" starttime="20200323 20:51:17.062"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$n * $p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 20:51:17.065" level="INFO">${m_theory} = 10.0</msg>
<status status="PASS" endtime="20200323 20:51:17.065" starttime="20200323 20:51:17.064"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 20:51:17.066" level="INFO">${m_practice} = 9.9756</msg>
<status status="PASS" endtime="20200323 20:51:17.066" starttime="20200323 20:51:17.065"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($p * $n * (1-$p))</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 20:51:17.067" level="INFO">${d_theory} = 5.0</msg>
<status status="PASS" endtime="20200323 20:51:17.067" starttime="20200323 20:51:17.066"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 20:51:17.097" level="INFO">${deviation} = 5.0192</msg>
<status status="PASS" endtime="20200323 20:51:17.097" starttime="20200323 20:51:17.067"></status>
</kw>
<msg timestamp="20200323 20:51:17.097" level="INFO">${d_practice} = 5.0192</msg>
<status status="PASS" endtime="20200323 20:51:17.097" starttime="20200323 20:51:17.067"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.098" starttime="20200323 20:51:17.097"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.098" starttime="20200323 20:51:17.098"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${n}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.098" starttime="20200323 20:51:17.098"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.099" starttime="20200323 20:51:17.099"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.100" starttime="20200323 20:51:17.099"></status>
</kw>
<doc>Binomial distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" critical="yes" endtime="20200323 20:51:17.100" starttime="20200323 20:51:17.057"></status>
</test>
<test id="s1-s3-t3" name="Generate valid geometric array">
<kw name="Generate geometric array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 20:51:17.102" level="INFO">${array} = [2 2 9 ... 1 1 1]</msg>
<status status="PASS" endtime="20200323 20:51:17.102" starttime="20200323 20:51:17.101"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:51:17.103" level="INFO">${length} = 10000</msg>
<status status="PASS" endtime="20200323 20:51:17.103" starttime="20200323 20:51:17.102"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:17.105" level="INFO">${min} = 1</msg>
<status status="PASS" endtime="20200323 20:51:17.105" starttime="20200323 20:51:17.103"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1/$p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 20:51:17.105" level="INFO">${m_theory} = 2.0</msg>
<status status="PASS" endtime="20200323 20:51:17.105" starttime="20200323 20:51:17.105"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 20:51:17.107" level="INFO">${m_practice} = 1.9845</msg>
<status status="PASS" endtime="20200323 20:51:17.107" starttime="20200323 20:51:17.106"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(1-$p)/($p**2)</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 20:51:17.107" level="INFO">${d_theory} = 2.0</msg>
<status status="PASS" endtime="20200323 20:51:17.108" starttime="20200323 20:51:17.107"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 20:51:17.138" level="INFO">${deviation} = 1.9639</msg>
<status status="PASS" endtime="20200323 20:51:17.138" starttime="20200323 20:51:17.108"></status>
</kw>
<msg timestamp="20200323 20:51:17.138" level="INFO">${d_practice} = 1.9639</msg>
<status status="PASS" endtime="20200323 20:51:17.138" starttime="20200323 20:51:17.108"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.138" starttime="20200323 20:51:17.138"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.139" starttime="20200323 20:51:17.139"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.140" starttime="20200323 20:51:17.139"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.140" starttime="20200323 20:51:17.140"></status>
</kw>
<doc>geometric distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" critical="yes" endtime="20200323 20:51:17.141" starttime="20200323 20:51:17.100"></status>
</test>
<test id="s1-s3-t4" name="Generate valid poisson array">
<kw name="Generate poisson array with mu ${mu} and size ${size}">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate poisson array" library="libraries.Distributions">
<arguments>
<arg>${mu}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 20:51:17.145" level="INFO">${result} = [14  8  9 ...  8 12  6]</msg>
<status status="PASS" endtime="20200323 20:51:17.145" starttime="20200323 20:51:17.142"></status>
</kw>
<msg timestamp="20200323 20:51:17.145" level="INFO">${array} = [14  8  9 ...  8 12  6]</msg>
<status status="PASS" endtime="20200323 20:51:17.145" starttime="20200323 20:51:17.142"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 20:51:17.146" level="INFO">${length} = 10000</msg>
<status status="PASS" endtime="20200323 20:51:17.146" starttime="20200323 20:51:17.145"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 20:51:17.148" level="INFO">${min} = 1</msg>
<status status="PASS" endtime="20200323 20:51:17.148" starttime="20200323 20:51:17.146"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 20:51:17.149" level="INFO">${m_theory} = 10</msg>
<status status="PASS" endtime="20200323 20:51:17.149" starttime="20200323 20:51:17.148"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 20:51:17.150" level="INFO">${m_practice} = 9.9691</msg>
<status status="PASS" endtime="20200323 20:51:17.150" starttime="20200323 20:51:17.149"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 20:51:17.151" level="INFO">${d_theory} = 10</msg>
<status status="PASS" endtime="20200323 20:51:17.151" starttime="20200323 20:51:17.150"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 20:51:17.160" level="INFO">${deviation} = 9.8451</msg>
<status status="PASS" endtime="20200323 20:51:17.160" starttime="20200323 20:51:17.151"></status>
</kw>
<msg timestamp="20200323 20:51:17.161" level="INFO">${d_practice} = 9.8451</msg>
<status status="PASS" endtime="20200323 20:51:17.161" starttime="20200323 20:51:17.151"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.161" starttime="20200323 20:51:17.161"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.162" starttime="20200323 20:51:17.161"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.162" starttime="20200323 20:51:17.162"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:51:17.163" starttime="20200323 20:51:17.162"></status>
</kw>
<doc>Poisson distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" critical="yes" endtime="20200323 20:51:17.163" starttime="20200323 20:51:17.141"></status>
</test>
<doc>Discrete distribution and Robot Framework.</doc>
<status status="PASS" endtime="20200323 20:51:17.164" starttime="20200323 20:51:16.620"></status>
</suite>
<status status="PASS" endtime="20200323 20:51:17.165" starttime="20200323 20:51:16.555"></status>
</suite>
<statistics>
<total>
<stat pass="9" fail="0">Critical Tests</stat>
<stat pass="9" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">HardTest</stat>
<stat pass="2" fail="0">MiddleTest</stat>
<stat pass="6" fail="0">SimpleTest</stat>
</tag>
<suite>
<stat pass="9" fail="0" name="Array Test &amp; Number Test &amp; Statistics Test" id="s1">Array Test &amp; Number Test &amp; Statistics Test</stat>
<stat pass="3" fail="0" name="Array Test" id="s1-s1">Array Test &amp; Number Test &amp; Statistics Test.Array Test</stat>
<stat pass="2" fail="0" name="Number Test" id="s1-s2">Array Test &amp; Number Test &amp; Statistics Test.Number Test</stat>
<stat pass="4" fail="0" name="Statistics Test" id="s1-s3">Array Test &amp; Number Test &amp; Statistics Test.Statistics Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
