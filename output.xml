<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20200323 21:02:30.584" generator="Robot 3.1.2 (Python 3.5.3 on linux)" rpa="false">
<suite id="s1" name="Array Test &amp; Number Test &amp; Statistics Test">
<suite source="/var/lib/jenkins/workspace/robot/array_test.robot" id="s1-s1" name="Array Test">
<test id="s1-s1-t1" name="Generatiing valid array.">
<kw library="libraries.ArrayGeneratorLibrary" name="Generate integer array">
<arguments>
<arg>${size}</arg>
<arg>${minimum}</arg>
<arg>${maximum}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.614">${array} = [6, 4, 10, 10, 9, 5, 1, 2, 3, 3, 4, 1, 8, 3, 6, 7, 4, 3, 1, 7, 8, 3, 2, 4, 4, 2, 5, 9, 9, 1, 10, 5, 6, 6, 10, 9, 5, 3, 8, 7, 5, 4, 10, 6, 7, 10, 1, 5, 8, 8, 7, 1, 4, 1, 2, 2, 3, 6, 6, 7, 8, 6, 10, 2, ...</msg>
<status starttime="20200323 21:02:30.613" status="PASS" endtime="20200323 21:02:30.614"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.617">${length} = 100</msg>
<status starttime="20200323 21:02:30.614" status="PASS" endtime="20200323 21:02:30.617"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.618">${min} = 1</msg>
<status starttime="20200323 21:02:30.617" status="PASS" endtime="20200323 21:02:30.618"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.619">${max} = 10</msg>
<status starttime="20200323 21:02:30.618" status="PASS" endtime="20200323 21:02:30.619"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 21:02:30.619" status="PASS" endtime="20200323 21:02:30.619"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${minimum}</arg>
</arguments>
<status starttime="20200323 21:02:30.619" status="PASS" endtime="20200323 21:02:30.620"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${maximum}</arg>
</arguments>
<status starttime="20200323 21:02:30.620" status="PASS" endtime="20200323 21:02:30.620"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:02:30.613" status="PASS" critical="yes" endtime="20200323 21:02:30.620"></status>
</test>
<test id="s1-s1-t2" name="Generatiing valid array using decorator.">
<kw name="Generate 10 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw library="libraries.ArrayGeneratorLibrary" name="Generate integer array">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.622">${result} = [9, 2, 8, 1, 10, 5, 8, 8, 5, 9]</msg>
<status starttime="20200323 21:02:30.621" status="PASS" endtime="20200323 21:02:30.622"></status>
</kw>
<msg level="INFO" timestamp="20200323 21:02:30.622">${array} = [9, 2, 8, 1, 10, 5, 8, 8, 5, 9]</msg>
<status starttime="20200323 21:02:30.621" status="PASS" endtime="20200323 21:02:30.622"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.623">${length} = 10</msg>
<status starttime="20200323 21:02:30.622" status="PASS" endtime="20200323 21:02:30.623"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.624">${min} = 1</msg>
<status starttime="20200323 21:02:30.623" status="PASS" endtime="20200323 21:02:30.624"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.624">${max} = 10</msg>
<status starttime="20200323 21:02:30.624" status="PASS" endtime="20200323 21:02:30.624"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${10}</arg>
</arguments>
<status starttime="20200323 21:02:30.624" status="PASS" endtime="20200323 21:02:30.625"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 21:02:30.625" status="PASS" endtime="20200323 21:02:30.625"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${10}</arg>
</arguments>
<status starttime="20200323 21:02:30.625" status="PASS" endtime="20200323 21:02:30.626"></status>
</kw>
<tags>
<tag>MiddleTest</tag>
</tags>
<status starttime="20200323 21:02:30.620" status="PASS" critical="yes" endtime="20200323 21:02:30.626"></status>
</test>
<test id="s1-s1-t3" name="Generating valid array and search even and odd numbers.">
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>even</arg>
<arg>odd</arg>
</arguments>
<assign>
<var>${types}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.627">${types} = ['even', 'odd']</msg>
<status starttime="20200323 21:02:30.627" status="PASS" endtime="20200323 21:02:30.627"></status>
</kw>
<kw name="Generate 100 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw library="libraries.ArrayGeneratorLibrary" name="Generate integer array">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.628">${result} = [9, 4, 5, 3, 10, 7, 8, 7, 4, 8, 2, 3, 2, 5, 2, 5, 2, 8, 2, 1, 5, 8, 8, 5, 7, 2, 4, 6, 10, 4, 3, 10, 7, 3, 5, 6, 1, 4, 1, 9, 10, 7, 7, 7, 4, 4, 4, 6, 4, 8, 2, 1, 7, 9, 2, 2, 3, 9, 1, 2, 8, 1, 8, 9, 3, ...</msg>
<status starttime="20200323 21:02:30.627" status="PASS" endtime="20200323 21:02:30.628"></status>
</kw>
<msg level="INFO" timestamp="20200323 21:02:30.628">${array} = [9, 4, 5, 3, 10, 7, 8, 7, 4, 8, 2, 3, 2, 5, 2, 5, 2, 8, 2, 1, 5, 8, 8, 5, 7, 2, 4, 6, 10, 4, 3, 10, 7, 3, 5, 6, 1, 4, 1, 9, 10, 7, 7, 7, 4, 4, 4, 6, 4, 8, 2, 1, 7, 9, 2, 2, 3, 9, 1, 2, 8, 1, 8, 9, 3, ...</msg>
<status starttime="20200323 21:02:30.627" status="PASS" endtime="20200323 21:02:30.628"></status>
</kw>
<kw type="for" name="${type} IN [ @{types} ]">
<kw type="foritem" name="${type} = even">
<kw library="BuiltIn" name="Run Keyword">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find even number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 == 0]</arg>
</arguments>
<assign>
<var>${evens}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.631">${evens} = [4, 10, 8, 4, 8, 2, 2, 2, 2, 8, 2, 8, 8, 2, 4, 6, 10, 4, 10, 6, 4, 10, 4, 4, 4, 6, 4, 8, 2, 2, 2, 2, 8, 8, 4, 6, 10, 4, 4, 10, 6, 6, 8, 8, 2, 4, 8, 2, 6, 10]</msg>
<status starttime="20200323 21:02:30.630" status="PASS" endtime="20200323 21:02:30.631"></status>
</kw>
<status starttime="20200323 21:02:30.630" status="PASS" endtime="20200323 21:02:30.631"></status>
</kw>
<msg level="INFO" timestamp="20200323 21:02:30.631">${numbers} = [4, 10, 8, 4, 8, 2, 2, 2, 2, 8, 2, 8, 8, 2, 4, 6, 10, 4, 10, 6, 4, 10, 4, 4, 4, 6, 4, 8, 2, 2, 2, 2, 8, 8, 4, 6, 10, 4, 4, 10, 6, 6, 8, 8, 2, 4, 8, 2, 6, 10]</msg>
<status starttime="20200323 21:02:30.628" status="PASS" endtime="20200323 21:02:30.631"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.632">${length} = 50</msg>
<status starttime="20200323 21:02:30.631" status="PASS" endtime="20200323 21:02:30.632"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 21:02:30.632" status="PASS" endtime="20200323 21:02:30.633"></status>
</kw>
<status starttime="20200323 21:02:30.628" status="PASS" endtime="20200323 21:02:30.633"></status>
</kw>
<kw type="foritem" name="${type} = odd">
<kw library="BuiltIn" name="Run Keyword">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find odd number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 != 0]</arg>
</arguments>
<assign>
<var>${odds}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.634">${odds} = [9, 5, 3, 7, 7, 3, 5, 5, 1, 5, 5, 7, 3, 7, 3, 5, 1, 1, 9, 7, 7, 7, 1, 7, 9, 3, 9, 1, 1, 9, 3, 3, 9, 9, 7, 5, 1, 1, 1, 5, 1, 3, 9, 9, 9, 1, 7, 1, 5, 7]</msg>
<status starttime="20200323 21:02:30.633" status="PASS" endtime="20200323 21:02:30.634"></status>
</kw>
<status starttime="20200323 21:02:30.633" status="PASS" endtime="20200323 21:02:30.634"></status>
</kw>
<msg level="INFO" timestamp="20200323 21:02:30.634">${numbers} = [9, 5, 3, 7, 7, 3, 5, 5, 1, 5, 5, 7, 3, 7, 3, 5, 1, 1, 9, 7, 7, 7, 1, 7, 9, 3, 9, 1, 1, 9, 3, 3, 9, 9, 7, 5, 1, 1, 1, 5, 1, 3, 9, 9, 9, 1, 7, 1, 5, 7]</msg>
<status starttime="20200323 21:02:30.633" status="PASS" endtime="20200323 21:02:30.634"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.635">${length} = 50</msg>
<status starttime="20200323 21:02:30.635" status="PASS" endtime="20200323 21:02:30.635"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 21:02:30.635" status="PASS" endtime="20200323 21:02:30.636"></status>
</kw>
<status starttime="20200323 21:02:30.633" status="PASS" endtime="20200323 21:02:30.636"></status>
</kw>
<status starttime="20200323 21:02:30.628" status="PASS" endtime="20200323 21:02:30.636"></status>
</kw>
<tags>
<tag>HardTest</tag>
</tags>
<status starttime="20200323 21:02:30.626" status="PASS" critical="yes" endtime="20200323 21:02:30.636"></status>
</test>
<doc>Python and Robot Framework.</doc>
<status starttime="20200323 21:02:30.608" status="PASS" endtime="20200323 21:02:30.636"></status>
</suite>
<suite source="/var/lib/jenkins/workspace/robot/number_test.robot" id="s1-s2" name="Number Test">
<test id="s1-s2-t1" name="Search for the minimum.">
<kw library="libraries.ArrayGeneratorLibrary" name="Find minimum">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.640">${min} = 5</msg>
<status starttime="20200323 21:02:30.640" status="PASS" endtime="20200323 21:02:30.640"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 21:02:30.640" status="PASS" endtime="20200323 21:02:30.640"></status>
</kw>
<kw library="libraries.ArrayGeneratorLibrary" name="Find minimum">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.641">${min} = -5</msg>
<status starttime="20200323 21:02:30.641" status="PASS" endtime="20200323 21:02:30.641"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${-5}</arg>
</arguments>
<status starttime="20200323 21:02:30.641" status="PASS" endtime="20200323 21:02:30.641"></status>
</kw>
<kw library="libraries.ArrayGeneratorLibrary" name="Find minimum">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.642">${min} = 5</msg>
<status starttime="20200323 21:02:30.641" status="PASS" endtime="20200323 21:02:30.642"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 21:02:30.642" status="PASS" endtime="20200323 21:02:30.642"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:02:30.639" status="PASS" critical="yes" endtime="20200323 21:02:30.642"></status>
</test>
<test id="s1-s2-t2" name="Search for the maximum.">
<kw library="libraries.ArrayGeneratorLibrary" name="Find maximum">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.643">${min} = 10</msg>
<status starttime="20200323 21:02:30.643" status="PASS" endtime="20200323 21:02:30.643"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${10}</arg>
</arguments>
<status starttime="20200323 21:02:30.643" status="PASS" endtime="20200323 21:02:30.643"></status>
</kw>
<kw library="libraries.ArrayGeneratorLibrary" name="Find maximum">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.644">${min} = 0</msg>
<status starttime="20200323 21:02:30.644" status="PASS" endtime="20200323 21:02:30.644"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${0}</arg>
</arguments>
<status starttime="20200323 21:02:30.644" status="PASS" endtime="20200323 21:02:30.644"></status>
</kw>
<kw library="libraries.ArrayGeneratorLibrary" name="Find maximum">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:30.645">${min} = 5</msg>
<status starttime="20200323 21:02:30.645" status="PASS" endtime="20200323 21:02:30.645"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 21:02:30.645" status="PASS" endtime="20200323 21:02:30.645"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:02:30.642" status="PASS" critical="yes" endtime="20200323 21:02:30.645"></status>
</test>
<doc>Robot Framework tests.</doc>
<status starttime="20200323 21:02:30.637" status="PASS" endtime="20200323 21:02:30.646"></status>
</suite>
<suite source="/var/lib/jenkins/workspace/robot/statistics_test.robot" id="s1-s3" name="Statistics Test">
<test id="s1-s3-t1" name="Generate valid uniform array">
<kw library="libraries.Distributions" name="Generate uniform array">
<arguments>
<arg>${low}</arg>
<arg>${up}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.050">${array} = [78 87 64 ... 44 86 42]</msg>
<status starttime="20200323 21:02:31.050" status="PASS" endtime="20200323 21:02:31.051"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.052">${length} = 10000</msg>
<status starttime="20200323 21:02:31.051" status="PASS" endtime="20200323 21:02:31.052"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.054">${min} = 1</msg>
<status starttime="20200323 21:02:31.052" status="PASS" endtime="20200323 21:02:31.054"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.056">${max} = 99</msg>
<status starttime="20200323 21:02:31.054" status="PASS" endtime="20200323 21:02:31.056"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($up + $low) / 2</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.057">${m_theory} = 50.5</msg>
<status starttime="20200323 21:02:31.056" status="PASS" endtime="20200323 21:02:31.057"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.058">${m_practice} = 49.9613</msg>
<status starttime="20200323 21:02:31.057" status="PASS" endtime="20200323 21:02:31.058"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(($up - $low + 1)**2 - 1) / 12</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.059">${d_theory} = 833.25</msg>
<status starttime="20200323 21:02:31.058" status="PASS" endtime="20200323 21:02:31.059"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.090">${deviation} = 818.7808</msg>
<status starttime="20200323 21:02:31.059" status="PASS" endtime="20200323 21:02:31.090"></status>
</kw>
<msg level="INFO" timestamp="20200323 21:02:31.090">${d_practice} = 818.7808</msg>
<status starttime="20200323 21:02:31.059" status="PASS" endtime="20200323 21:02:31.090"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 21:02:31.090" status="PASS" endtime="20200323 21:02:31.091"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${low}</arg>
</arguments>
<status starttime="20200323 21:02:31.091" status="PASS" endtime="20200323 21:02:31.091"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${up}</arg>
</arguments>
<status starttime="20200323 21:02:31.091" status="PASS" endtime="20200323 21:02:31.091"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:02:31.092" status="PASS" endtime="20200323 21:02:31.092"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:02:31.092" status="PASS" endtime="20200323 21:02:31.093"></status>
</kw>
<doc>Uniform distribution test.Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:02:31.049" status="PASS" critical="yes" endtime="20200323 21:02:31.093"></status>
</test>
<test id="s1-s3-t2" name="Generate valid binomial array">
<kw library="libraries.Distributions" name="Generate binomial array">
<arguments>
<arg>${p}</arg>
<arg>${n}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.096">${array} = [10  9  8 ...  9 10  9]</msg>
<status starttime="20200323 21:02:31.094" status="PASS" endtime="20200323 21:02:31.096"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.097">${length} = 10000</msg>
<status starttime="20200323 21:02:31.096" status="PASS" endtime="20200323 21:02:31.097"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.099">${min} = 1</msg>
<status starttime="20200323 21:02:31.097" status="PASS" endtime="20200323 21:02:31.099"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.101">${max} = 18</msg>
<status starttime="20200323 21:02:31.099" status="PASS" endtime="20200323 21:02:31.101"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$n * $p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.102">${m_theory} = 10.0</msg>
<status starttime="20200323 21:02:31.101" status="PASS" endtime="20200323 21:02:31.102"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.103">${m_practice} = 10.0305</msg>
<status starttime="20200323 21:02:31.102" status="PASS" endtime="20200323 21:02:31.103"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($p * $n * (1-$p))</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.104">${d_theory} = 5.0</msg>
<status starttime="20200323 21:02:31.103" status="PASS" endtime="20200323 21:02:31.104"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.134">${deviation} = 4.9607</msg>
<status starttime="20200323 21:02:31.104" status="PASS" endtime="20200323 21:02:31.134"></status>
</kw>
<msg level="INFO" timestamp="20200323 21:02:31.135">${d_practice} = 4.9607</msg>
<status starttime="20200323 21:02:31.104" status="PASS" endtime="20200323 21:02:31.135"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 21:02:31.135" status="PASS" endtime="20200323 21:02:31.135"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 21:02:31.135" status="PASS" endtime="20200323 21:02:31.136"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${n}</arg>
</arguments>
<status starttime="20200323 21:02:31.136" status="PASS" endtime="20200323 21:02:31.136"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:02:31.136" status="PASS" endtime="20200323 21:02:31.137"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:02:31.137" status="PASS" endtime="20200323 21:02:31.137"></status>
</kw>
<doc>Binomial distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:02:31.093" status="PASS" critical="yes" endtime="20200323 21:02:31.138"></status>
</test>
<test id="s1-s3-t3" name="Generate valid geometric array">
<kw library="libraries.Distributions" name="Generate geometric array">
<arguments>
<arg>${p}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.139">${array} = [6 3 1 ... 1 2 3]</msg>
<status starttime="20200323 21:02:31.139" status="PASS" endtime="20200323 21:02:31.140"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.141">${length} = 10000</msg>
<status starttime="20200323 21:02:31.140" status="PASS" endtime="20200323 21:02:31.141"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.143">${min} = 1</msg>
<status starttime="20200323 21:02:31.141" status="PASS" endtime="20200323 21:02:31.143"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1/$p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.144">${m_theory} = 2.0</msg>
<status starttime="20200323 21:02:31.143" status="PASS" endtime="20200323 21:02:31.144"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.145">${m_practice} = 1.9982</msg>
<status starttime="20200323 21:02:31.144" status="PASS" endtime="20200323 21:02:31.145"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(1-$p)/($p**2)</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.146">${d_theory} = 2.0</msg>
<status starttime="20200323 21:02:31.145" status="PASS" endtime="20200323 21:02:31.146"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.176">${deviation} = 2.0</msg>
<status starttime="20200323 21:02:31.147" status="PASS" endtime="20200323 21:02:31.177"></status>
</kw>
<msg level="INFO" timestamp="20200323 21:02:31.177">${d_practice} = 2.0</msg>
<status starttime="20200323 21:02:31.146" status="PASS" endtime="20200323 21:02:31.177"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 21:02:31.177" status="PASS" endtime="20200323 21:02:31.177"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 21:02:31.177" status="PASS" endtime="20200323 21:02:31.178"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:02:31.178" status="PASS" endtime="20200323 21:02:31.178"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:02:31.179" status="PASS" endtime="20200323 21:02:31.179"></status>
</kw>
<doc>geometric distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 21:02:31.138" status="PASS" critical="yes" endtime="20200323 21:02:31.180"></status>
</test>
<test id="s1-s3-t4" name="Generate valid poisson array">
<kw name="Generate poisson array with mu ${mu} and size ${size}">
<assign>
<var>${array}</var>
</assign>
<kw library="libraries.Distributions" name="Generate poisson array">
<arguments>
<arg>${mu}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.184">${result} = [10 15 11 ... 12 15  6]</msg>
<status starttime="20200323 21:02:31.181" status="PASS" endtime="20200323 21:02:31.184"></status>
</kw>
<msg level="INFO" timestamp="20200323 21:02:31.184">${array} = [10 15 11 ... 12 15  6]</msg>
<status starttime="20200323 21:02:31.180" status="PASS" endtime="20200323 21:02:31.184"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.185">${length} = 10000</msg>
<status starttime="20200323 21:02:31.184" status="PASS" endtime="20200323 21:02:31.185"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.187">${min} = 1</msg>
<status starttime="20200323 21:02:31.185" status="PASS" endtime="20200323 21:02:31.187"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.188">${m_theory} = 10</msg>
<status starttime="20200323 21:02:31.187" status="PASS" endtime="20200323 21:02:31.188"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.189">${m_practice} = 10.0485</msg>
<status starttime="20200323 21:02:31.188" status="PASS" endtime="20200323 21:02:31.189"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.190">${d_theory} = 10</msg>
<status starttime="20200323 21:02:31.189" status="PASS" endtime="20200323 21:02:31.190"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 21:02:31.199">${deviation} = 10.2041</msg>
<status starttime="20200323 21:02:31.190" status="PASS" endtime="20200323 21:02:31.200"></status>
</kw>
<msg level="INFO" timestamp="20200323 21:02:31.200">${d_practice} = 10.2041</msg>
<status starttime="20200323 21:02:31.190" status="PASS" endtime="20200323 21:02:31.200"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 21:02:31.200" status="PASS" endtime="20200323 21:02:31.200"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 21:02:31.200" status="PASS" endtime="20200323 21:02:31.201"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:02:31.201" status="PASS" endtime="20200323 21:02:31.201"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 21:02:31.202" status="PASS" endtime="20200323 21:02:31.202"></status>
</kw>
<doc>Poisson distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>MiddleTest</tag>
</tags>
<status starttime="20200323 21:02:31.180" status="PASS" critical="yes" endtime="20200323 21:02:31.202"></status>
</test>
<doc>Discrete distribution and Robot Framework.</doc>
<status starttime="20200323 21:02:30.646" status="PASS" endtime="20200323 21:02:31.203"></status>
</suite>
<status starttime="20200323 21:02:30.585" status="PASS" endtime="20200323 21:02:31.204"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">HardTest</stat>
<stat fail="0" pass="2">MiddleTest</stat>
<stat fail="0" pass="6">SimpleTest</stat>
</tag>
<suite>
<stat name="Array Test &amp; Number Test &amp; Statistics Test" fail="0" id="s1" pass="9">Array Test &amp; Number Test &amp; Statistics Test</stat>
<stat name="Array Test" fail="0" id="s1-s1" pass="3">Array Test &amp; Number Test &amp; Statistics Test.Array Test</stat>
<stat name="Number Test" fail="0" id="s1-s2" pass="2">Array Test &amp; Number Test &amp; Statistics Test.Number Test</stat>
<stat name="Statistics Test" fail="0" id="s1-s3" pass="4">Array Test &amp; Number Test &amp; Statistics Test.Statistics Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
