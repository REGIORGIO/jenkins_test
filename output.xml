<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.5.3 on linux)" generated="20200323 20:52:40.885" rpa="false">
<suite name="Array Test &amp; Number Test &amp; Statistics Test" id="s1">
<suite name="Array Test" source="/var/lib/jenkins/workspace/robot/array_test.robot" id="s1-s1">
<test name="Generatiing valid array." id="s1-s1-t1">
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${size}</arg>
<arg>${minimum}</arg>
<arg>${maximum}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.915">${array} = [6, 9, 8, 2, 8, 8, 2, 3, 7, 2, 4, 4, 5, 6, 1, 7, 6, 5, 9, 3, 5, 6, 3, 1, 3, 8, 2, 7, 4, 9, 4, 1, 9, 8, 6, 4, 8, 5, 6, 7, 4, 8, 8, 9, 10, 7, 8, 9, 7, 10, 4, 9, 7, 10, 2, 7, 5, 2, 10, 1, 4, 5, 1, 5, 6, ...</msg>
<status starttime="20200323 20:52:40.915" status="PASS" endtime="20200323 20:52:40.915"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.918">${length} = 100</msg>
<status starttime="20200323 20:52:40.915" status="PASS" endtime="20200323 20:52:40.918"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.919">${min} = 1</msg>
<status starttime="20200323 20:52:40.918" status="PASS" endtime="20200323 20:52:40.919"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.920">${max} = 10</msg>
<status starttime="20200323 20:52:40.919" status="PASS" endtime="20200323 20:52:40.920"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 20:52:40.920" status="PASS" endtime="20200323 20:52:40.920"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${minimum}</arg>
</arguments>
<status starttime="20200323 20:52:40.920" status="PASS" endtime="20200323 20:52:40.921"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${maximum}</arg>
</arguments>
<status starttime="20200323 20:52:40.921" status="PASS" endtime="20200323 20:52:40.921"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:52:40.914" status="PASS" critical="yes" endtime="20200323 20:52:40.921"></status>
</test>
<test name="Generatiing valid array using decorator." id="s1-s1-t2">
<kw name="Generate 10 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.923">${result} = [1, 10, 5, 2, 10, 9, 3, 10, 5, 6]</msg>
<status starttime="20200323 20:52:40.922" status="PASS" endtime="20200323 20:52:40.923"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:52:40.923">${array} = [1, 10, 5, 2, 10, 9, 3, 10, 5, 6]</msg>
<status starttime="20200323 20:52:40.922" status="PASS" endtime="20200323 20:52:40.923"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.924">${length} = 10</msg>
<status starttime="20200323 20:52:40.923" status="PASS" endtime="20200323 20:52:40.924"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.925">${min} = 1</msg>
<status starttime="20200323 20:52:40.924" status="PASS" endtime="20200323 20:52:40.925"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.926">${max} = 10</msg>
<status starttime="20200323 20:52:40.925" status="PASS" endtime="20200323 20:52:40.926"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${10}</arg>
</arguments>
<status starttime="20200323 20:52:40.926" status="PASS" endtime="20200323 20:52:40.926"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 20:52:40.926" status="PASS" endtime="20200323 20:52:40.926"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${10}</arg>
</arguments>
<status starttime="20200323 20:52:40.926" status="PASS" endtime="20200323 20:52:40.927"></status>
</kw>
<tags>
<tag>MiddleTest</tag>
</tags>
<status starttime="20200323 20:52:40.922" status="PASS" critical="yes" endtime="20200323 20:52:40.927"></status>
</test>
<test name="Generating valid array and search even and odd numbers." id="s1-s1-t3">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>even</arg>
<arg>odd</arg>
</arguments>
<assign>
<var>${types}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.928">${types} = ['even', 'odd']</msg>
<status starttime="20200323 20:52:40.928" status="PASS" endtime="20200323 20:52:40.928"></status>
</kw>
<kw name="Generate 100 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.929">${result} = [9, 3, 8, 2, 3, 10, 3, 6, 5, 10, 4, 7, 9, 6, 10, 3, 2, 9, 6, 9, 10, 8, 6, 1, 2, 3, 2, 5, 8, 6, 8, 8, 3, 5, 10, 10, 7, 4, 6, 3, 4, 3, 6, 5, 9, 9, 8, 1, 4, 1, 1, 1, 6, 9, 4, 4, 1, 9, 9, 7, 5, 7, 4, 4, 7...</msg>
<status starttime="20200323 20:52:40.928" status="PASS" endtime="20200323 20:52:40.929"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:52:40.929">${array} = [9, 3, 8, 2, 3, 10, 3, 6, 5, 10, 4, 7, 9, 6, 10, 3, 2, 9, 6, 9, 10, 8, 6, 1, 2, 3, 2, 5, 8, 6, 8, 8, 3, 5, 10, 10, 7, 4, 6, 3, 4, 3, 6, 5, 9, 9, 8, 1, 4, 1, 1, 1, 6, 9, 4, 4, 1, 9, 9, 7, 5, 7, 4, 4, 7...</msg>
<status starttime="20200323 20:52:40.928" status="PASS" endtime="20200323 20:52:40.929"></status>
</kw>
<kw name="${type} IN [ @{types} ]" type="for">
<kw name="${type} = even" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find even number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 == 0]</arg>
</arguments>
<assign>
<var>${evens}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.932">${evens} = [8, 2, 10, 6, 10, 4, 6, 10, 2, 6, 10, 8, 6, 2, 2, 8, 6, 8, 8, 10, 10, 4, 6, 4, 6, 8, 4, 6, 4, 4, 4, 4, 10, 2, 8, 6, 10, 4, 10, 8, 8, 10, 2, 4, 2, 2]</msg>
<status starttime="20200323 20:52:40.931" status="PASS" endtime="20200323 20:52:40.932"></status>
</kw>
<status starttime="20200323 20:52:40.931" status="PASS" endtime="20200323 20:52:40.932"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:52:40.932">${numbers} = [8, 2, 10, 6, 10, 4, 6, 10, 2, 6, 10, 8, 6, 2, 2, 8, 6, 8, 8, 10, 10, 4, 6, 4, 6, 8, 4, 6, 4, 4, 4, 4, 10, 2, 8, 6, 10, 4, 10, 8, 8, 10, 2, 4, 2, 2]</msg>
<status starttime="20200323 20:52:40.929" status="PASS" endtime="20200323 20:52:40.932"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.933">${length} = 46</msg>
<status starttime="20200323 20:52:40.932" status="PASS" endtime="20200323 20:52:40.933"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 20:52:40.933" status="PASS" endtime="20200323 20:52:40.933"></status>
</kw>
<status starttime="20200323 20:52:40.929" status="PASS" endtime="20200323 20:52:40.934"></status>
</kw>
<kw name="${type} = odd" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find odd number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 != 0]</arg>
</arguments>
<assign>
<var>${odds}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.935">${odds} = [9, 3, 3, 3, 5, 7, 9, 3, 9, 9, 1, 3, 5, 3, 5, 7, 3, 3, 5, 9, 9, 1, 1, 1, 1, 9, 1, 9, 9, 7, 5, 7, 7, 9, 3, 3, 1, 7, 9, 3, 7, 1, 7, 5, 1, 9, 5, 9, 9, 5, 1, 5, 7, 3]</msg>
<status starttime="20200323 20:52:40.934" status="PASS" endtime="20200323 20:52:40.935"></status>
</kw>
<status starttime="20200323 20:52:40.934" status="PASS" endtime="20200323 20:52:40.935"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:52:40.935">${numbers} = [9, 3, 3, 3, 5, 7, 9, 3, 9, 9, 1, 3, 5, 3, 5, 7, 3, 3, 5, 9, 9, 1, 1, 1, 1, 9, 1, 9, 9, 7, 5, 7, 7, 9, 3, 3, 1, 7, 9, 3, 7, 1, 7, 5, 1, 9, 5, 9, 9, 5, 1, 5, 7, 3]</msg>
<status starttime="20200323 20:52:40.934" status="PASS" endtime="20200323 20:52:40.935"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.936">${length} = 54</msg>
<status starttime="20200323 20:52:40.935" status="PASS" endtime="20200323 20:52:40.936"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status starttime="20200323 20:52:40.936" status="PASS" endtime="20200323 20:52:40.936"></status>
</kw>
<status starttime="20200323 20:52:40.934" status="PASS" endtime="20200323 20:52:40.937"></status>
</kw>
<status starttime="20200323 20:52:40.929" status="PASS" endtime="20200323 20:52:40.937"></status>
</kw>
<tags>
<tag>HardTest</tag>
</tags>
<status starttime="20200323 20:52:40.927" status="PASS" critical="yes" endtime="20200323 20:52:40.937"></status>
</test>
<doc>Python and Robot Framework.</doc>
<status starttime="20200323 20:52:40.909" status="PASS" endtime="20200323 20:52:40.937"></status>
</suite>
<suite name="Number Test" source="/var/lib/jenkins/workspace/robot/number_test.robot" id="s1-s2">
<test name="Search for the minimum." id="s1-s2-t1">
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.941">${min} = 5</msg>
<status starttime="20200323 20:52:40.940" status="PASS" endtime="20200323 20:52:40.941"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 20:52:40.941" status="PASS" endtime="20200323 20:52:40.941"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.942">${min} = -5</msg>
<status starttime="20200323 20:52:40.941" status="PASS" endtime="20200323 20:52:40.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${-5}</arg>
</arguments>
<status starttime="20200323 20:52:40.942" status="PASS" endtime="20200323 20:52:40.942"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.942">${min} = 5</msg>
<status starttime="20200323 20:52:40.942" status="PASS" endtime="20200323 20:52:40.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 20:52:40.942" status="PASS" endtime="20200323 20:52:40.943"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:52:40.940" status="PASS" critical="yes" endtime="20200323 20:52:40.943"></status>
</test>
<test name="Search for the maximum." id="s1-s2-t2">
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.944">${min} = 10</msg>
<status starttime="20200323 20:52:40.944" status="PASS" endtime="20200323 20:52:40.944"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${10}</arg>
</arguments>
<status starttime="20200323 20:52:40.944" status="PASS" endtime="20200323 20:52:40.944"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.945">${min} = 0</msg>
<status starttime="20200323 20:52:40.944" status="PASS" endtime="20200323 20:52:40.945"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${0}</arg>
</arguments>
<status starttime="20200323 20:52:40.945" status="PASS" endtime="20200323 20:52:40.945"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:40.946">${min} = 5</msg>
<status starttime="20200323 20:52:40.945" status="PASS" endtime="20200323 20:52:40.946"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status starttime="20200323 20:52:40.946" status="PASS" endtime="20200323 20:52:40.946"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:52:40.943" status="PASS" critical="yes" endtime="20200323 20:52:40.946"></status>
</test>
<doc>Robot Framework tests.</doc>
<status starttime="20200323 20:52:40.938" status="PASS" endtime="20200323 20:52:40.946"></status>
</suite>
<suite name="Statistics Test" source="/var/lib/jenkins/workspace/robot/statistics_test.robot" id="s1-s3">
<test name="Generate valid uniform array" id="s1-s3-t1">
<kw name="Generate uniform array" library="libraries.Distributions">
<arguments>
<arg>${low}</arg>
<arg>${up}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.352">${array} = [70 82 91 ... 45 93 30]</msg>
<status starttime="20200323 20:52:41.351" status="PASS" endtime="20200323 20:52:41.352"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.353">${length} = 10000</msg>
<status starttime="20200323 20:52:41.352" status="PASS" endtime="20200323 20:52:41.353"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.355">${min} = 1</msg>
<status starttime="20200323 20:52:41.353" status="PASS" endtime="20200323 20:52:41.355"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.357">${max} = 99</msg>
<status starttime="20200323 20:52:41.355" status="PASS" endtime="20200323 20:52:41.357"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($up + $low) / 2</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.358">${m_theory} = 50.5</msg>
<status starttime="20200323 20:52:41.357" status="PASS" endtime="20200323 20:52:41.358"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.359">${m_practice} = 49.4519</msg>
<status starttime="20200323 20:52:41.358" status="PASS" endtime="20200323 20:52:41.359"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(($up - $low + 1)**2 - 1) / 12</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.360">${d_theory} = 833.25</msg>
<status starttime="20200323 20:52:41.359" status="PASS" endtime="20200323 20:52:41.360"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.394">${deviation} = 810.699</msg>
<status starttime="20200323 20:52:41.361" status="PASS" endtime="20200323 20:52:41.394"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:52:41.394">${d_practice} = 810.699</msg>
<status starttime="20200323 20:52:41.360" status="PASS" endtime="20200323 20:52:41.394"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 20:52:41.394" status="PASS" endtime="20200323 20:52:41.395"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${low}</arg>
</arguments>
<status starttime="20200323 20:52:41.395" status="PASS" endtime="20200323 20:52:41.395"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${up}</arg>
</arguments>
<status starttime="20200323 20:52:41.395" status="PASS" endtime="20200323 20:52:41.396"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:52:41.396" status="PASS" endtime="20200323 20:52:41.397"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:52:41.397" status="PASS" endtime="20200323 20:52:41.397"></status>
</kw>
<doc>Uniform distribution test.Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:52:41.350" status="PASS" critical="yes" endtime="20200323 20:52:41.398"></status>
</test>
<test name="Generate valid binomial array" id="s1-s3-t2">
<kw name="Generate binomial array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${n}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.400">${array} = [13 11 15 ... 11 12 11]</msg>
<status starttime="20200323 20:52:41.399" status="PASS" endtime="20200323 20:52:41.400"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.401">${length} = 10000</msg>
<status starttime="20200323 20:52:41.401" status="PASS" endtime="20200323 20:52:41.401"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.403">${min} = 2</msg>
<status starttime="20200323 20:52:41.401" status="PASS" endtime="20200323 20:52:41.403"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.405">${max} = 19</msg>
<status starttime="20200323 20:52:41.404" status="PASS" endtime="20200323 20:52:41.405"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$n * $p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.406">${m_theory} = 10.0</msg>
<status starttime="20200323 20:52:41.406" status="PASS" endtime="20200323 20:52:41.406"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.407">${m_practice} = 10.0048</msg>
<status starttime="20200323 20:52:41.406" status="PASS" endtime="20200323 20:52:41.407"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($p * $n * (1-$p))</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.408">${d_theory} = 5.0</msg>
<status starttime="20200323 20:52:41.407" status="PASS" endtime="20200323 20:52:41.408"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.440">${deviation} = 5.0032</msg>
<status starttime="20200323 20:52:41.409" status="PASS" endtime="20200323 20:52:41.440"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:52:41.441">${d_practice} = 5.0032</msg>
<status starttime="20200323 20:52:41.408" status="PASS" endtime="20200323 20:52:41.441"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 20:52:41.441" status="PASS" endtime="20200323 20:52:41.441"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 20:52:41.441" status="PASS" endtime="20200323 20:52:41.442"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${n}</arg>
</arguments>
<status starttime="20200323 20:52:41.442" status="PASS" endtime="20200323 20:52:41.442"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:52:41.442" status="PASS" endtime="20200323 20:52:41.443"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:52:41.443" status="PASS" endtime="20200323 20:52:41.444"></status>
</kw>
<doc>Binomial distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:52:41.398" status="PASS" critical="yes" endtime="20200323 20:52:41.444"></status>
</test>
<test name="Generate valid geometric array" id="s1-s3-t3">
<kw name="Generate geometric array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.446">${array} = [2 1 1 ... 1 6 1]</msg>
<status starttime="20200323 20:52:41.445" status="PASS" endtime="20200323 20:52:41.446"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.447">${length} = 10000</msg>
<status starttime="20200323 20:52:41.446" status="PASS" endtime="20200323 20:52:41.447"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.449">${min} = 1</msg>
<status starttime="20200323 20:52:41.447" status="PASS" endtime="20200323 20:52:41.449"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1/$p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.450">${m_theory} = 2.0</msg>
<status starttime="20200323 20:52:41.449" status="PASS" endtime="20200323 20:52:41.450"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.451">${m_practice} = 2.0013</msg>
<status starttime="20200323 20:52:41.450" status="PASS" endtime="20200323 20:52:41.451"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(1-$p)/($p**2)</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.452">${d_theory} = 2.0</msg>
<status starttime="20200323 20:52:41.451" status="PASS" endtime="20200323 20:52:41.452"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.483">${deviation} = 1.9535</msg>
<status starttime="20200323 20:52:41.452" status="PASS" endtime="20200323 20:52:41.483"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:52:41.484">${d_practice} = 1.9535</msg>
<status starttime="20200323 20:52:41.452" status="PASS" endtime="20200323 20:52:41.484"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 20:52:41.484" status="PASS" endtime="20200323 20:52:41.484"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 20:52:41.484" status="PASS" endtime="20200323 20:52:41.485"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:52:41.485" status="PASS" endtime="20200323 20:52:41.486"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:52:41.486" status="PASS" endtime="20200323 20:52:41.486"></status>
</kw>
<doc>geometric distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status starttime="20200323 20:52:41.444" status="PASS" critical="yes" endtime="20200323 20:52:41.487"></status>
</test>
<test name="Generate valid poisson array" id="s1-s3-t4">
<kw name="Generate poisson array with mu ${mu} and size ${size}">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate poisson array" library="libraries.Distributions">
<arguments>
<arg>${mu}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.491">${result} = [13  6 10 ... 13  8 12]</msg>
<status starttime="20200323 20:52:41.488" status="PASS" endtime="20200323 20:52:41.491"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:52:41.491">${array} = [13  6 10 ... 13  8 12]</msg>
<status starttime="20200323 20:52:41.488" status="PASS" endtime="20200323 20:52:41.491"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.492">${length} = 10000</msg>
<status starttime="20200323 20:52:41.491" status="PASS" endtime="20200323 20:52:41.492"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.494">${min} = 0</msg>
<status starttime="20200323 20:52:41.492" status="PASS" endtime="20200323 20:52:41.494"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.495">${m_theory} = 10</msg>
<status starttime="20200323 20:52:41.494" status="PASS" endtime="20200323 20:52:41.495"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.496">${m_practice} = 9.9827</msg>
<status starttime="20200323 20:52:41.495" status="PASS" endtime="20200323 20:52:41.496"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.497">${d_theory} = 10</msg>
<status starttime="20200323 20:52:41.496" status="PASS" endtime="20200323 20:52:41.497"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:52:41.506">${deviation} = 9.9539</msg>
<status starttime="20200323 20:52:41.498" status="PASS" endtime="20200323 20:52:41.506"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:52:41.506">${d_practice} = 9.9539</msg>
<status starttime="20200323 20:52:41.497" status="PASS" endtime="20200323 20:52:41.507"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status starttime="20200323 20:52:41.507" status="PASS" endtime="20200323 20:52:41.507"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status starttime="20200323 20:52:41.507" status="PASS" endtime="20200323 20:52:41.508"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:52:41.508" status="PASS" endtime="20200323 20:52:41.508"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status starttime="20200323 20:52:41.508" status="PASS" endtime="20200323 20:52:41.509"></status>
</kw>
<doc>Poisson distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>MiddleTest</tag>
</tags>
<status starttime="20200323 20:52:41.487" status="PASS" critical="yes" endtime="20200323 20:52:41.509"></status>
</test>
<doc>Discrete distribution and Robot Framework.</doc>
<status starttime="20200323 20:52:40.947" status="PASS" endtime="20200323 20:52:41.509"></status>
</suite>
<status starttime="20200323 20:52:40.886" status="PASS" endtime="20200323 20:52:41.511"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">HardTest</stat>
<stat fail="0" pass="2">MiddleTest</stat>
<stat fail="0" pass="6">SimpleTest</stat>
</tag>
<suite>
<stat fail="0" pass="9" id="s1" name="Array Test &amp; Number Test &amp; Statistics Test">Array Test &amp; Number Test &amp; Statistics Test</stat>
<stat fail="0" pass="3" id="s1-s1" name="Array Test">Array Test &amp; Number Test &amp; Statistics Test.Array Test</stat>
<stat fail="0" pass="2" id="s1-s2" name="Number Test">Array Test &amp; Number Test &amp; Statistics Test.Number Test</stat>
<stat fail="0" pass="4" id="s1-s3" name="Statistics Test">Array Test &amp; Number Test &amp; Statistics Test.Statistics Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
