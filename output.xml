<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on darwin)" generated="20200323 19:18:09.548" rpa="false">
<suite id="s1" name="Array Test &amp; Number Test &amp; Statistics Test">
<suite id="s1-s1" name="Array Test" source="/Users/georgy/Dell/jenkins/jenkins/array_test.robot">
<test id="s1-s1-t1" name="Generatiing valid array.">
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${size}</arg>
<arg>${minimum}</arg>
<arg>${maximum}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 19:18:09.578" level="INFO">${array} = [5, 6, 1, 8, 7, 1, 9, 8, 9, 10, 2, 1, 5, 3, 3, 5, 10, 9, 5, 1, 8, 5, 3, 7, 6, 8, 6, 10, 9, 4, 7, 6, 6, 8, 5, 2, 1, 10, 5, 7, 10, 5, 8, 7, 2, 9, 3, 5, 10, 9, 2, 8, 7, 9, 7, 5, 4, 2, 9, 3, 5, 2, 3, 3, 1...</msg>
<status status="PASS" starttime="20200323 19:18:09.577" endtime="20200323 19:18:09.578"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 19:18:09.581" level="INFO">${length} = 100</msg>
<status status="PASS" starttime="20200323 19:18:09.578" endtime="20200323 19:18:09.581"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:09.582" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200323 19:18:09.581" endtime="20200323 19:18:09.582"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 19:18:09.583" level="INFO">${max} = 10</msg>
<status status="PASS" starttime="20200323 19:18:09.582" endtime="20200323 19:18:09.583"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.583" endtime="20200323 19:18:09.583"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${minimum}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.583" endtime="20200323 19:18:09.583"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${maximum}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.583" endtime="20200323 19:18:09.584"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 19:18:09.577" endtime="20200323 19:18:09.584" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Generatiing valid array using decorator.">
<kw name="Generate 10 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 19:18:09.585" level="INFO">${result} = [1, 4, 3, 6, 5, 8, 8, 6, 4, 9]</msg>
<status status="PASS" starttime="20200323 19:18:09.584" endtime="20200323 19:18:09.585"></status>
</kw>
<msg timestamp="20200323 19:18:09.585" level="INFO">${array} = [1, 4, 3, 6, 5, 8, 8, 6, 4, 9]</msg>
<status status="PASS" starttime="20200323 19:18:09.584" endtime="20200323 19:18:09.585"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 19:18:09.585" level="INFO">${length} = 10</msg>
<status status="PASS" starttime="20200323 19:18:09.585" endtime="20200323 19:18:09.585"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:09.586" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200323 19:18:09.586" endtime="20200323 19:18:09.586"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 19:18:09.587" level="INFO">${max} = 9</msg>
<status status="PASS" starttime="20200323 19:18:09.586" endtime="20200323 19:18:09.587"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.587" endtime="20200323 19:18:09.587"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.587" endtime="20200323 19:18:09.587"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${10}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.588" endtime="20200323 19:18:09.588"></status>
</kw>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" starttime="20200323 19:18:09.584" endtime="20200323 19:18:09.588" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Generating valid array and search even and odd numbers.">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>even</arg>
<arg>odd</arg>
</arguments>
<assign>
<var>${types}</var>
</assign>
<msg timestamp="20200323 19:18:09.589" level="INFO">${types} = ['even', 'odd']</msg>
<status status="PASS" starttime="20200323 19:18:09.589" endtime="20200323 19:18:09.589"></status>
</kw>
<kw name="Generate 100 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 19:18:09.590" level="INFO">${result} = [10, 6, 7, 5, 5, 1, 7, 3, 7, 5, 6, 4, 5, 8, 10, 5, 5, 1, 7, 5, 7, 9, 2, 10, 10, 1, 7, 10, 9, 10, 9, 2, 2, 4, 1, 4, 1, 3, 3, 4, 7, 6, 6, 6, 3, 5, 4, 6, 5, 7, 8, 7, 8, 10, 1, 10, 2, 5, 6, 2, 4, 10, 2, 5...</msg>
<status status="PASS" starttime="20200323 19:18:09.589" endtime="20200323 19:18:09.590"></status>
</kw>
<msg timestamp="20200323 19:18:09.590" level="INFO">${array} = [10, 6, 7, 5, 5, 1, 7, 3, 7, 5, 6, 4, 5, 8, 10, 5, 5, 1, 7, 5, 7, 9, 2, 10, 10, 1, 7, 10, 9, 10, 9, 2, 2, 4, 1, 4, 1, 3, 3, 4, 7, 6, 6, 6, 3, 5, 4, 6, 5, 7, 8, 7, 8, 10, 1, 10, 2, 5, 6, 2, 4, 10, 2, 5...</msg>
<status status="PASS" starttime="20200323 19:18:09.589" endtime="20200323 19:18:09.590"></status>
</kw>
<kw name="${type} IN [ @{types} ]" type="for">
<kw name="${type} = even" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find even number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 == 0]</arg>
</arguments>
<assign>
<var>${evens}</var>
</assign>
<msg timestamp="20200323 19:18:09.592" level="INFO">${evens} = [10, 6, 6, 4, 8, 10, 2, 10, 10, 10, 10, 2, 2, 4, 4, 4, 6, 6, 6, 4, 6, 8, 8, 10, 10, 2, 6, 2, 4, 10, 2, 8, 8, 4, 6, 10, 4, 6, 8, 10, 2, 4, 10, 8]</msg>
<status status="PASS" starttime="20200323 19:18:09.591" endtime="20200323 19:18:09.592"></status>
</kw>
<status status="PASS" starttime="20200323 19:18:09.590" endtime="20200323 19:18:09.592"></status>
</kw>
<msg timestamp="20200323 19:18:09.592" level="INFO">${numbers} = [10, 6, 6, 4, 8, 10, 2, 10, 10, 10, 10, 2, 2, 4, 4, 4, 6, 6, 6, 4, 6, 8, 8, 10, 10, 2, 6, 2, 4, 10, 2, 8, 8, 4, 6, 10, 4, 6, 8, 10, 2, 4, 10, 8]</msg>
<status status="PASS" starttime="20200323 19:18:09.590" endtime="20200323 19:18:09.592"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 19:18:09.593" level="INFO">${length} = 44</msg>
<status status="PASS" starttime="20200323 19:18:09.592" endtime="20200323 19:18:09.593"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.593" endtime="20200323 19:18:09.593"></status>
</kw>
<status status="PASS" starttime="20200323 19:18:09.590" endtime="20200323 19:18:09.593"></status>
</kw>
<kw name="${type} = odd" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find odd number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 != 0]</arg>
</arguments>
<assign>
<var>${odds}</var>
</assign>
<msg timestamp="20200323 19:18:09.594" level="INFO">${odds} = [7, 5, 5, 1, 7, 3, 7, 5, 5, 5, 5, 1, 7, 5, 7, 9, 1, 7, 9, 9, 1, 1, 3, 3, 7, 3, 5, 5, 7, 7, 1, 5, 5, 3, 9, 1, 1, 5, 3, 5, 1, 9, 7, 5, 3, 1, 9, 5, 7, 5, 5, 7, 7, 7, 5, 1]</msg>
<status status="PASS" starttime="20200323 19:18:09.594" endtime="20200323 19:18:09.594"></status>
</kw>
<status status="PASS" starttime="20200323 19:18:09.594" endtime="20200323 19:18:09.594"></status>
</kw>
<msg timestamp="20200323 19:18:09.595" level="INFO">${numbers} = [7, 5, 5, 1, 7, 3, 7, 5, 5, 5, 5, 1, 7, 5, 7, 9, 1, 7, 9, 9, 1, 1, 3, 3, 7, 3, 5, 5, 7, 7, 1, 5, 5, 3, 9, 1, 1, 5, 3, 5, 1, 9, 7, 5, 3, 1, 9, 5, 7, 5, 5, 7, 7, 7, 5, 1]</msg>
<status status="PASS" starttime="20200323 19:18:09.593" endtime="20200323 19:18:09.595"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 19:18:09.595" level="INFO">${length} = 56</msg>
<status status="PASS" starttime="20200323 19:18:09.595" endtime="20200323 19:18:09.595"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.595" endtime="20200323 19:18:09.596"></status>
</kw>
<status status="PASS" starttime="20200323 19:18:09.593" endtime="20200323 19:18:09.596"></status>
</kw>
<status status="PASS" starttime="20200323 19:18:09.590" endtime="20200323 19:18:09.596"></status>
</kw>
<tags>
<tag>HardTest</tag>
</tags>
<status status="PASS" starttime="20200323 19:18:09.588" endtime="20200323 19:18:09.596" critical="yes"></status>
</test>
<doc>Python and Robot Framework.</doc>
<status status="PASS" starttime="20200323 19:18:09.572" endtime="20200323 19:18:09.596"></status>
</suite>
<suite id="s1-s2" name="Number Test" source="/Users/georgy/Dell/jenkins/jenkins/number_test.robot">
<test id="s1-s2-t1" name="Search for the minimum.">
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:09.598" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200323 19:18:09.598" endtime="20200323 19:18:09.598"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.599" endtime="20200323 19:18:09.599"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:09.599" level="INFO">${min} = -5</msg>
<status status="PASS" starttime="20200323 19:18:09.599" endtime="20200323 19:18:09.599"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${-5}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.599" endtime="20200323 19:18:09.599"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:09.600" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200323 19:18:09.599" endtime="20200323 19:18:09.600"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.600" endtime="20200323 19:18:09.600"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 19:18:09.598" endtime="20200323 19:18:09.600" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Search for the maximum.">
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:09.601" level="INFO">${min} = 10</msg>
<status status="PASS" starttime="20200323 19:18:09.601" endtime="20200323 19:18:09.601"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.601" endtime="20200323 19:18:09.601"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:09.602" level="INFO">${min} = 0</msg>
<status status="PASS" starttime="20200323 19:18:09.601" endtime="20200323 19:18:09.602"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.602" endtime="20200323 19:18:09.602"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:09.602" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200323 19:18:09.602" endtime="20200323 19:18:09.602"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:09.602" endtime="20200323 19:18:09.603"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 19:18:09.600" endtime="20200323 19:18:09.603" critical="yes"></status>
</test>
<doc>Robot Framework tests.</doc>
<status status="PASS" starttime="20200323 19:18:09.596" endtime="20200323 19:18:09.603"></status>
</suite>
<suite id="s1-s3" name="Statistics Test" source="/Users/georgy/Dell/jenkins/jenkins/statistics_test.robot">
<test id="s1-s3-t1" name="Generate valid uniform array">
<kw name="Generate uniform array" library="libraries.Distributions">
<arguments>
<arg>${low}</arg>
<arg>${up}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 19:18:10.272" level="INFO">${array} = [40 20 93 ... 92  6 48]</msg>
<status status="PASS" starttime="20200323 19:18:10.272" endtime="20200323 19:18:10.273"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 19:18:10.273" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200323 19:18:10.273" endtime="20200323 19:18:10.273"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:10.275" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200323 19:18:10.273" endtime="20200323 19:18:10.275"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 19:18:10.277" level="INFO">${max} = 99</msg>
<status status="PASS" starttime="20200323 19:18:10.275" endtime="20200323 19:18:10.277"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($up + $low) / 2</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 19:18:10.278" level="INFO">${m_theory} = 50.5</msg>
<status status="PASS" starttime="20200323 19:18:10.277" endtime="20200323 19:18:10.278"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 19:18:10.279" level="INFO">${m_practice} = 50.0376</msg>
<status status="PASS" starttime="20200323 19:18:10.278" endtime="20200323 19:18:10.279"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(($up - $low + 1)**2 - 1) / 12</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 19:18:10.279" level="INFO">${d_theory} = 833.25</msg>
<status status="PASS" starttime="20200323 19:18:10.279" endtime="20200323 19:18:10.280"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 19:18:10.307" level="INFO">${deviation} = 811.1556</msg>
<status status="PASS" starttime="20200323 19:18:10.280" endtime="20200323 19:18:10.307"></status>
</kw>
<msg timestamp="20200323 19:18:10.307" level="INFO">${d_practice} = 811.1556</msg>
<status status="PASS" starttime="20200323 19:18:10.280" endtime="20200323 19:18:10.307"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.307" endtime="20200323 19:18:10.308"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.308" endtime="20200323 19:18:10.308"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${up}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.308" endtime="20200323 19:18:10.308"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.308" endtime="20200323 19:18:10.309"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.309" endtime="20200323 19:18:10.309"></status>
</kw>
<doc>Uniform distribution test.Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 19:18:10.271" endtime="20200323 19:18:10.309" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Generate valid binomial array">
<kw name="Generate binomial array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${n}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 19:18:10.311" level="INFO">${array} = [ 9  7  7 ... 10 11  9]</msg>
<status status="PASS" starttime="20200323 19:18:10.310" endtime="20200323 19:18:10.311"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 19:18:10.312" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200323 19:18:10.311" endtime="20200323 19:18:10.312"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:10.313" level="INFO">${min} = 2</msg>
<status status="PASS" starttime="20200323 19:18:10.312" endtime="20200323 19:18:10.313"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 19:18:10.315" level="INFO">${max} = 17</msg>
<status status="PASS" starttime="20200323 19:18:10.313" endtime="20200323 19:18:10.315"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$n * $p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 19:18:10.316" level="INFO">${m_theory} = 10.0</msg>
<status status="PASS" starttime="20200323 19:18:10.315" endtime="20200323 19:18:10.316"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 19:18:10.316" level="INFO">${m_practice} = 10.0212</msg>
<status status="PASS" starttime="20200323 19:18:10.316" endtime="20200323 19:18:10.316"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($p * $n * (1-$p))</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 19:18:10.317" level="INFO">${d_theory} = 5.0</msg>
<status status="PASS" starttime="20200323 19:18:10.316" endtime="20200323 19:18:10.317"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 19:18:10.342" level="INFO">${deviation} = 4.9334</msg>
<status status="PASS" starttime="20200323 19:18:10.318" endtime="20200323 19:18:10.342"></status>
</kw>
<msg timestamp="20200323 19:18:10.342" level="INFO">${d_practice} = 4.9334</msg>
<status status="PASS" starttime="20200323 19:18:10.317" endtime="20200323 19:18:10.342"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.342" endtime="20200323 19:18:10.343"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.343" endtime="20200323 19:18:10.343"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${n}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.343" endtime="20200323 19:18:10.343"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.343" endtime="20200323 19:18:10.344"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.344" endtime="20200323 19:18:10.344"></status>
</kw>
<doc>Binomial distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 19:18:10.309" endtime="20200323 19:18:10.344" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="Generate valid geometric array">
<kw name="Generate geometric array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 19:18:10.345" level="INFO">${array} = [1 1 1 ... 1 1 1]</msg>
<status status="PASS" starttime="20200323 19:18:10.345" endtime="20200323 19:18:10.346"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 19:18:10.346" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200323 19:18:10.346" endtime="20200323 19:18:10.346"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:10.348" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200323 19:18:10.346" endtime="20200323 19:18:10.348"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1/$p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 19:18:10.348" level="INFO">${m_theory} = 2.0</msg>
<status status="PASS" starttime="20200323 19:18:10.348" endtime="20200323 19:18:10.348"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 19:18:10.349" level="INFO">${m_practice} = 2.003</msg>
<status status="PASS" starttime="20200323 19:18:10.348" endtime="20200323 19:18:10.349"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(1-$p)/($p**2)</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 19:18:10.350" level="INFO">${d_theory} = 2.0</msg>
<status status="PASS" starttime="20200323 19:18:10.349" endtime="20200323 19:18:10.350"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 19:18:10.375" level="INFO">${deviation} = 2.0364</msg>
<status status="PASS" starttime="20200323 19:18:10.350" endtime="20200323 19:18:10.375"></status>
</kw>
<msg timestamp="20200323 19:18:10.375" level="INFO">${d_practice} = 2.0364</msg>
<status status="PASS" starttime="20200323 19:18:10.350" endtime="20200323 19:18:10.375"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.375" endtime="20200323 19:18:10.375"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.375" endtime="20200323 19:18:10.376"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.376" endtime="20200323 19:18:10.376"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.376" endtime="20200323 19:18:10.376"></status>
</kw>
<doc>geometric distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 19:18:10.345" endtime="20200323 19:18:10.376" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="Generate valid poisson array">
<kw name="Generate poisson array with mu ${mu} and size ${size}">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate poisson array" library="libraries.Distributions">
<arguments>
<arg>${mu}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 19:18:10.378" level="INFO">${result} = [ 5  8 15 ... 13  8  9]</msg>
<status status="PASS" starttime="20200323 19:18:10.377" endtime="20200323 19:18:10.379"></status>
</kw>
<msg timestamp="20200323 19:18:10.379" level="INFO">${array} = [ 5  8 15 ... 13  8  9]</msg>
<status status="PASS" starttime="20200323 19:18:10.377" endtime="20200323 19:18:10.379"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 19:18:10.379" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200323 19:18:10.379" endtime="20200323 19:18:10.380"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 19:18:10.381" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200323 19:18:10.380" endtime="20200323 19:18:10.381"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 19:18:10.382" level="INFO">${m_theory} = 10</msg>
<status status="PASS" starttime="20200323 19:18:10.381" endtime="20200323 19:18:10.382"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 19:18:10.382" level="INFO">${m_practice} = 9.9698</msg>
<status status="PASS" starttime="20200323 19:18:10.382" endtime="20200323 19:18:10.382"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 19:18:10.383" level="INFO">${d_theory} = 10</msg>
<status status="PASS" starttime="20200323 19:18:10.382" endtime="20200323 19:18:10.383"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 19:18:10.389" level="INFO">${deviation} = 10.13</msg>
<status status="PASS" starttime="20200323 19:18:10.383" endtime="20200323 19:18:10.390"></status>
</kw>
<msg timestamp="20200323 19:18:10.390" level="INFO">${d_practice} = 10.13</msg>
<status status="PASS" starttime="20200323 19:18:10.383" endtime="20200323 19:18:10.390"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.390" endtime="20200323 19:18:10.390"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.390" endtime="20200323 19:18:10.390"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.390" endtime="20200323 19:18:10.391"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 19:18:10.391" endtime="20200323 19:18:10.392"></status>
</kw>
<doc>Poisson distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" starttime="20200323 19:18:10.377" endtime="20200323 19:18:10.392" critical="yes"></status>
</test>
<doc>Discrete distribution and Robot Framework.</doc>
<status status="PASS" starttime="20200323 19:18:09.603" endtime="20200323 19:18:10.392"></status>
</suite>
<status status="PASS" starttime="20200323 19:18:09.550" endtime="20200323 19:18:10.393"></status>
</suite>
<statistics>
<total>
<stat pass="9" fail="0">Critical Tests</stat>
<stat pass="9" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">HardTest</stat>
<stat pass="2" fail="0">MiddleTest</stat>
<stat pass="6" fail="0">SimpleTest</stat>
</tag>
<suite>
<stat pass="9" fail="0" id="s1" name="Array Test &amp; Number Test &amp; Statistics Test">Array Test &amp; Number Test &amp; Statistics Test</stat>
<stat pass="3" fail="0" id="s1-s1" name="Array Test">Array Test &amp; Number Test &amp; Statistics Test.Array Test</stat>
<stat pass="2" fail="0" id="s1-s2" name="Number Test">Array Test &amp; Number Test &amp; Statistics Test.Number Test</stat>
<stat pass="4" fail="0" id="s1-s3" name="Statistics Test">Array Test &amp; Number Test &amp; Statistics Test.Statistics Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
