<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on darwin)" generated="20200323 13:19:30.612" rpa="false">
<suite id="s1" name="Array Test &amp; Number Test &amp; Statistics Test">
<suite id="s1-s1" name="Array Test" source="/Users/georgy/Dell/jenkins/jenkins/array_test.robot">
<test id="s1-s1-t1" name="Generatiing valid array.">
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${size}</arg>
<arg>${minimum}</arg>
<arg>${maximum}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 13:19:30.641" level="INFO">${array} = [5, 8, 8, 7, 6, 9, 8, 3, 3, 9, 3, 10, 9, 8, 7, 3, 6, 5, 7, 10, 7, 7, 2, 2, 4, 10, 2, 5, 7, 5, 2, 5, 6, 7, 8, 4, 8, 6, 1, 8, 5, 1, 4, 3, 8, 5, 7, 4, 10, 2, 9, 3, 6, 7, 8, 9, 5, 3, 8, 9, 8, 2, 2, 3, 4, ...</msg>
<status status="PASS" starttime="20200323 13:19:30.641" endtime="20200323 13:19:30.641"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 13:19:30.645" level="INFO">${length} = 100</msg>
<status status="PASS" starttime="20200323 13:19:30.642" endtime="20200323 13:19:30.645"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:30.646" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200323 13:19:30.646" endtime="20200323 13:19:30.646"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 13:19:30.647" level="INFO">${max} = 10</msg>
<status status="PASS" starttime="20200323 13:19:30.646" endtime="20200323 13:19:30.647"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.647" endtime="20200323 13:19:30.647"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${minimum}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.647" endtime="20200323 13:19:30.648"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${maximum}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.648" endtime="20200323 13:19:30.648"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 13:19:30.641" endtime="20200323 13:19:30.648" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Generatiing valid array using decorator.">
<kw name="Generate 10 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 13:19:30.649" level="INFO">${result} = [10, 7, 8, 1, 1, 9, 2, 5, 3, 4]</msg>
<status status="PASS" starttime="20200323 13:19:30.649" endtime="20200323 13:19:30.649"></status>
</kw>
<msg timestamp="20200323 13:19:30.649" level="INFO">${array} = [10, 7, 8, 1, 1, 9, 2, 5, 3, 4]</msg>
<status status="PASS" starttime="20200323 13:19:30.649" endtime="20200323 13:19:30.649"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 13:19:30.650" level="INFO">${length} = 10</msg>
<status status="PASS" starttime="20200323 13:19:30.650" endtime="20200323 13:19:30.650"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:30.651" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200323 13:19:30.650" endtime="20200323 13:19:30.651"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 13:19:30.652" level="INFO">${max} = 10</msg>
<status status="PASS" starttime="20200323 13:19:30.651" endtime="20200323 13:19:30.652"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.652" endtime="20200323 13:19:30.652"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.652" endtime="20200323 13:19:30.652"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${10}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.652" endtime="20200323 13:19:30.653"></status>
</kw>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" starttime="20200323 13:19:30.648" endtime="20200323 13:19:30.653" critical="yes"></status>
</test>
<test id="s1-s1-t3" name="Generating valid array and search even and odd numbers.">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>even</arg>
<arg>odd</arg>
</arguments>
<assign>
<var>${types}</var>
</assign>
<msg timestamp="20200323 13:19:30.653" level="INFO">${types} = ['even', 'odd']</msg>
<status status="PASS" starttime="20200323 13:19:30.653" endtime="20200323 13:19:30.653"></status>
</kw>
<kw name="Generate 100 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 13:19:30.654" level="INFO">${result} = [1, 9, 9, 3, 9, 1, 9, 3, 2, 10, 8, 1, 6, 3, 7, 5, 1, 5, 5, 1, 2, 6, 8, 4, 2, 3, 10, 2, 6, 10, 5, 3, 9, 8, 6, 1, 1, 7, 7, 4, 9, 6, 1, 9, 5, 1, 4, 5, 2, 5, 7, 1, 9, 9, 10, 4, 7, 5, 1, 1, 5, 4, 6, 2, 6, ...</msg>
<status status="PASS" starttime="20200323 13:19:30.654" endtime="20200323 13:19:30.654"></status>
</kw>
<msg timestamp="20200323 13:19:30.654" level="INFO">${array} = [1, 9, 9, 3, 9, 1, 9, 3, 2, 10, 8, 1, 6, 3, 7, 5, 1, 5, 5, 1, 2, 6, 8, 4, 2, 3, 10, 2, 6, 10, 5, 3, 9, 8, 6, 1, 1, 7, 7, 4, 9, 6, 1, 9, 5, 1, 4, 5, 2, 5, 7, 1, 9, 9, 10, 4, 7, 5, 1, 1, 5, 4, 6, 2, 6, ...</msg>
<status status="PASS" starttime="20200323 13:19:30.654" endtime="20200323 13:19:30.654"></status>
</kw>
<kw name="${type} IN [ @{types} ]" type="for">
<kw name="${type} = even" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find even number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 == 0]</arg>
</arguments>
<assign>
<var>${evens}</var>
</assign>
<msg timestamp="20200323 13:19:30.656" level="INFO">${evens} = [2, 10, 8, 6, 2, 6, 8, 4, 2, 10, 2, 6, 10, 8, 6, 4, 6, 4, 2, 10, 4, 4, 6, 2, 6, 2, 4, 8, 8, 4, 6, 8, 8, 2, 2, 10, 8, 8, 10, 6, 6, 6, 8]</msg>
<status status="PASS" starttime="20200323 13:19:30.655" endtime="20200323 13:19:30.657"></status>
</kw>
<status status="PASS" starttime="20200323 13:19:30.655" endtime="20200323 13:19:30.657"></status>
</kw>
<msg timestamp="20200323 13:19:30.657" level="INFO">${numbers} = [2, 10, 8, 6, 2, 6, 8, 4, 2, 10, 2, 6, 10, 8, 6, 4, 6, 4, 2, 10, 4, 4, 6, 2, 6, 2, 4, 8, 8, 4, 6, 8, 8, 2, 2, 10, 8, 8, 10, 6, 6, 6, 8]</msg>
<status status="PASS" starttime="20200323 13:19:30.655" endtime="20200323 13:19:30.657"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 13:19:30.657" level="INFO">${length} = 43</msg>
<status status="PASS" starttime="20200323 13:19:30.657" endtime="20200323 13:19:30.658"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.658" endtime="20200323 13:19:30.658"></status>
</kw>
<status status="PASS" starttime="20200323 13:19:30.655" endtime="20200323 13:19:30.658"></status>
</kw>
<kw name="${type} = odd" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find odd number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 != 0]</arg>
</arguments>
<assign>
<var>${odds}</var>
</assign>
<msg timestamp="20200323 13:19:30.659" level="INFO">${odds} = [1, 9, 9, 3, 9, 1, 9, 3, 1, 3, 7, 5, 1, 5, 5, 1, 3, 5, 3, 9, 1, 1, 7, 7, 9, 1, 9, 5, 1, 5, 5, 7, 1, 9, 9, 7, 5, 1, 1, 5, 3, 3, 7, 9, 1, 3, 7, 7, 7, 3, 7, 5, 9, 3, 5, 5, 9]</msg>
<status status="PASS" starttime="20200323 13:19:30.658" endtime="20200323 13:19:30.659"></status>
</kw>
<status status="PASS" starttime="20200323 13:19:30.658" endtime="20200323 13:19:30.659"></status>
</kw>
<msg timestamp="20200323 13:19:30.659" level="INFO">${numbers} = [1, 9, 9, 3, 9, 1, 9, 3, 1, 3, 7, 5, 1, 5, 5, 1, 3, 5, 3, 9, 1, 1, 7, 7, 9, 1, 9, 5, 1, 5, 5, 7, 1, 9, 9, 7, 5, 1, 1, 5, 3, 3, 7, 9, 1, 3, 7, 7, 7, 3, 7, 5, 9, 3, 5, 5, 9]</msg>
<status status="PASS" starttime="20200323 13:19:30.658" endtime="20200323 13:19:30.659"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 13:19:30.660" level="INFO">${length} = 57</msg>
<status status="PASS" starttime="20200323 13:19:30.659" endtime="20200323 13:19:30.660"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.660" endtime="20200323 13:19:30.660"></status>
</kw>
<status status="PASS" starttime="20200323 13:19:30.658" endtime="20200323 13:19:30.660"></status>
</kw>
<status status="PASS" starttime="20200323 13:19:30.654" endtime="20200323 13:19:30.661"></status>
</kw>
<tags>
<tag>HardTest</tag>
</tags>
<status status="PASS" starttime="20200323 13:19:30.653" endtime="20200323 13:19:30.661" critical="yes"></status>
</test>
<doc>Python and Robot Framework.</doc>
<status status="PASS" starttime="20200323 13:19:30.635" endtime="20200323 13:19:30.661"></status>
</suite>
<suite id="s1-s2" name="Number Test" source="/Users/georgy/Dell/jenkins/jenkins/number_test.robot">
<test id="s1-s2-t1" name="Search for the minimum.">
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:30.664" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200323 13:19:30.663" endtime="20200323 13:19:30.664"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.664" endtime="20200323 13:19:30.664"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:30.664" level="INFO">${min} = -5</msg>
<status status="PASS" starttime="20200323 13:19:30.664" endtime="20200323 13:19:30.664"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${-5}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.664" endtime="20200323 13:19:30.665"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:30.665" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200323 13:19:30.665" endtime="20200323 13:19:30.665"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.665" endtime="20200323 13:19:30.665"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 13:19:30.663" endtime="20200323 13:19:30.665" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Search for the maximum.">
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:30.666" level="INFO">${min} = 10</msg>
<status status="PASS" starttime="20200323 13:19:30.666" endtime="20200323 13:19:30.666"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.666" endtime="20200323 13:19:30.666"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:30.667" level="INFO">${min} = 0</msg>
<status status="PASS" starttime="20200323 13:19:30.666" endtime="20200323 13:19:30.667"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.667" endtime="20200323 13:19:30.667"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:30.667" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200323 13:19:30.667" endtime="20200323 13:19:30.667"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:30.667" endtime="20200323 13:19:30.668"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 13:19:30.665" endtime="20200323 13:19:30.668" critical="yes"></status>
</test>
<doc>Robot Framework tests.</doc>
<status status="PASS" starttime="20200323 13:19:30.661" endtime="20200323 13:19:30.668"></status>
</suite>
<suite id="s1-s3" name="Statistics Test" source="/Users/georgy/Dell/jenkins/jenkins/statistics_test.robot">
<test id="s1-s3-t1" name="Generate valid uniform array">
<kw name="Generate uniform array" library="libraries.Distributions">
<arguments>
<arg>${low}</arg>
<arg>${up}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 13:19:31.392" level="INFO">${array} = [77 73 62 ... 21  9 60]</msg>
<status status="PASS" starttime="20200323 13:19:31.391" endtime="20200323 13:19:31.392"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 13:19:31.393" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200323 13:19:31.392" endtime="20200323 13:19:31.393"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:31.395" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200323 13:19:31.393" endtime="20200323 13:19:31.395"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 13:19:31.397" level="INFO">${max} = 99</msg>
<status status="PASS" starttime="20200323 13:19:31.395" endtime="20200323 13:19:31.397"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($up + $low) / 2</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 13:19:31.397" level="INFO">${m_theory} = 50.5</msg>
<status status="PASS" starttime="20200323 13:19:31.397" endtime="20200323 13:19:31.397"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 13:19:31.398" level="INFO">${m_practice} = 50.1389</msg>
<status status="PASS" starttime="20200323 13:19:31.398" endtime="20200323 13:19:31.399"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(($up - $low + 1)**2 - 1) / 12</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 13:19:31.399" level="INFO">${d_theory} = 833.25</msg>
<status status="PASS" starttime="20200323 13:19:31.399" endtime="20200323 13:19:31.399"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 13:19:31.430" level="INFO">${deviation} = 819.838</msg>
<status status="PASS" starttime="20200323 13:19:31.400" endtime="20200323 13:19:31.430"></status>
</kw>
<msg timestamp="20200323 13:19:31.430" level="INFO">${d_practice} = 819.838</msg>
<status status="PASS" starttime="20200323 13:19:31.399" endtime="20200323 13:19:31.430"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.430" endtime="20200323 13:19:31.431"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.431" endtime="20200323 13:19:31.431"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${up}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.431" endtime="20200323 13:19:31.431"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.431" endtime="20200323 13:19:31.432"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.432" endtime="20200323 13:19:31.432"></status>
</kw>
<doc>Uniform distribution test.Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 13:19:31.391" endtime="20200323 13:19:31.432" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Generate valid binomial array">
<kw name="Generate binomial array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${n}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 13:19:31.434" level="INFO">${array} = [11 12 10 ...  7 11 11]</msg>
<status status="PASS" starttime="20200323 13:19:31.433" endtime="20200323 13:19:31.434"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 13:19:31.435" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200323 13:19:31.435" endtime="20200323 13:19:31.435"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:31.437" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200323 13:19:31.435" endtime="20200323 13:19:31.437"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200323 13:19:31.439" level="INFO">${max} = 18</msg>
<status status="PASS" starttime="20200323 13:19:31.437" endtime="20200323 13:19:31.439"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$n * $p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 13:19:31.440" level="INFO">${m_theory} = 10.0</msg>
<status status="PASS" starttime="20200323 13:19:31.439" endtime="20200323 13:19:31.440"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 13:19:31.440" level="INFO">${m_practice} = 9.997</msg>
<status status="PASS" starttime="20200323 13:19:31.440" endtime="20200323 13:19:31.440"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($p * $n * (1-$p))</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 13:19:31.441" level="INFO">${d_theory} = 5.0</msg>
<status status="PASS" starttime="20200323 13:19:31.440" endtime="20200323 13:19:31.441"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 13:19:31.470" level="INFO">${deviation} = 5.0658</msg>
<status status="PASS" starttime="20200323 13:19:31.442" endtime="20200323 13:19:31.470"></status>
</kw>
<msg timestamp="20200323 13:19:31.470" level="INFO">${d_practice} = 5.0658</msg>
<status status="PASS" starttime="20200323 13:19:31.441" endtime="20200323 13:19:31.470"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.470" endtime="20200323 13:19:31.470"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.471" endtime="20200323 13:19:31.471"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${n}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.471" endtime="20200323 13:19:31.472"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.472" endtime="20200323 13:19:31.472"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.472" endtime="20200323 13:19:31.473"></status>
</kw>
<doc>Binomial distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 13:19:31.432" endtime="20200323 13:19:31.473" critical="yes"></status>
</test>
<test id="s1-s3-t3" name="Generate valid geometric array">
<kw name="Generate geometric array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200323 13:19:31.474" level="INFO">${array} = [4 1 2 ... 6 2 4]</msg>
<status status="PASS" starttime="20200323 13:19:31.474" endtime="20200323 13:19:31.474"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 13:19:31.475" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200323 13:19:31.475" endtime="20200323 13:19:31.475"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:31.477" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200323 13:19:31.475" endtime="20200323 13:19:31.477"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1/$p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 13:19:31.478" level="INFO">${m_theory} = 2.0</msg>
<status status="PASS" starttime="20200323 13:19:31.477" endtime="20200323 13:19:31.478"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 13:19:31.479" level="INFO">${m_practice} = 2.0111</msg>
<status status="PASS" starttime="20200323 13:19:31.478" endtime="20200323 13:19:31.479"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(1-$p)/($p**2)</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 13:19:31.480" level="INFO">${d_theory} = 2.0</msg>
<status status="PASS" starttime="20200323 13:19:31.479" endtime="20200323 13:19:31.480"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 13:19:31.507" level="INFO">${deviation} = 2.0025</msg>
<status status="PASS" starttime="20200323 13:19:31.480" endtime="20200323 13:19:31.507"></status>
</kw>
<msg timestamp="20200323 13:19:31.507" level="INFO">${d_practice} = 2.0025</msg>
<status status="PASS" starttime="20200323 13:19:31.480" endtime="20200323 13:19:31.507"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.507" endtime="20200323 13:19:31.508"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.508" endtime="20200323 13:19:31.508"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.508" endtime="20200323 13:19:31.508"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.508" endtime="20200323 13:19:31.509"></status>
</kw>
<doc>geometric distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200323 13:19:31.473" endtime="20200323 13:19:31.509" critical="yes"></status>
</test>
<test id="s1-s3-t4" name="Generate valid poisson array">
<kw name="Generate poisson array with mu ${mu} and size ${size}">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate poisson array" library="libraries.Distributions">
<arguments>
<arg>${mu}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200323 13:19:31.511" level="INFO">${result} = [13 12  4 ... 11  9  9]</msg>
<status status="PASS" starttime="20200323 13:19:31.510" endtime="20200323 13:19:31.512"></status>
</kw>
<msg timestamp="20200323 13:19:31.512" level="INFO">${array} = [13 12  4 ... 11  9  9]</msg>
<status status="PASS" starttime="20200323 13:19:31.510" endtime="20200323 13:19:31.512"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200323 13:19:31.512" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200323 13:19:31.512" endtime="20200323 13:19:31.512"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200323 13:19:31.514" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200323 13:19:31.513" endtime="20200323 13:19:31.514"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200323 13:19:31.515" level="INFO">${m_theory} = 10</msg>
<status status="PASS" starttime="20200323 13:19:31.514" endtime="20200323 13:19:31.515"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200323 13:19:31.515" level="INFO">${m_practice} = 10.018</msg>
<status status="PASS" starttime="20200323 13:19:31.515" endtime="20200323 13:19:31.515"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200323 13:19:31.516" level="INFO">${d_theory} = 10</msg>
<status status="PASS" starttime="20200323 13:19:31.515" endtime="20200323 13:19:31.516"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory}) ** 2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200323 13:19:31.524" level="INFO">${deviation} = 10.0826</msg>
<status status="PASS" starttime="20200323 13:19:31.516" endtime="20200323 13:19:31.524"></status>
</kw>
<msg timestamp="20200323 13:19:31.525" level="INFO">${d_practice} = 10.0826</msg>
<status status="PASS" starttime="20200323 13:19:31.516" endtime="20200323 13:19:31.525"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.525" endtime="20200323 13:19:31.525"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.525" endtime="20200323 13:19:31.525"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.526" endtime="20200323 13:19:31.527"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200323 13:19:31.527" endtime="20200323 13:19:31.527"></status>
</kw>
<doc>Poisson distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" starttime="20200323 13:19:31.509" endtime="20200323 13:19:31.527" critical="yes"></status>
</test>
<doc>Discrete distribution and Robot Framework.</doc>
<status status="PASS" starttime="20200323 13:19:30.668" endtime="20200323 13:19:31.528"></status>
</suite>
<status status="PASS" starttime="20200323 13:19:30.613" endtime="20200323 13:19:31.528"></status>
</suite>
<statistics>
<total>
<stat pass="9" fail="0">Critical Tests</stat>
<stat pass="9" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">HardTest</stat>
<stat pass="2" fail="0">MiddleTest</stat>
<stat pass="6" fail="0">SimpleTest</stat>
</tag>
<suite>
<stat pass="9" fail="0" id="s1" name="Array Test &amp; Number Test &amp; Statistics Test">Array Test &amp; Number Test &amp; Statistics Test</stat>
<stat pass="3" fail="0" id="s1-s1" name="Array Test">Array Test &amp; Number Test &amp; Statistics Test.Array Test</stat>
<stat pass="2" fail="0" id="s1-s2" name="Number Test">Array Test &amp; Number Test &amp; Statistics Test.Number Test</stat>
<stat pass="4" fail="0" id="s1-s3" name="Statistics Test">Array Test &amp; Number Test &amp; Statistics Test.Statistics Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
