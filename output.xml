<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generator="Robot 3.1.2 (Python 3.5.3 on linux)" generated="20200323 20:53:00.563">
<suite name="Array Test &amp; Number Test &amp; Statistics Test" id="s1">
<suite name="Array Test" id="s1-s1" source="/var/lib/jenkins/workspace/robot/array_test.robot">
<test name="Generatiing valid array." id="s1-s1-t1">
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${size}</arg>
<arg>${minimum}</arg>
<arg>${maximum}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.593">${array} = [1, 1, 8, 3, 2, 5, 5, 10, 6, 3, 6, 9, 4, 4, 7, 4, 2, 2, 4, 5, 7, 4, 3, 8, 1, 1, 2, 4, 2, 6, 4, 4, 3, 1, 8, 7, 6, 10, 5, 7, 6, 5, 7, 3, 7, 4, 6, 7, 10, 9, 6, 3, 6, 9, 9, 7, 7, 3, 9, 9, 10, 7, 8, 6, 6, ...</msg>
<status status="PASS" endtime="20200323 20:53:00.593" starttime="20200323 20:53:00.592"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.596">${length} = 100</msg>
<status status="PASS" endtime="20200323 20:53:00.596" starttime="20200323 20:53:00.593"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.597">${min} = 1</msg>
<status status="PASS" endtime="20200323 20:53:00.597" starttime="20200323 20:53:00.596"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.598">${max} = 10</msg>
<status status="PASS" endtime="20200323 20:53:00.598" starttime="20200323 20:53:00.597"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.598" starttime="20200323 20:53:00.598"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${minimum}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.599" starttime="20200323 20:53:00.598"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${maximum}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.599" starttime="20200323 20:53:00.599"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status critical="yes" status="PASS" endtime="20200323 20:53:00.599" starttime="20200323 20:53:00.592"></status>
</test>
<test name="Generatiing valid array using decorator." id="s1-s1-t2">
<kw name="Generate 10 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.600">${result} = [3, 10, 6, 10, 8, 6, 4, 4, 4, 7]</msg>
<status status="PASS" endtime="20200323 20:53:00.601" starttime="20200323 20:53:00.600"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:53:00.601">${array} = [3, 10, 6, 10, 8, 6, 4, 4, 4, 7]</msg>
<status status="PASS" endtime="20200323 20:53:00.601" starttime="20200323 20:53:00.600"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.602">${length} = 10</msg>
<status status="PASS" endtime="20200323 20:53:00.602" starttime="20200323 20:53:00.601"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.602">${min} = 3</msg>
<status status="PASS" endtime="20200323 20:53:00.602" starttime="20200323 20:53:00.602"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.603">${max} = 10</msg>
<status status="PASS" endtime="20200323 20:53:00.603" starttime="20200323 20:53:00.603"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.604" starttime="20200323 20:53:00.603"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${1}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.604" starttime="20200323 20:53:00.604"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${10}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.604" starttime="20200323 20:53:00.604"></status>
</kw>
<tags>
<tag>MiddleTest</tag>
</tags>
<status critical="yes" status="PASS" endtime="20200323 20:53:00.605" starttime="20200323 20:53:00.599"></status>
</test>
<test name="Generating valid array and search even and odd numbers." id="s1-s1-t3">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>even</arg>
<arg>odd</arg>
</arguments>
<assign>
<var>${types}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.606">${types} = ['even', 'odd']</msg>
<status status="PASS" endtime="20200323 20:53:00.606" starttime="20200323 20:53:00.605"></status>
</kw>
<kw name="Generate 100 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.606">${result} = [3, 3, 1, 4, 6, 6, 4, 1, 1, 6, 10, 10, 9, 4, 10, 1, 4, 6, 9, 8, 7, 3, 9, 5, 7, 2, 3, 7, 5, 5, 4, 3, 2, 6, 9, 9, 6, 5, 9, 2, 6, 6, 8, 6, 7, 3, 7, 10, 6, 6, 1, 7, 3, 2, 9, 7, 4, 2, 1, 2, 3, 6, 2, 7, 8, ...</msg>
<status status="PASS" endtime="20200323 20:53:00.606" starttime="20200323 20:53:00.606"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:53:00.607">${array} = [3, 3, 1, 4, 6, 6, 4, 1, 1, 6, 10, 10, 9, 4, 10, 1, 4, 6, 9, 8, 7, 3, 9, 5, 7, 2, 3, 7, 5, 5, 4, 3, 2, 6, 9, 9, 6, 5, 9, 2, 6, 6, 8, 6, 7, 3, 7, 10, 6, 6, 1, 7, 3, 2, 9, 7, 4, 2, 1, 2, 3, 6, 2, 7, 8, ...</msg>
<status status="PASS" endtime="20200323 20:53:00.607" starttime="20200323 20:53:00.606"></status>
</kw>
<kw type="for" name="${type} IN [ @{types} ]">
<kw type="foritem" name="${type} = even">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find even number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 == 0]</arg>
</arguments>
<assign>
<var>${evens}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.609">${evens} = [4, 6, 6, 4, 6, 10, 10, 4, 10, 4, 6, 8, 2, 4, 2, 6, 6, 2, 6, 6, 8, 6, 10, 6, 6, 2, 4, 2, 2, 6, 2, 8, 8, 2, 4, 4, 6, 4, 8, 2, 8, 2, 4, 6, 4, 6, 4, 6, 6, 2, 2, 4, 10]</msg>
<status status="PASS" endtime="20200323 20:53:00.610" starttime="20200323 20:53:00.609"></status>
</kw>
<status status="PASS" endtime="20200323 20:53:00.610" starttime="20200323 20:53:00.608"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:53:00.610">${numbers} = [4, 6, 6, 4, 6, 10, 10, 4, 10, 4, 6, 8, 2, 4, 2, 6, 6, 2, 6, 6, 8, 6, 10, 6, 6, 2, 4, 2, 2, 6, 2, 8, 8, 2, 4, 4, 6, 4, 8, 2, 8, 2, 4, 6, 4, 6, 4, 6, 6, 2, 2, 4, 10]</msg>
<status status="PASS" endtime="20200323 20:53:00.610" starttime="20200323 20:53:00.607"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.611">${length} = 53</msg>
<status status="PASS" endtime="20200323 20:53:00.611" starttime="20200323 20:53:00.610"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.611" starttime="20200323 20:53:00.611"></status>
</kw>
<status status="PASS" endtime="20200323 20:53:00.611" starttime="20200323 20:53:00.607"></status>
</kw>
<kw type="foritem" name="${type} = odd">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find odd number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 != 0]</arg>
</arguments>
<assign>
<var>${odds}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.613">${odds} = [3, 3, 1, 1, 1, 9, 1, 9, 7, 3, 9, 5, 7, 3, 7, 5, 5, 3, 9, 9, 5, 9, 7, 3, 7, 1, 7, 3, 9, 7, 1, 3, 7, 7, 7, 7, 9, 5, 3, 9, 5, 5, 3, 5, 1, 5, 3]</msg>
<status status="PASS" endtime="20200323 20:53:00.613" starttime="20200323 20:53:00.612"></status>
</kw>
<status status="PASS" endtime="20200323 20:53:00.613" starttime="20200323 20:53:00.612"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:53:00.613">${numbers} = [3, 3, 1, 1, 1, 9, 1, 9, 7, 3, 9, 5, 7, 3, 7, 5, 5, 3, 9, 9, 5, 9, 7, 3, 7, 1, 7, 3, 9, 7, 1, 3, 7, 7, 7, 7, 9, 5, 3, 9, 5, 5, 3, 5, 1, 5, 3]</msg>
<status status="PASS" endtime="20200323 20:53:00.613" starttime="20200323 20:53:00.611"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.614">${length} = 47</msg>
<status status="PASS" endtime="20200323 20:53:00.614" starttime="20200323 20:53:00.613"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.614" starttime="20200323 20:53:00.614"></status>
</kw>
<status status="PASS" endtime="20200323 20:53:00.614" starttime="20200323 20:53:00.611"></status>
</kw>
<status status="PASS" endtime="20200323 20:53:00.614" starttime="20200323 20:53:00.607"></status>
</kw>
<tags>
<tag>HardTest</tag>
</tags>
<status critical="yes" status="PASS" endtime="20200323 20:53:00.614" starttime="20200323 20:53:00.605"></status>
</test>
<doc>Python and Robot Framework.</doc>
<status status="PASS" endtime="20200323 20:53:00.615" starttime="20200323 20:53:00.587"></status>
</suite>
<suite name="Number Test" id="s1-s2" source="/var/lib/jenkins/workspace/robot/number_test.robot">
<test name="Search for the minimum." id="s1-s2-t1">
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.618">${min} = 5</msg>
<status status="PASS" endtime="20200323 20:53:00.618" starttime="20200323 20:53:00.618"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.619" starttime="20200323 20:53:00.618"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.619">${min} = -5</msg>
<status status="PASS" endtime="20200323 20:53:00.619" starttime="20200323 20:53:00.619"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${-5}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.619" starttime="20200323 20:53:00.619"></status>
</kw>
<kw name="Find minimum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.620">${min} = 5</msg>
<status status="PASS" endtime="20200323 20:53:00.620" starttime="20200323 20:53:00.620"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.620" starttime="20200323 20:53:00.620"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status critical="yes" status="PASS" endtime="20200323 20:53:00.620" starttime="20200323 20:53:00.618"></status>
</test>
<test name="Search for the maximum." id="s1-s2-t2">
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.621">${min} = 10</msg>
<status status="PASS" endtime="20200323 20:53:00.621" starttime="20200323 20:53:00.621"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.622" starttime="20200323 20:53:00.621"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.622">${min} = 0</msg>
<status status="PASS" endtime="20200323 20:53:00.622" starttime="20200323 20:53:00.622"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.623" starttime="20200323 20:53:00.622"></status>
</kw>
<kw name="Find maximum" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:00.623">${min} = 5</msg>
<status status="PASS" endtime="20200323 20:53:00.623" starttime="20200323 20:53:00.623"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:00.623" starttime="20200323 20:53:00.623"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status critical="yes" status="PASS" endtime="20200323 20:53:00.623" starttime="20200323 20:53:00.621"></status>
</test>
<doc>Robot Framework tests.</doc>
<status status="PASS" endtime="20200323 20:53:00.624" starttime="20200323 20:53:00.615"></status>
</suite>
<suite name="Statistics Test" id="s1-s3" source="/var/lib/jenkins/workspace/robot/statistics_test.robot">
<test name="Generate valid uniform array" id="s1-s3-t1">
<kw name="Generate uniform array" library="libraries.Distributions">
<arguments>
<arg>${low}</arg>
<arg>${up}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.019">${array} = [15 83 16 ... 39 73 88]</msg>
<status status="PASS" endtime="20200323 20:53:01.019" starttime="20200323 20:53:01.018"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.020">${length} = 10000</msg>
<status status="PASS" endtime="20200323 20:53:01.020" starttime="20200323 20:53:01.019"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.022">${min} = 1</msg>
<status status="PASS" endtime="20200323 20:53:01.022" starttime="20200323 20:53:01.020"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.024">${max} = 99</msg>
<status status="PASS" endtime="20200323 20:53:01.024" starttime="20200323 20:53:01.022"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($up + $low) / 2</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.025">${m_theory} = 50.5</msg>
<status status="PASS" endtime="20200323 20:53:01.025" starttime="20200323 20:53:01.024"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.026">${m_practice} = 50.2854</msg>
<status status="PASS" endtime="20200323 20:53:01.026" starttime="20200323 20:53:01.025"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(($up - $low + 1)**2 - 1) / 12</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.028">${d_theory} = 833.25</msg>
<status status="PASS" endtime="20200323 20:53:01.028" starttime="20200323 20:53:01.027"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.059">${deviation} = 823.8538</msg>
<status status="PASS" endtime="20200323 20:53:01.059" starttime="20200323 20:53:01.028"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:53:01.059">${d_practice} = 823.8538</msg>
<status status="PASS" endtime="20200323 20:53:01.059" starttime="20200323 20:53:01.028"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.060" starttime="20200323 20:53:01.060"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${low}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.060" starttime="20200323 20:53:01.060"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${up}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.061" starttime="20200323 20:53:01.061"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.062" starttime="20200323 20:53:01.061"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.062" starttime="20200323 20:53:01.062"></status>
</kw>
<doc>Uniform distribution test.Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status critical="yes" status="PASS" endtime="20200323 20:53:01.062" starttime="20200323 20:53:01.017"></status>
</test>
<test name="Generate valid binomial array" id="s1-s3-t2">
<kw name="Generate binomial array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${n}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.065">${array} = [11 12  7 ... 10  7 10]</msg>
<status status="PASS" endtime="20200323 20:53:01.065" starttime="20200323 20:53:01.063"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.066">${length} = 10000</msg>
<status status="PASS" endtime="20200323 20:53:01.066" starttime="20200323 20:53:01.065"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.068">${min} = 2</msg>
<status status="PASS" endtime="20200323 20:53:01.068" starttime="20200323 20:53:01.066"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.070">${max} = 18</msg>
<status status="PASS" endtime="20200323 20:53:01.070" starttime="20200323 20:53:01.068"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$n * $p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.071">${m_theory} = 10.0</msg>
<status status="PASS" endtime="20200323 20:53:01.071" starttime="20200323 20:53:01.070"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.072">${m_practice} = 9.9907</msg>
<status status="PASS" endtime="20200323 20:53:01.072" starttime="20200323 20:53:01.071"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($p * $n * (1-$p))</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.073">${d_theory} = 5.0</msg>
<status status="PASS" endtime="20200323 20:53:01.073" starttime="20200323 20:53:01.072"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.104">${deviation} = 4.8805</msg>
<status status="PASS" endtime="20200323 20:53:01.104" starttime="20200323 20:53:01.074"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:53:01.104">${d_practice} = 4.8805</msg>
<status status="PASS" endtime="20200323 20:53:01.105" starttime="20200323 20:53:01.073"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.105" starttime="20200323 20:53:01.105"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.106" starttime="20200323 20:53:01.105"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${n}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.106" starttime="20200323 20:53:01.106"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.107" starttime="20200323 20:53:01.106"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.107" starttime="20200323 20:53:01.107"></status>
</kw>
<doc>Binomial distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status critical="yes" status="PASS" endtime="20200323 20:53:01.107" starttime="20200323 20:53:01.063"></status>
</test>
<test name="Generate valid geometric array" id="s1-s3-t3">
<kw name="Generate geometric array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.109">${array} = [1 1 1 ... 2 1 2]</msg>
<status status="PASS" endtime="20200323 20:53:01.109" starttime="20200323 20:53:01.108"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.110">${length} = 10000</msg>
<status status="PASS" endtime="20200323 20:53:01.110" starttime="20200323 20:53:01.109"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.112">${min} = 1</msg>
<status status="PASS" endtime="20200323 20:53:01.112" starttime="20200323 20:53:01.110"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1/$p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.113">${m_theory} = 2.0</msg>
<status status="PASS" endtime="20200323 20:53:01.113" starttime="20200323 20:53:01.112"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.114">${m_practice} = 1.9856</msg>
<status status="PASS" endtime="20200323 20:53:01.114" starttime="20200323 20:53:01.113"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(1-$p)/($p**2)</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.115">${d_theory} = 2.0</msg>
<status status="PASS" endtime="20200323 20:53:01.115" starttime="20200323 20:53:01.114"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.146">${deviation} = 1.9594</msg>
<status status="PASS" endtime="20200323 20:53:01.146" starttime="20200323 20:53:01.116"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:53:01.146">${d_practice} = 1.9594</msg>
<status status="PASS" endtime="20200323 20:53:01.146" starttime="20200323 20:53:01.115"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.147" starttime="20200323 20:53:01.146"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.147" starttime="20200323 20:53:01.147"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.148" starttime="20200323 20:53:01.147"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.149" starttime="20200323 20:53:01.148"></status>
</kw>
<doc>geometric distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status critical="yes" status="PASS" endtime="20200323 20:53:01.149" starttime="20200323 20:53:01.108"></status>
</test>
<test name="Generate valid poisson array" id="s1-s3-t4">
<kw name="Generate poisson array with mu ${mu} and size ${size}">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate poisson array" library="libraries.Distributions">
<arguments>
<arg>${mu}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.153">${result} = [14  7 11 ... 17  7 10]</msg>
<status status="PASS" endtime="20200323 20:53:01.153" starttime="20200323 20:53:01.150"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:53:01.153">${array} = [14  7 11 ... 17  7 10]</msg>
<status status="PASS" endtime="20200323 20:53:01.154" starttime="20200323 20:53:01.150"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.154">${length} = 10000</msg>
<status status="PASS" endtime="20200323 20:53:01.154" starttime="20200323 20:53:01.154"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.156">${min} = 1</msg>
<status status="PASS" endtime="20200323 20:53:01.156" starttime="20200323 20:53:01.155"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.157">${m_theory} = 10</msg>
<status status="PASS" endtime="20200323 20:53:01.157" starttime="20200323 20:53:01.157"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.158">${m_practice} = 10.0338</msg>
<status status="PASS" endtime="20200323 20:53:01.158" starttime="20200323 20:53:01.158"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.159">${d_theory} = 10</msg>
<status status="PASS" endtime="20200323 20:53:01.159" starttime="20200323 20:53:01.159"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg level="INFO" timestamp="20200323 20:53:01.168">${deviation} = 9.8292</msg>
<status status="PASS" endtime="20200323 20:53:01.168" starttime="20200323 20:53:01.160"></status>
</kw>
<msg level="INFO" timestamp="20200323 20:53:01.168">${d_practice} = 9.8292</msg>
<status status="PASS" endtime="20200323 20:53:01.168" starttime="20200323 20:53:01.159"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.169" starttime="20200323 20:53:01.168"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.169" starttime="20200323 20:53:01.169"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.170" starttime="20200323 20:53:01.169"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" endtime="20200323 20:53:01.170" starttime="20200323 20:53:01.170"></status>
</kw>
<doc>Poisson distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>MiddleTest</tag>
</tags>
<status critical="yes" status="PASS" endtime="20200323 20:53:01.171" starttime="20200323 20:53:01.149"></status>
</test>
<doc>Discrete distribution and Robot Framework.</doc>
<status status="PASS" endtime="20200323 20:53:01.171" starttime="20200323 20:53:00.624"></status>
</suite>
<status status="PASS" endtime="20200323 20:53:01.172" starttime="20200323 20:53:00.564"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">HardTest</stat>
<stat fail="0" pass="2">MiddleTest</stat>
<stat fail="0" pass="6">SimpleTest</stat>
</tag>
<suite>
<stat fail="0" name="Array Test &amp; Number Test &amp; Statistics Test" pass="9" id="s1">Array Test &amp; Number Test &amp; Statistics Test</stat>
<stat fail="0" name="Array Test" pass="3" id="s1-s1">Array Test &amp; Number Test &amp; Statistics Test.Array Test</stat>
<stat fail="0" name="Number Test" pass="2" id="s1-s2">Array Test &amp; Number Test &amp; Statistics Test.Number Test</stat>
<stat fail="0" name="Statistics Test" pass="4" id="s1-s3">Array Test &amp; Number Test &amp; Statistics Test.Statistics Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
