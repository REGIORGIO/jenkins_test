<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on darwin)" generated="20200404 15:05:18.495" rpa="false">
<suite id="s1" name="Jenkins" source="/Users/georgy/Dell/jenkins/jenkins">
<suite id="s1-s1" name="Tests" source="/Users/georgy/Dell/jenkins/jenkins/tests">
<suite id="s1-s1-s1" name="Array Test" source="/Users/georgy/Dell/jenkins/jenkins/tests/array_test.robot">
<test id="s1-s1-s1-t1" name="Generatiing valid array.">
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${size}</arg>
<arg>${minimum}</arg>
<arg>${maximum}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200404 15:05:18.527" level="INFO">${array} = [8, 4, 5, 7, 10, 3, 2, 6, 10, 5, 2, 5, 4, 7, 4, 8, 5, 6, 10, 9, 5, 1, 8, 6, 5, 2, 7, 10, 3, 8, 7, 7, 7, 7, 6, 2, 9, 4, 3, 1, 10, 6, 8, 1, 5, 6, 8, 5, 8, 6, 5, 1, 4, 5, 10, 5, 6, 9, 1, 3, 8, 6, 9, 2, 9...</msg>
<status status="PASS" starttime="20200404 15:05:18.527" endtime="20200404 15:05:18.527"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200404 15:05:18.532" level="INFO">${length} = 100</msg>
<status status="PASS" starttime="20200404 15:05:18.527" endtime="20200404 15:05:18.532"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200404 15:05:18.533" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200404 15:05:18.532" endtime="20200404 15:05:18.533"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200404 15:05:18.533" level="INFO">${max} = 10</msg>
<status status="PASS" starttime="20200404 15:05:18.533" endtime="20200404 15:05:18.533"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:18.533" endtime="20200404 15:05:18.534"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${minimum}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:18.534" endtime="20200404 15:05:18.534"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${maximum}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:18.534" endtime="20200404 15:05:18.534"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200404 15:05:18.526" endtime="20200404 15:05:18.535" critical="no"></status>
</test>
<test id="s1-s1-s1-t2" name="Generatiing valid array using decorator.">
<kw name="Generate 10 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200404 15:05:18.536" level="INFO">${result} = [5, 6, 10, 9, 10, 2, 3, 4, 7, 2]</msg>
<status status="PASS" starttime="20200404 15:05:18.535" endtime="20200404 15:05:18.536"></status>
</kw>
<msg timestamp="20200404 15:05:18.536" level="INFO">${array} = [5, 6, 10, 9, 10, 2, 3, 4, 7, 2]</msg>
<status status="PASS" starttime="20200404 15:05:18.535" endtime="20200404 15:05:18.536"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200404 15:05:18.536" level="INFO">${length} = 10</msg>
<status status="PASS" starttime="20200404 15:05:18.536" endtime="20200404 15:05:18.537"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200404 15:05:18.537" level="INFO">${min} = 2</msg>
<status status="PASS" starttime="20200404 15:05:18.537" endtime="20200404 15:05:18.537"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200404 15:05:18.538" level="INFO">${max} = 10</msg>
<status status="PASS" starttime="20200404 15:05:18.537" endtime="20200404 15:05:18.538"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:18.538" endtime="20200404 15:05:18.538"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:18.538" endtime="20200404 15:05:18.539"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${10}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:18.539" endtime="20200404 15:05:18.539"></status>
</kw>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" starttime="20200404 15:05:18.535" endtime="20200404 15:05:18.539" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Generating valid array and search even and odd numbers.">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>even</arg>
<arg>odd</arg>
</arguments>
<assign>
<var>${types}</var>
</assign>
<msg timestamp="20200404 15:05:18.540" level="INFO">${types} = ['even', 'odd']</msg>
<status status="PASS" starttime="20200404 15:05:18.540" endtime="20200404 15:05:18.540"></status>
</kw>
<kw name="Generate 100 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200404 15:05:18.541" level="INFO">${result} = [7, 10, 3, 4, 10, 2, 3, 4, 7, 1, 7, 4, 7, 9, 10, 5, 3, 1, 4, 6, 10, 7, 8, 10, 2, 4, 10, 4, 10, 6, 2, 1, 6, 2, 3, 6, 6, 2, 6, 4, 5, 2, 9, 8, 4, 6, 7, 1, 5, 9, 7, 1, 10, 5, 1, 6, 4, 1, 5, 7, 10, 8, 3, 6...</msg>
<status status="PASS" starttime="20200404 15:05:18.540" endtime="20200404 15:05:18.541"></status>
</kw>
<msg timestamp="20200404 15:05:18.541" level="INFO">${array} = [7, 10, 3, 4, 10, 2, 3, 4, 7, 1, 7, 4, 7, 9, 10, 5, 3, 1, 4, 6, 10, 7, 8, 10, 2, 4, 10, 4, 10, 6, 2, 1, 6, 2, 3, 6, 6, 2, 6, 4, 5, 2, 9, 8, 4, 6, 7, 1, 5, 9, 7, 1, 10, 5, 1, 6, 4, 1, 5, 7, 10, 8, 3, 6...</msg>
<status status="PASS" starttime="20200404 15:05:18.540" endtime="20200404 15:05:18.541"></status>
</kw>
<kw name="${type} IN [ @{types} ]" type="for">
<kw name="${type} = even" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find even number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 == 0]</arg>
</arguments>
<assign>
<var>${evens}</var>
</assign>
<msg timestamp="20200404 15:05:18.542" level="INFO">${evens} = [10, 4, 10, 2, 4, 4, 10, 4, 6, 10, 8, 10, 2, 4, 10, 4, 10, 6, 2, 6, 2, 6, 6, 2, 6, 4, 2, 8, 4, 6, 10, 6, 4, 10, 8, 6, 6, 8, 4, 8, 2, 6, 4, 4, 8, 4, 6, 10, 4, 10, 4, 10, 2]</msg>
<status status="PASS" starttime="20200404 15:05:18.542" endtime="20200404 15:05:18.542"></status>
</kw>
<status status="PASS" starttime="20200404 15:05:18.541" endtime="20200404 15:05:18.543"></status>
</kw>
<msg timestamp="20200404 15:05:18.543" level="INFO">${numbers} = [10, 4, 10, 2, 4, 4, 10, 4, 6, 10, 8, 10, 2, 4, 10, 4, 10, 6, 2, 6, 2, 6, 6, 2, 6, 4, 2, 8, 4, 6, 10, 6, 4, 10, 8, 6, 6, 8, 4, 8, 2, 6, 4, 4, 8, 4, 6, 10, 4, 10, 4, 10, 2]</msg>
<status status="PASS" starttime="20200404 15:05:18.541" endtime="20200404 15:05:18.543"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200404 15:05:18.543" level="INFO">${length} = 53</msg>
<status status="PASS" starttime="20200404 15:05:18.543" endtime="20200404 15:05:18.543"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:18.543" endtime="20200404 15:05:18.544"></status>
</kw>
<status status="PASS" starttime="20200404 15:05:18.541" endtime="20200404 15:05:18.544"></status>
</kw>
<kw name="${type} = odd" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find odd number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 != 0]</arg>
</arguments>
<assign>
<var>${odds}</var>
</assign>
<msg timestamp="20200404 15:05:18.545" level="INFO">${odds} = [7, 3, 3, 7, 1, 7, 7, 9, 5, 3, 1, 7, 1, 3, 5, 9, 7, 1, 5, 9, 7, 1, 5, 1, 1, 5, 7, 3, 7, 5, 7, 1, 7, 9, 1, 9, 7, 5, 1, 1, 7, 3, 1, 3, 1, 7, 1]</msg>
<status status="PASS" starttime="20200404 15:05:18.544" endtime="20200404 15:05:18.545"></status>
</kw>
<status status="PASS" starttime="20200404 15:05:18.544" endtime="20200404 15:05:18.545"></status>
</kw>
<msg timestamp="20200404 15:05:18.545" level="INFO">${numbers} = [7, 3, 3, 7, 1, 7, 7, 9, 5, 3, 1, 7, 1, 3, 5, 9, 7, 1, 5, 9, 7, 1, 5, 1, 1, 5, 7, 3, 7, 5, 7, 1, 7, 9, 1, 9, 7, 5, 1, 1, 7, 3, 1, 3, 1, 7, 1]</msg>
<status status="PASS" starttime="20200404 15:05:18.544" endtime="20200404 15:05:18.545"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200404 15:05:18.546" level="INFO">${length} = 47</msg>
<status status="PASS" starttime="20200404 15:05:18.545" endtime="20200404 15:05:18.546"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:18.546" endtime="20200404 15:05:18.546"></status>
</kw>
<status status="PASS" starttime="20200404 15:05:18.544" endtime="20200404 15:05:18.546"></status>
</kw>
<status status="PASS" starttime="20200404 15:05:18.541" endtime="20200404 15:05:18.546"></status>
</kw>
<tags>
<tag>HardTest</tag>
</tags>
<status status="PASS" starttime="20200404 15:05:18.539" endtime="20200404 15:05:18.546" critical="yes"></status>
</test>
<doc>Python and Robot Framework.</doc>
<status status="PASS" starttime="20200404 15:05:18.521" endtime="20200404 15:05:18.547"></status>
</suite>
<suite id="s1-s1-s2" name="Number Test" source="/Users/georgy/Dell/jenkins/jenkins/tests/number_test.robot">
<test id="s1-s1-s2-t1" name="Search for the minimum.">
<kw name="Find minimum">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200404 15:05:18.551" level="FAIL">No keyword with name 'Find minimum' found.</msg>
<status status="FAIL" starttime="20200404 15:05:18.551" endtime="20200404 15:05:18.551"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="FAIL" starttime="20200404 15:05:18.549" endtime="20200404 15:05:18.551" critical="no">No keyword with name 'Find minimum' found.</status>
</test>
<test id="s1-s1-s2-t2" name="Search for the maximum.">
<kw name="Find maximum">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200404 15:05:18.552" level="FAIL">No keyword with name 'Find maximum' found.</msg>
<status status="FAIL" starttime="20200404 15:05:18.552" endtime="20200404 15:05:18.552"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="FAIL" starttime="20200404 15:05:18.551" endtime="20200404 15:05:18.552" critical="no">No keyword with name 'Find maximum' found.</status>
</test>
<doc>Robot Framework tests.</doc>
<status status="PASS" starttime="20200404 15:05:18.547" endtime="20200404 15:05:18.553"></status>
</suite>
<suite id="s1-s1-s3" name="Statistics Test" source="/Users/georgy/Dell/jenkins/jenkins/tests/statistics_test.robot">
<test id="s1-s1-s3-t1" name="Generate valid uniform array">
<kw name="Generate uniform array" library="libraries.Distributions">
<arguments>
<arg>${low}</arg>
<arg>${up}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200404 15:05:19.265" level="INFO">${array} = [34 90 61 ... 90 48 66]</msg>
<status status="PASS" starttime="20200404 15:05:19.264" endtime="20200404 15:05:19.265"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200404 15:05:19.266" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200404 15:05:19.265" endtime="20200404 15:05:19.266"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200404 15:05:19.267" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200404 15:05:19.266" endtime="20200404 15:05:19.267"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200404 15:05:19.269" level="INFO">${max} = 99</msg>
<status status="PASS" starttime="20200404 15:05:19.268" endtime="20200404 15:05:19.269"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($up + $low) / 2</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200404 15:05:19.270" level="INFO">${m_theory} = 50.5</msg>
<status status="PASS" starttime="20200404 15:05:19.269" endtime="20200404 15:05:19.270"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200404 15:05:19.271" level="INFO">${m_practice} = 49.7274</msg>
<status status="PASS" starttime="20200404 15:05:19.270" endtime="20200404 15:05:19.271"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(($up - $low + 1)**2 - 1) / 12</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200404 15:05:19.272" level="INFO">${d_theory} = 833.25</msg>
<status status="PASS" starttime="20200404 15:05:19.271" endtime="20200404 15:05:19.272"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200404 15:05:19.302" level="INFO">${deviation} = 816.952</msg>
<status status="PASS" starttime="20200404 15:05:19.272" endtime="20200404 15:05:19.302"></status>
</kw>
<msg timestamp="20200404 15:05:19.302" level="INFO">${d_practice} = 816.952</msg>
<status status="PASS" starttime="20200404 15:05:19.272" endtime="20200404 15:05:19.302"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.302" endtime="20200404 15:05:19.303"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.303" endtime="20200404 15:05:19.303"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${up}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.303" endtime="20200404 15:05:19.304"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.304" endtime="20200404 15:05:19.304"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.304" endtime="20200404 15:05:19.305"></status>
</kw>
<doc>Uniform distribution test.Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200404 15:05:19.264" endtime="20200404 15:05:19.305" critical="no"></status>
</test>
<test id="s1-s1-s3-t2" name="Generate valid binomial array">
<kw name="Generate binomial array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${n}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200404 15:05:19.307" level="INFO">${array} = [10  7 10 ...  8 11  7]</msg>
<status status="PASS" starttime="20200404 15:05:19.305" endtime="20200404 15:05:19.307"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200404 15:05:19.307" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200404 15:05:19.307" endtime="20200404 15:05:19.307"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200404 15:05:19.309" level="INFO">${min} = 2</msg>
<status status="PASS" starttime="20200404 15:05:19.308" endtime="20200404 15:05:19.309"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200404 15:05:19.311" level="INFO">${max} = 19</msg>
<status status="PASS" starttime="20200404 15:05:19.309" endtime="20200404 15:05:19.311"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$n * $p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200404 15:05:19.312" level="INFO">${m_theory} = 10.0</msg>
<status status="PASS" starttime="20200404 15:05:19.311" endtime="20200404 15:05:19.312"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200404 15:05:19.313" level="INFO">${m_practice} = 10.0023</msg>
<status status="PASS" starttime="20200404 15:05:19.312" endtime="20200404 15:05:19.313"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($p * $n * (1-$p))</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200404 15:05:19.314" level="INFO">${d_theory} = 5.0</msg>
<status status="PASS" starttime="20200404 15:05:19.313" endtime="20200404 15:05:19.314"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200404 15:05:19.340" level="INFO">${deviation} = 5.0375</msg>
<status status="PASS" starttime="20200404 15:05:19.314" endtime="20200404 15:05:19.340"></status>
</kw>
<msg timestamp="20200404 15:05:19.340" level="INFO">${d_practice} = 5.0375</msg>
<status status="PASS" starttime="20200404 15:05:19.314" endtime="20200404 15:05:19.340"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.341" endtime="20200404 15:05:19.341"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.341" endtime="20200404 15:05:19.341"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${n}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.341" endtime="20200404 15:05:19.341"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.342" endtime="20200404 15:05:19.342"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.342" endtime="20200404 15:05:19.342"></status>
</kw>
<doc>Binomial distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200404 15:05:19.305" endtime="20200404 15:05:19.342" critical="no"></status>
</test>
<test id="s1-s1-s3-t3" name="Generate valid geometric array">
<kw name="Generate geometric array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200404 15:05:19.344" level="INFO">${array} = [4 1 1 ... 1 1 2]</msg>
<status status="PASS" starttime="20200404 15:05:19.343" endtime="20200404 15:05:19.344"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200404 15:05:19.344" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200404 15:05:19.344" endtime="20200404 15:05:19.344"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200404 15:05:19.346" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200404 15:05:19.345" endtime="20200404 15:05:19.346"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1/$p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200404 15:05:19.347" level="INFO">${m_theory} = 2.0</msg>
<status status="PASS" starttime="20200404 15:05:19.346" endtime="20200404 15:05:19.347"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200404 15:05:19.347" level="INFO">${m_practice} = 1.9974</msg>
<status status="PASS" starttime="20200404 15:05:19.347" endtime="20200404 15:05:19.347"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(1-$p)/($p**2)</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200404 15:05:19.349" level="INFO">${d_theory} = 2.0</msg>
<status status="PASS" starttime="20200404 15:05:19.347" endtime="20200404 15:05:19.349"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200404 15:05:19.375" level="INFO">${deviation} = 2.0294</msg>
<status status="PASS" starttime="20200404 15:05:19.349" endtime="20200404 15:05:19.375"></status>
</kw>
<msg timestamp="20200404 15:05:19.375" level="INFO">${d_practice} = 2.0294</msg>
<status status="PASS" starttime="20200404 15:05:19.349" endtime="20200404 15:05:19.375"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.375" endtime="20200404 15:05:19.376"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.376" endtime="20200404 15:05:19.376"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.376" endtime="20200404 15:05:19.377"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.377" endtime="20200404 15:05:19.377"></status>
</kw>
<doc>geometric distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200404 15:05:19.343" endtime="20200404 15:05:19.377" critical="no"></status>
</test>
<test id="s1-s1-s3-t4" name="Generate valid poisson array">
<kw name="Generate poisson array with mu ${mu} and size ${size}">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate poisson array" library="libraries.Distributions">
<arguments>
<arg>${mu}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200404 15:05:19.379" level="INFO">${result} = [14  7 13 ... 13 16  7]</msg>
<status status="PASS" starttime="20200404 15:05:19.378" endtime="20200404 15:05:19.379"></status>
</kw>
<msg timestamp="20200404 15:05:19.379" level="INFO">${array} = [14  7 13 ... 13 16  7]</msg>
<status status="PASS" starttime="20200404 15:05:19.378" endtime="20200404 15:05:19.379"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200404 15:05:19.380" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200404 15:05:19.380" endtime="20200404 15:05:19.380"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200404 15:05:19.382" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200404 15:05:19.380" endtime="20200404 15:05:19.382"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200404 15:05:19.382" level="INFO">${m_theory} = 10</msg>
<status status="PASS" starttime="20200404 15:05:19.382" endtime="20200404 15:05:19.382"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200404 15:05:19.383" level="INFO">${m_practice} = 10.0278</msg>
<status status="PASS" starttime="20200404 15:05:19.382" endtime="20200404 15:05:19.383"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200404 15:05:19.384" level="INFO">${d_theory} = 10</msg>
<status status="PASS" starttime="20200404 15:05:19.383" endtime="20200404 15:05:19.384"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200404 15:05:19.390" level="INFO">${deviation} = 9.8872</msg>
<status status="PASS" starttime="20200404 15:05:19.384" endtime="20200404 15:05:19.390"></status>
</kw>
<msg timestamp="20200404 15:05:19.391" level="INFO">${d_practice} = 9.8872</msg>
<status status="PASS" starttime="20200404 15:05:19.384" endtime="20200404 15:05:19.391"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.391" endtime="20200404 15:05:19.391"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.391" endtime="20200404 15:05:19.392"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.392" endtime="20200404 15:05:19.392"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200404 15:05:19.392" endtime="20200404 15:05:19.393"></status>
</kw>
<doc>Poisson distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" starttime="20200404 15:05:19.377" endtime="20200404 15:05:19.393" critical="yes"></status>
</test>
<doc>Discrete distribution and Robot Framework.</doc>
<status status="PASS" starttime="20200404 15:05:18.553" endtime="20200404 15:05:19.393"></status>
</suite>
<status status="PASS" starttime="20200404 15:05:18.520" endtime="20200404 15:05:19.394"></status>
</suite>
<status status="PASS" starttime="20200404 15:05:18.496" endtime="20200404 15:05:19.395"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="7" fail="2">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="2" info="non-critical">SimpleTest</stat>
<stat pass="1" fail="0">HardTest</stat>
<stat pass="2" fail="0">MiddleTest</stat>
</tag>
<suite>
<stat pass="7" fail="2" id="s1" name="Jenkins">Jenkins</stat>
<stat pass="7" fail="2" id="s1-s1" name="Tests">Jenkins.Tests</stat>
<stat pass="3" fail="0" id="s1-s1-s1" name="Array Test">Jenkins.Tests.Array Test</stat>
<stat pass="0" fail="2" id="s1-s1-s2" name="Number Test">Jenkins.Tests.Number Test</stat>
<stat pass="4" fail="0" id="s1-s1-s3" name="Statistics Test">Jenkins.Tests.Statistics Test</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200404 15:05:18.549" level="ERROR">Error in file '/Users/georgy/Dell/jenkins/jenkins/tests/number_test.robot': Importing test library './libraries.Numbers' failed: ModuleNotFoundError: No module named './libraries'
Traceback (most recent call last):
  None
PYTHONPATH:
  /Users/georgy/Dell/jenkins/jenkins
  /Library/Frameworks/Python.framework/Versions/3.7/lib/python37.zip
  /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7
  /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload
  /Users/georgy/Library/Python/3.7/lib/python/site-packages
  /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages</msg>
</errors>
</robot>
