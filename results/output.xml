<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on darwin)" generated="20200329 12:27:23.081" rpa="false">
<suite id="s1" name="Jenkins" source="/Users/georgy/Dell/jenkins/jenkins">
<suite id="s1-s1" name="Tests" source="/Users/georgy/Dell/jenkins/jenkins/tests">
<suite id="s1-s1-s1" name="Array Test" source="/Users/georgy/Dell/jenkins/jenkins/tests/array_test.robot">
<test id="s1-s1-s1-t1" name="Generatiing valid array.">
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${size}</arg>
<arg>${minimum}</arg>
<arg>${maximum}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200329 12:27:23.110" level="INFO">${array} = [2, 8, 3, 4, 5, 8, 10, 3, 7, 10, 6, 4, 9, 4, 3, 10, 3, 10, 6, 1, 3, 7, 8, 2, 10, 1, 2, 8, 10, 2, 4, 10, 2, 9, 9, 9, 2, 1, 9, 9, 4, 7, 4, 2, 7, 8, 9, 6, 8, 10, 4, 10, 7, 9, 9, 2, 4, 5, 4, 5, 6, 10, 9, ...</msg>
<status status="PASS" starttime="20200329 12:27:23.110" endtime="20200329 12:27:23.110"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200329 12:27:23.114" level="INFO">${length} = 100</msg>
<status status="PASS" starttime="20200329 12:27:23.110" endtime="20200329 12:27:23.114"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.115" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200329 12:27:23.115" endtime="20200329 12:27:23.115"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200329 12:27:23.116" level="INFO">${max} = 10</msg>
<status status="PASS" starttime="20200329 12:27:23.115" endtime="20200329 12:27:23.116"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.116" endtime="20200329 12:27:23.116"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${minimum}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.117" endtime="20200329 12:27:23.117"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${maximum}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.117" endtime="20200329 12:27:23.117"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200329 12:27:23.109" endtime="20200329 12:27:23.117" critical="no"></status>
</test>
<test id="s1-s1-s1-t2" name="Generatiing valid array using decorator.">
<kw name="Generate 10 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200329 12:27:23.118" level="INFO">${result} = [6, 7, 10, 2, 4, 3, 3, 6, 8, 5]</msg>
<status status="PASS" starttime="20200329 12:27:23.118" endtime="20200329 12:27:23.118"></status>
</kw>
<msg timestamp="20200329 12:27:23.118" level="INFO">${array} = [6, 7, 10, 2, 4, 3, 3, 6, 8, 5]</msg>
<status status="PASS" starttime="20200329 12:27:23.118" endtime="20200329 12:27:23.118"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200329 12:27:23.119" level="INFO">${length} = 10</msg>
<status status="PASS" starttime="20200329 12:27:23.119" endtime="20200329 12:27:23.119"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.120" level="INFO">${min} = 2</msg>
<status status="PASS" starttime="20200329 12:27:23.119" endtime="20200329 12:27:23.120"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200329 12:27:23.121" level="INFO">${max} = 10</msg>
<status status="PASS" starttime="20200329 12:27:23.120" endtime="20200329 12:27:23.121"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.121" endtime="20200329 12:27:23.121"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.121" endtime="20200329 12:27:23.122"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${10}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.122" endtime="20200329 12:27:23.122"></status>
</kw>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" starttime="20200329 12:27:23.117" endtime="20200329 12:27:23.122" critical="yes"></status>
</test>
<test id="s1-s1-s1-t3" name="Generating valid array and search even and odd numbers.">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>even</arg>
<arg>odd</arg>
</arguments>
<assign>
<var>${types}</var>
</assign>
<msg timestamp="20200329 12:27:23.123" level="INFO">${types} = ['even', 'odd']</msg>
<status status="PASS" starttime="20200329 12:27:23.123" endtime="20200329 12:27:23.123"></status>
</kw>
<kw name="Generate 100 numbers, from 1 to 10">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate integer array" library="libraries.ArrayGeneratorLibrary">
<arguments>
<arg>${n}</arg>
<arg>${from}</arg>
<arg>${to}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200329 12:27:23.124" level="INFO">${result} = [10, 2, 5, 5, 3, 3, 2, 7, 3, 4, 2, 7, 9, 5, 9, 3, 5, 7, 4, 6, 9, 6, 2, 1, 10, 6, 5, 10, 3, 5, 9, 1, 7, 5, 7, 1, 6, 5, 7, 10, 7, 9, 3, 3, 9, 4, 6, 8, 5, 1, 4, 3, 7, 3, 8, 6, 6, 6, 8, 8, 9, 10, 7, 4, 1,...</msg>
<status status="PASS" starttime="20200329 12:27:23.123" endtime="20200329 12:27:23.124"></status>
</kw>
<msg timestamp="20200329 12:27:23.124" level="INFO">${array} = [10, 2, 5, 5, 3, 3, 2, 7, 3, 4, 2, 7, 9, 5, 9, 3, 5, 7, 4, 6, 9, 6, 2, 1, 10, 6, 5, 10, 3, 5, 9, 1, 7, 5, 7, 1, 6, 5, 7, 10, 7, 9, 3, 3, 9, 4, 6, 8, 5, 1, 4, 3, 7, 3, 8, 6, 6, 6, 8, 8, 9, 10, 7, 4, 1,...</msg>
<status status="PASS" starttime="20200329 12:27:23.123" endtime="20200329 12:27:23.124"></status>
</kw>
<kw name="${type} IN [ @{types} ]" type="for">
<kw name="${type} = even" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find even number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 == 0]</arg>
</arguments>
<assign>
<var>${evens}</var>
</assign>
<msg timestamp="20200329 12:27:23.125" level="INFO">${evens} = [10, 2, 2, 4, 2, 4, 6, 6, 2, 10, 6, 10, 6, 10, 4, 6, 8, 4, 8, 6, 6, 6, 8, 8, 10, 4, 10, 4, 6, 6, 2, 2, 8, 8, 6, 8, 2, 2, 6, 8, 6, 6, 4, 10, 10]</msg>
<status status="PASS" starttime="20200329 12:27:23.124" endtime="20200329 12:27:23.125"></status>
</kw>
<status status="PASS" starttime="20200329 12:27:23.124" endtime="20200329 12:27:23.126"></status>
</kw>
<msg timestamp="20200329 12:27:23.126" level="INFO">${numbers} = [10, 2, 2, 4, 2, 4, 6, 6, 2, 10, 6, 10, 6, 10, 4, 6, 8, 4, 8, 6, 6, 6, 8, 8, 10, 4, 10, 4, 6, 6, 2, 2, 8, 8, 6, 8, 2, 2, 6, 8, 6, 6, 4, 10, 10]</msg>
<status status="PASS" starttime="20200329 12:27:23.124" endtime="20200329 12:27:23.126"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200329 12:27:23.126" level="INFO">${length} = 45</msg>
<status status="PASS" starttime="20200329 12:27:23.126" endtime="20200329 12:27:23.126"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.126" endtime="20200329 12:27:23.127"></status>
</kw>
<status status="PASS" starttime="20200329 12:27:23.124" endtime="20200329 12:27:23.127"></status>
</kw>
<kw name="${type} = odd" type="foritem">
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Find ${type} number in the list</arg>
<arg>${array}</arg>
</arguments>
<assign>
<var>${numbers}</var>
</assign>
<kw name="Find odd number in the list">
<arguments>
<arg>${array}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>[i for i in $list if i % 2 != 0]</arg>
</arguments>
<assign>
<var>${odds}</var>
</assign>
<msg timestamp="20200329 12:27:23.128" level="INFO">${odds} = [5, 5, 3, 3, 7, 3, 7, 9, 5, 9, 3, 5, 7, 9, 1, 5, 3, 5, 9, 1, 7, 5, 7, 1, 5, 7, 7, 9, 3, 3, 9, 5, 1, 3, 7, 3, 9, 7, 1, 1, 7, 1, 5, 1, 9, 3, 5, 5, 7, 3, 7, 7, 5, 3, 9]</msg>
<status status="PASS" starttime="20200329 12:27:23.127" endtime="20200329 12:27:23.128"></status>
</kw>
<status status="PASS" starttime="20200329 12:27:23.127" endtime="20200329 12:27:23.128"></status>
</kw>
<msg timestamp="20200329 12:27:23.128" level="INFO">${numbers} = [5, 5, 3, 3, 7, 3, 7, 9, 5, 9, 3, 5, 7, 9, 1, 5, 3, 5, 9, 1, 7, 5, 7, 1, 5, 7, 7, 9, 3, 3, 9, 5, 1, 3, 7, 3, 9, 7, 1, 1, 7, 1, 5, 1, 9, 3, 5, 5, 7, 3, 7, 7, 5, 3, 9]</msg>
<status status="PASS" starttime="20200329 12:27:23.127" endtime="20200329 12:27:23.128"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($numbers)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200329 12:27:23.129" level="INFO">${length} = 55</msg>
<status status="PASS" starttime="20200329 12:27:23.128" endtime="20200329 12:27:23.129"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt;= ${1}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.129" endtime="20200329 12:27:23.129"></status>
</kw>
<status status="PASS" starttime="20200329 12:27:23.127" endtime="20200329 12:27:23.129"></status>
</kw>
<status status="PASS" starttime="20200329 12:27:23.124" endtime="20200329 12:27:23.129"></status>
</kw>
<tags>
<tag>HardTest</tag>
</tags>
<status status="PASS" starttime="20200329 12:27:23.122" endtime="20200329 12:27:23.129" critical="yes"></status>
</test>
<doc>Python and Robot Framework.</doc>
<status status="PASS" starttime="20200329 12:27:23.105" endtime="20200329 12:27:23.129"></status>
</suite>
<suite id="s1-s1-s2" name="Number Test" source="/Users/georgy/Dell/jenkins/jenkins/tests/number_test.robot">
<test id="s1-s1-s2-t1" name="Search for the minimum.">
<kw name="Find minimum" library="libraries.Numbers">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.134" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200329 12:27:23.134" endtime="20200329 12:27:23.134"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.134" endtime="20200329 12:27:23.134"></status>
</kw>
<kw name="Find minimum" library="libraries.Numbers">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.135" level="INFO">${min} = -5</msg>
<status status="PASS" starttime="20200329 12:27:23.134" endtime="20200329 12:27:23.135"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${-5}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.135" endtime="20200329 12:27:23.135"></status>
</kw>
<kw name="Find minimum" library="libraries.Numbers">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.135" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200329 12:27:23.135" endtime="20200329 12:27:23.135"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.135" endtime="20200329 12:27:23.136"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200329 12:27:23.133" endtime="20200329 12:27:23.136" critical="no"></status>
</test>
<test id="s1-s1-s2-t2" name="Search for the maximum.">
<kw name="Find maximum" library="libraries.Numbers">
<arguments>
<arg>${5}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.136" level="INFO">${min} = 10</msg>
<status status="PASS" starttime="20200329 12:27:23.136" endtime="20200329 12:27:23.136"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${10}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.136" endtime="20200329 12:27:23.137"></status>
</kw>
<kw name="Find maximum" library="libraries.Numbers">
<arguments>
<arg>${0}</arg>
<arg>${-5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.137" level="INFO">${min} = 0</msg>
<status status="PASS" starttime="20200329 12:27:23.137" endtime="20200329 12:27:23.137"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.137" endtime="20200329 12:27:23.137"></status>
</kw>
<kw name="Find maximum" library="libraries.Numbers">
<arguments>
<arg>${5}</arg>
<arg>${5}</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.138" level="INFO">${min} = 5</msg>
<status status="PASS" starttime="20200329 12:27:23.138" endtime="20200329 12:27:23.138"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${min}</arg>
<arg>${5}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.138" endtime="20200329 12:27:23.138"></status>
</kw>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200329 12:27:23.136" endtime="20200329 12:27:23.138" critical="no"></status>
</test>
<doc>Robot Framework tests.</doc>
<status status="PASS" starttime="20200329 12:27:23.130" endtime="20200329 12:27:23.139"></status>
</suite>
<suite id="s1-s1-s3" name="Statistics Test" source="/Users/georgy/Dell/jenkins/jenkins/tests/statistics_test.robot">
<test id="s1-s1-s3-t1" name="Generate valid uniform array">
<kw name="Generate uniform array" library="libraries.Distributions">
<arguments>
<arg>${low}</arg>
<arg>${up}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200329 12:27:23.444" level="INFO">${array} = [83 64 76 ... 66 55 23]</msg>
<status status="PASS" starttime="20200329 12:27:23.443" endtime="20200329 12:27:23.444"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200329 12:27:23.445" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200329 12:27:23.444" endtime="20200329 12:27:23.445"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.446" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200329 12:27:23.445" endtime="20200329 12:27:23.446"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200329 12:27:23.448" level="INFO">${max} = 99</msg>
<status status="PASS" starttime="20200329 12:27:23.446" endtime="20200329 12:27:23.448"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($up + $low) / 2</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200329 12:27:23.449" level="INFO">${m_theory} = 50.5</msg>
<status status="PASS" starttime="20200329 12:27:23.448" endtime="20200329 12:27:23.449"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200329 12:27:23.450" level="INFO">${m_practice} = 50.3117</msg>
<status status="PASS" starttime="20200329 12:27:23.449" endtime="20200329 12:27:23.450"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(($up - $low + 1)**2 - 1) / 12</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200329 12:27:23.451" level="INFO">${d_theory} = 833.25</msg>
<status status="PASS" starttime="20200329 12:27:23.450" endtime="20200329 12:27:23.451"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200329 12:27:23.476" level="INFO">${deviation} = 816.182</msg>
<status status="PASS" starttime="20200329 12:27:23.451" endtime="20200329 12:27:23.476"></status>
</kw>
<msg timestamp="20200329 12:27:23.476" level="INFO">${d_practice} = 816.182</msg>
<status status="PASS" starttime="20200329 12:27:23.451" endtime="20200329 12:27:23.476"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.476" endtime="20200329 12:27:23.476"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${low}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.476" endtime="20200329 12:27:23.477"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${up}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.477" endtime="20200329 12:27:23.477"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.477" endtime="20200329 12:27:23.477"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.477" endtime="20200329 12:27:23.478"></status>
</kw>
<doc>Uniform distribution test.Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200329 12:27:23.443" endtime="20200329 12:27:23.478" critical="no"></status>
</test>
<test id="s1-s1-s3-t2" name="Generate valid binomial array">
<kw name="Generate binomial array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${n}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200329 12:27:23.479" level="INFO">${array} = [ 7  8  9 ... 11 13 10]</msg>
<status status="PASS" starttime="20200329 12:27:23.478" endtime="20200329 12:27:23.479"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200329 12:27:23.480" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200329 12:27:23.480" endtime="20200329 12:27:23.480"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.482" level="INFO">${min} = 2</msg>
<status status="PASS" starttime="20200329 12:27:23.480" endtime="20200329 12:27:23.482"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>max($array)</arg>
</arguments>
<assign>
<var>${max}</var>
</assign>
<msg timestamp="20200329 12:27:23.483" level="INFO">${max} = 19</msg>
<status status="PASS" starttime="20200329 12:27:23.482" endtime="20200329 12:27:23.483"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$n * $p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200329 12:27:23.484" level="INFO">${m_theory} = 10.0</msg>
<status status="PASS" starttime="20200329 12:27:23.483" endtime="20200329 12:27:23.484"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200329 12:27:23.484" level="INFO">${m_practice} = 10.0054</msg>
<status status="PASS" starttime="20200329 12:27:23.484" endtime="20200329 12:27:23.484"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>($p * $n * (1-$p))</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200329 12:27:23.485" level="INFO">${d_theory} = 5.0</msg>
<status status="PASS" starttime="20200329 12:27:23.485" endtime="20200329 12:27:23.485"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200329 12:27:23.511" level="INFO">${deviation} = 4.9514</msg>
<status status="PASS" starttime="20200329 12:27:23.486" endtime="20200329 12:27:23.511"></status>
</kw>
<msg timestamp="20200329 12:27:23.511" level="INFO">${d_practice} = 4.9514</msg>
<status status="PASS" starttime="20200329 12:27:23.485" endtime="20200329 12:27:23.511"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.511" endtime="20200329 12:27:23.512"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.512" endtime="20200329 12:27:23.512"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${max} &lt;= ${n}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.512" endtime="20200329 12:27:23.512"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.512" endtime="20200329 12:27:23.513"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.513" endtime="20200329 12:27:23.513"></status>
</kw>
<doc>Binomial distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200329 12:27:23.478" endtime="20200329 12:27:23.513" critical="no"></status>
</test>
<test id="s1-s1-s3-t3" name="Generate valid geometric array">
<kw name="Generate geometric array" library="libraries.Distributions">
<arguments>
<arg>${p}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${array}</var>
</assign>
<msg timestamp="20200329 12:27:23.515" level="INFO">${array} = [2 3 2 ... 1 1 2]</msg>
<status status="PASS" starttime="20200329 12:27:23.514" endtime="20200329 12:27:23.515"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200329 12:27:23.516" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200329 12:27:23.515" endtime="20200329 12:27:23.516"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.518" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200329 12:27:23.516" endtime="20200329 12:27:23.518"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>1/$p</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200329 12:27:23.518" level="INFO">${m_theory} = 2.0</msg>
<status status="PASS" starttime="20200329 12:27:23.518" endtime="20200329 12:27:23.518"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200329 12:27:23.519" level="INFO">${m_practice} = 1.987</msg>
<status status="PASS" starttime="20200329 12:27:23.518" endtime="20200329 12:27:23.519"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>(1-$p)/($p**2)</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200329 12:27:23.520" level="INFO">${d_theory} = 2.0</msg>
<status status="PASS" starttime="20200329 12:27:23.519" endtime="20200329 12:27:23.520"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200329 12:27:23.544" level="INFO">${deviation} = 1.9542</msg>
<status status="PASS" starttime="20200329 12:27:23.520" endtime="20200329 12:27:23.545"></status>
</kw>
<msg timestamp="20200329 12:27:23.545" level="INFO">${d_practice} = 1.9542</msg>
<status status="PASS" starttime="20200329 12:27:23.520" endtime="20200329 12:27:23.545"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.545" endtime="20200329 12:27:23.545"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.545" endtime="20200329 12:27:23.546"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.546" endtime="20200329 12:27:23.546"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.546" endtime="20200329 12:27:23.547"></status>
</kw>
<doc>geometric distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>SimpleTest</tag>
</tags>
<status status="PASS" starttime="20200329 12:27:23.513" endtime="20200329 12:27:23.547" critical="no"></status>
</test>
<test id="s1-s1-s3-t4" name="Generate valid poisson array">
<kw name="Generate poisson array with mu ${mu} and size ${size}">
<assign>
<var>${array}</var>
</assign>
<kw name="Generate poisson array" library="libraries.Distributions">
<arguments>
<arg>${mu}</arg>
<arg>${size}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200329 12:27:23.549" level="INFO">${result} = [ 6 12 10 ... 13 10 14]</msg>
<status status="PASS" starttime="20200329 12:27:23.547" endtime="20200329 12:27:23.549"></status>
</kw>
<msg timestamp="20200329 12:27:23.549" level="INFO">${array} = [ 6 12 10 ... 13 10 14]</msg>
<status status="PASS" starttime="20200329 12:27:23.547" endtime="20200329 12:27:23.549"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>len($array)</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20200329 12:27:23.550" level="INFO">${length} = 10000</msg>
<status status="PASS" starttime="20200329 12:27:23.549" endtime="20200329 12:27:23.550"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>min($array)</arg>
</arguments>
<assign>
<var>${min}</var>
</assign>
<msg timestamp="20200329 12:27:23.551" level="INFO">${min} = 1</msg>
<status status="PASS" starttime="20200329 12:27:23.550" endtime="20200329 12:27:23.551"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${m_theory}</var>
</assign>
<msg timestamp="20200329 12:27:23.552" level="INFO">${m_theory} = 10</msg>
<status status="PASS" starttime="20200329 12:27:23.552" endtime="20200329 12:27:23.552"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$array.mean()</arg>
</arguments>
<assign>
<var>${m_practice}</var>
</assign>
<msg timestamp="20200329 12:27:23.553" level="INFO">${m_practice} = 9.9914</msg>
<status status="PASS" starttime="20200329 12:27:23.552" endtime="20200329 12:27:23.553"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$mu</arg>
</arguments>
<assign>
<var>${d_theory}</var>
</assign>
<msg timestamp="20200329 12:27:23.554" level="INFO">${d_theory} = 10</msg>
<status status="PASS" starttime="20200329 12:27:23.553" endtime="20200329 12:27:23.554"></status>
</kw>
<kw name="Find deviation">
<arguments>
<arg>${array}</arg>
<arg>${m_theory}</arg>
</arguments>
<assign>
<var>${d_practice}</var>
</assign>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>sum((xi - ${m_theory})**2 for xi in $array) / len($array)</arg>
</arguments>
<assign>
<var>${deviation}</var>
</assign>
<msg timestamp="20200329 12:27:23.561" level="INFO">${deviation} = 10.0684</msg>
<status status="PASS" starttime="20200329 12:27:23.554" endtime="20200329 12:27:23.561"></status>
</kw>
<msg timestamp="20200329 12:27:23.561" level="INFO">${d_practice} = 10.0684</msg>
<status status="PASS" starttime="20200329 12:27:23.554" endtime="20200329 12:27:23.561"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${length}</arg>
<arg>${size}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.561" endtime="20200329 12:27:23.561"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${min} &gt;= ${0}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.562" endtime="20200329 12:27:23.562"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${m_theory} - ${m_practice}) / max(${m_practice}, ${m_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.562" endtime="20200329 12:27:23.562"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>abs(${d_theory} - ${d_practice}) / max(${d_practice}, ${d_theory}) &lt;= ${e}</arg>
</arguments>
<status status="PASS" starttime="20200329 12:27:23.562" endtime="20200329 12:27:23.563"></status>
</kw>
<doc>Poisson distribution test. Comparison of expectation and deviation.</doc>
<tags>
<tag>MiddleTest</tag>
</tags>
<status status="PASS" starttime="20200329 12:27:23.547" endtime="20200329 12:27:23.563" critical="yes"></status>
</test>
<doc>Discrete distribution and Robot Framework.</doc>
<status status="PASS" starttime="20200329 12:27:23.139" endtime="20200329 12:27:23.563"></status>
</suite>
<status status="PASS" starttime="20200329 12:27:23.103" endtime="20200329 12:27:23.566"></status>
</suite>
<status status="PASS" starttime="20200329 12:27:23.082" endtime="20200329 12:27:23.567"></status>
</suite>
<statistics>
<total>
<stat pass="3" fail="0">Critical Tests</stat>
<stat pass="9" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="6" fail="0" info="non-critical">SimpleTest</stat>
<stat pass="1" fail="0">HardTest</stat>
<stat pass="2" fail="0">MiddleTest</stat>
</tag>
<suite>
<stat pass="9" fail="0" id="s1" name="Jenkins">Jenkins</stat>
<stat pass="9" fail="0" id="s1-s1" name="Tests">Jenkins.Tests</stat>
<stat pass="3" fail="0" id="s1-s1-s1" name="Array Test">Jenkins.Tests.Array Test</stat>
<stat pass="2" fail="0" id="s1-s1-s2" name="Number Test">Jenkins.Tests.Number Test</stat>
<stat pass="4" fail="0" id="s1-s1-s3" name="Statistics Test">Jenkins.Tests.Statistics Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
