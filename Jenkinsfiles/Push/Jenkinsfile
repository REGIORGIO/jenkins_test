#!groovy
void setBuildStatus(String message, String state) {
  step([
      $class: "GitHubCommitStatusSetter",
      reposSource: [$class: "ManuallyEnteredRepositorySource", url: "https://github.com/REGIORGIO/jenkins_test"],
      contextSource: [$class: "ManuallyEnteredCommitContextSource", context: message],
      errorHandlers: [[$class: "ChangingBuildStatusErrorHandler", result: "UNSTABLE"]],
      statusResultSource: [ $class: "ConditionalStatusResultSource", results: [[$class: "AnyBuildResult", message: message, state: state]] ]
  ]);
}

pipeline {
   agent { 
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }

   stages {
       stage('Push') {
            steps {
                // sh 'cat /home/georgy/jenkins/git_token.txt | docker login docker.pkg.github.com -u REGIORGIO --password-stdin'
                // sh 'docker build -t docker.pkg.github.com/regiorgio/jenkins_test/simple_python_script:latest .'
                // sh 'docker push docker.pkg.github.com/regiorgio/jenkins_test/simple_python_script:latest'
            }
        }
         
   }
    post {
         failure {
              setBuildStatus("Push failed", "FAILURE");
            }
           
          success {
            setBuildStatus("Push succeeded", "SUCCESS");
            
          }
         
  } 
}  
